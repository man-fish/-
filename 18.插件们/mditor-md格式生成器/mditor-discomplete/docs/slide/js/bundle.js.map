{"version":3,"sources":["webpack:///js/bundle.js","webpack:///webpack/bootstrap 6b8d869b031e26d9d064","webpack:///./src/app.js","webpack:///./~/._mokit@3.0.15@mokit/lib/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/info.json","webpack:///./~/._ntils@2.0.15@ntils/index.js","webpack:///./~/._cify@2.1.11@cify/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/watcher/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/observer/index.js","webpack:///./~/._babel-runtime@6.23.0@babel-runtime/core-js/object/keys.js","webpack:///./~/._core-js@2.4.1@core-js/library/fn/object/keys.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/es6.object.keys.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_to-object.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_defined.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_object-keys.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_object-keys-internal.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_has.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_to-iobject.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_iobject.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_cof.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_array-includes.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_to-length.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_to-integer.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_to-index.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_shared-key.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_shared.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_global.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_uid.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_enum-bug-keys.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_object-sap.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_export.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_core.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_ctx.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_a-function.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_hide.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_object-dp.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_an-object.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_is-object.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_ie8-dom-define.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_descriptors.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_fails.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_dom-create.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_to-primitive.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_property-desc.js","webpack:///./~/._babel-runtime@6.23.0@babel-runtime/core-js/object/get-own-property-descriptor.js","webpack:///./~/._core-js@2.4.1@core-js/library/fn/object/get-own-property-descriptor.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_object-gopd.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/_object-pie.js","webpack:///./~/._babel-runtime@6.23.0@babel-runtime/core-js/object/define-property.js","webpack:///./~/._core-js@2.4.1@core-js/library/fn/object/define-property.js","webpack:///./~/._core-js@2.4.1@core-js/library/modules/es6.object.define-property.js","webpack:///./~/._mokit@3.0.15@mokit/lib/events/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/compiler.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directive.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/expression.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/text.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/each.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/scope.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/if.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/prop.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/attr.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/on.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/inner-html.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/inner-text.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/prevent.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/id.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/cloak.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/show.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/model/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/model/select.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/model/editable.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/model/input.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/model/radio.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/model/checkbox.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/model/prop.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/directives/attribute.js","webpack:///./~/._mokit@3.0.15@mokit/lib/template/template.js","webpack:///./~/._mokit@3.0.15@mokit/lib/component/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/component/component.js","webpack:///./~/._mokit@3.0.15@mokit/lib/component/component-directive.js","webpack:///./~/._mokit@3.0.15@mokit/lib/component/components/index.js","webpack:///./~/._mokit@3.0.15@mokit/lib/component/components/view.js","webpack:///./~/._mokit-router@1.0.7@mokit-router/lib/index.js","webpack:///./~/._mokit-plugin@1.0.5@mokit-plugin/index.js","webpack:///./~/._mokit-router@1.0.7@mokit-router/lib/router.js","webpack:///./~/._general-router@0.0.3@general-router/lib/index.js","webpack:///./~/._mokit-router@1.0.7@mokit-router/lib/drivers/hash.js","webpack:///./~/._mokit-router@1.0.7@mokit-router/lib/components/router-view.js","webpack:///./~/._mokit-router@1.0.7@mokit-router/lib/directives/link.js","webpack:///./~/._mokit-touch@1.0.1@mokit-touch/lib/index.js","webpack:///./~/._mokit-touch@1.0.1@mokit-touch/lib/touch.js","webpack:///./~/._mokit-transition@1.0.1@mokit-transition/lib/index.js","webpack:///./~/._mokit-transition@1.0.1@mokit-transition/lib/transition.js","webpack:///./~/._mokit-transition@1.0.1@mokit-transition/lib/classes.js","webpack:///./~/._mokit-transition@1.0.1@mokit-transition/lib/utils.js","webpack:///./src/components/frame/index.js","webpack:///./src/components/toolbar/index.js","webpack:///./src/common/random.js","webpack:///./src/components/toolbar/index.html","webpack:///./src/components/frame/index.html","webpack:///./src/components/slide/index.js","webpack:///./src/components/slide/index.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","mokit","Router","Touch","Transition","Frame","Slide","use","router","map","/","/slide/{index}","start","document","body","info","utils","Class","Watcher","Observer","Template","Component","EventEmitter","copy","version","plugin","install","isFunction","Error","this","name","ntils","noop","isNull","obj","trim","str","replace","str1","str2","RegExp","startWith","indexOf","contains","endWith","length","has","hasProperty","hasOwnProperty","isString","String","isNumber","Number","isBoolean","Boolean","isElement","window","Element","tagName","nodeType","nodeName","attributes","ownerDocument","isText","Text","isObject","isArray","v1","Object","prototype","toString","v2","Array","v3","splice","v4","isDate","val","Date","isRegexp","toArray","array","slice","toDate","self","each","list","handler","scope","listLength","i","rs","key","formatDate","date","format","dict","placeholder","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","w+","getDay","q+","Math","floor","S","getMilliseconds","test","$1","getFullYear","substr","value","src","dst","igonres","getOwnPropertyDescriptor","defineProperty","ex","clone","objClone","constructor","forEach","defineFreezeProp","mix","mode","keys","enumerable","configurable","writable","err","push","create","proto","props","Cotr","setPrototypeOf","__proto__","getPrototypeOf","deepEqual","a","b","aKeys","bKeys","allKeys","concat","checkedMap","result","fromTo","fromNum","toNum","step","abs","newGuid","S4","random","substring","fn","buffer","setByPath","path","split","index","getByPath","unique","newArray","getFunctionArgumentNames","parts","filter","short","maxLength","strLength","trimLength","firstUpper","toLowerCase","escapeRegExp","parseDom","_PDD_","createElement","innerHTML","firstNode","childNodes","cloneNode","ClassFactory","options","$name","$extends","$static","superPrototype","$super","_super_called_","_super_ret_","apply","arguments","bind","$extend","calcor","first","calc","force","newValue","_interopRequireDefault","__esModule","default","_keys","_keys2","_getOwnPropertyDescriptor","_getOwnPropertyDescriptor2","_defineProperty","_defineProperty2","OBSERVER_PROP_NAME","CHANGE_EVENT_NAME","EVENT_MAX_DISPATCH_LAYER","IGNORE_REGEXPS","target","observer","set","isIgnore","get","shadow","oldValue","childObserver","addChild","removeChild","emitChange","_wrapArray","names","_getPropertyNames","desc","clearReference","child","dispatch","eventName","event","_src_","_layer_","emit","parents","item","parent","parentEvent","root","foundIndex","items","pop","shift","startIndex","endIndex","observe","word","some","re","toObject","$keys","it","defined","undefined","TypeError","enumBugKeys","O","toIObject","arrayIndexOf","IE_PROTO","object","IObject","cof","propertyIsEnumerable","toLength","toIndex","IS_INCLUDES","$this","el","fromIndex","toInteger","min","ceil","isNaN","max","shared","uid","global","SHARED","store","Function","__g","px","$export","core","fails","KEY","exec","exp","F","ctx","hide","PROTOTYPE","type","source","own","out","IS_FORCED","IS_GLOBAL","G","IS_STATIC","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","U","__e","aFunction","that","dP","createDesc","f","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","e","is","valueOf","bitmap","$Object","$getOwnPropertyDescriptor","pIE","gOPD","emitter","_emitter_","_isNative_","_isNativeObject","_target_","_listeners_","on","$on","$addListener","addListener","off","$off","$removeListener","removeListener","$emit","addEventListener","removeEventListener","dispatchEvent","listener","capture","_addNativeEventListener","_maxListeners","_removeNativeEventListener","_listener","data","canBubble","cancelAble","_emitNativeEvent","stopPropagation","descriptor","_events","createEvent","initEvent","register","Compiler","Directive","Expression","directives","commonDirectives","DEFAULT_PREFIX","prefix","elementDirectives","attributeDirectives","registerDirectives","directive","fullName","TE","toUpperCase","_parseAttrInfo","attrName","decorates","_createDirectiveInstance","compiler","_bindHandler","sort","level","boundDirectives","remove","attribute","node","removeAttribute","final","_compileElement","ElementDirective","_compileAttributes","attrInfo","AttrDirective","directiveOptions","expression","literal","mixed","_compileChildren","childNode","_compiled_","childHandler","compile","children","execute","dispose","unbind","element","classOptions","TA","LG","DirectiveClass","instanceOptions","update","_value_","LP","LS","LE","LA","LC","code","func","_compileMixedCode","_compileCode","_escapeEOL","_wrapCode","_createFunction","statements","_parseMixedCode","join","token","isExpr","tokens","char","nextChar","_escapeCode","#text","if","prop","attr","html","text","prevent","cloak","show","model","*","expr","nodeValue","Scope","mountNode","createTextNode","parentNode","insertBefore","parseExpr","eachItems","eachType","fnText","keyName","valueName","_this","currentEachKeys","itemsFragment","createDocumentFragment","eachTarget","newScope","oldItem","newItem","appendChild","k","_handler","$substitute","$target","setAttribute","attrValue","eventTarget","emiter","$event","innerText","style","display","SelectDirective","EditableDirective","InputDirective","RadioDirective","CheckboxDirective","PropDirective","getAttribute","isContentEditable","backExpr","selectedOptions","multiple","option","selected","checked","bindProp","watcher","$watch","$unWatch","computedName","computedValue","nameExpr","valueExpr","newComputedName","newComputeValue","render","_update","_updateTimer","clearTimeout","setTimeout","_onBind","_bound","disableFirst","$self","components","component","classOpts","mixes","extendComponent","extend","mixedClassOpts","mixItem","$options","ComponentClass","instanceOpts","$class","_onTemplateUpdate_","_createdData_","_createProperties_","properties","_createWatches_","watches","watch","$directives","_importDirectives_","$components","_importComponents_","$setParent","$callHook","$mount","$compile","$parent","$removeChild","$addChild","$children","$root","ComponentDirective","args","$data","$properties","hasGetterOrSetter","_observer_","_watchers_","calcer","findIndex","w","_createElement_","_created_","$template","$element","_template_","deferReady","append","_mounted_","_mountNode","_removed_","$appendTo","$remove","$dispatch","$broadcast","$dispose","template","methods","handleAttrs","handleContents","attrs","directiveRegexp","placeHandlers","places","querySelectorAll","place","contents","selector","content","_ready_","View","_transitioning","newComponentInstance","oldComponentInstance","componentInstance","transition","prep","go","_Component","_transition","clean","init","switchTo","newComponent","oldComponent","done","Plugin","factory","thunk","opts","entity","RouterBase","HashDirver","RouterView","LinkDirective","ROOT_PATH","view","dirvier","_onChanged","_view","_router","fromPath","toPath","resolveUri","routes","route","query","parseQuery","pattern","addOne","toUri","fromUri","baseDir","lastIndexOf","uriParts","uriHash","newUriParts","part","queryString","location","href","pairs","pair","strs","app","owner","$router","table","add","PLACE_HOLDER_EXPR","COLLECT_EXPR_STR","GREEDY_COLLECT_EXPR_STR","routeInstanceProto","actionUrl","action","withoutActionUrl","_parseKeyDef","_keyDefStr","keyDefStr","keyDefParts","keyDef","greedy","lastIndex","keyDefs","match","exprStr","collectExprStr","defaultMethods","method","_name","_route","nameParts","targetParts","controller","_parseDynamicAction","params","_createRouteInstance","srcRoute","url","routeInstance","urlParts","handleActionFromUrl","routeArray","values","failed","parseActionFromUrl","_routeArray","_getForActionFromUrl","ctrlRouteUrl","ctrlRouteArray","actionFromUrl","matchByMethod","SEPARATOR","HashDriver","_onChange","hash","onCreated","SUPPORT_TOUCH","START_EVENT_NAME","MOVE_EVENT_NAME","END_EVENT_NAME","CUSTOM_EVENT_NAMES","swipeDurationThreshold","swipeHorizontalDistanceThreshold","swipeVerticalDistanceThreshold","holdDurationThreshold","dblDurationThreshold","scrollSupressionThreshold","touchstart","point","changedTouches","startPoint","endPoint","x","pageX","y","pageY","timeStamp","createHoldHandler","isPointDown","holdTimer","holdHandler","taphold","clearHoldHandler","getTouchInfo","existStartAndStop","horizontalDistance","verticalDistance","horizontalDistanceValue","verticalDistanceVlaue","isHorizontal","isVertical","sHorizontal","isSwipeMove","isSwipeTime","isHoldTime","direction","touchmove","stopBubble","swipe","dbltap","PreTapTime","classes","addClass","removeClass","doneCount","newEmitter","oldEmitter","checkDone","ANIMATION_END_EVENT_NAME","leave","enter","num","setClassNames","classNames","state","className","classList","BROWSER_PREFIX","styles","getComputedStyle","documentElement","OLink","Toolbar","slides","onReady","keyCode","toolbar","prev","next","togglePlay","onSwipeLeft","onSwipeRight","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","exitFullscreen","webkitCancelFullScreen","webkitExitFullScreen","mozCancelFullScreen","total","isPlay","$route","parseInt","effect","slide","play","stop","bgcolor","bgimage","align","onCreate"],"mappings":"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","file":"js/bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\t__webpack_require__(1);\n\t__webpack_require__(9);\n\t\n\tvar mokit = __webpack_require__(10);\n\tvar Router = __webpack_require__(92);\n\tvar Touch = __webpack_require__(99);\n\tvar Transition = __webpack_require__(101);\n\tvar Frame = __webpack_require__(106);\n\tvar Slide = __webpack_require__(111);\n\t\n\tmokit.use(Router);\n\tmokit.use(Touch);\n\tmokit.use(Transition);\n\t\n\tvar router = new mokit.Router();\n\t\n\trouter.map({\n\t  '/': Slide,\n\t  '/slide/{index}': Slide\n\t});\n\t\n\trouter.start(Frame, document.body);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar info = __webpack_require__(11);\n\tvar utils = __webpack_require__(12);\n\tvar Class = __webpack_require__(13);\n\tvar Watcher = __webpack_require__(14);\n\tvar Observer = __webpack_require__(15);\n\tvar Template = __webpack_require__(60);\n\tvar Component = __webpack_require__(87);\n\tvar EventEmitter = __webpack_require__(59);\n\t\n\t//持载模板相关对象\n\tutils.copy(Template, Component);\n\t\n\tComponent.version = info.version;\n\tComponent.Template = Template;\n\tComponent.Watcher = Watcher;\n\tComponent.Observer = Observer;\n\tComponent.EventEmitter = EventEmitter;\n\tComponent.utils = utils;\n\tComponent.Class = Class;\n\t\n\t//定义安装插件的方法\n\tComponent.use = function (plugin) {\n\t  var install = plugin.install || plugin;\n\t  if (!utils.isFunction(install)) {\n\t    throw new Error('Invalid Plugin');\n\t  }\n\t  return install.call(plugin, this);\n\t};\n\t\n\t//安装内置的路由插件\n\t//Component.use(Router);\n\t\n\tmodule.exports = Component;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"name\": \"mokit\",\n\t\t\"version\": \"3.0.15\"\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (ntils) {\n\t\n\t  /**\n\t   * 空函数\n\t   */\n\t  ntils.noop = function () { };\n\t\n\t  /**\n\t   * 验证一个对象是否为NULL\n\t   * @method isNull\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isNull = function (obj) {\n\t    return obj === null || typeof obj === \"undefined\";\n\t  };\n\t\n\t  /**\n\t   * 除去字符串两端的空格\n\t   * @method trim\n\t   * @param  {String} str 源字符串\n\t   * @return {String}     结果字符串\n\t   * @static\n\t   */\n\t  ntils.trim = function (str) {\n\t    if (this.isNull(str)) return str;\n\t    if (str.trim) {\n\t      return str.trim();\n\t    } else {\n\t      return str.replace(/(^[\\\\s]*)|([\\\\s]*$)/g, \"\");\n\t    }\n\t  };\n\t\n\t  /**\n\t   * 替换所有\n\t   * @method replace\n\t   * @param {String} str 源字符串\n\t   * @param {String} str1 要替换的字符串\n\t   * @param {String} str2 替换为的字符串\n\t   * @static\n\t   */\n\t  ntils.replace = function (str, str1, str2) {\n\t    if (this.isNull(str)) return str;\n\t    return str.replace(new RegExp(str1, 'g'), str2);\n\t  };\n\t\n\t  /**\n\t   * 从字符串开头匹配\n\t   * @method startWith\n\t   * @param {String} str1 源字符串\n\t   * @param {String} str2 要匹配的字符串\n\t   * @return {Boolean} 匹配结果\n\t   * @static\n\t   */\n\t  ntils.startWith = function (str1, str2) {\n\t    if (this.isNull(str1) || this.isNull(str2)) return false;\n\t    return str1.indexOf(str2) === 0;\n\t  };\n\t\n\t  /**\n\t   * 是否包含\n\t   * @method contains\n\t   * @param {String} str1 源字符串\n\t   * @param {String} str2 检查包括字符串\n\t   * @return {Boolean} 结果\n\t   * @static\n\t   */\n\t  ntils.contains = function (str1, str2) {\n\t    var self = this;\n\t    if (this.isNull(str1) || this.isNull(str2)) return false;\n\t    return str1.indexOf(str2) > -1;\n\t  };\n\t\n\t  /**\n\t   * 从字符串结束匹配\n\t   * @method endWidth\n\t   * @param {String} str1 源字符串\n\t   * @param {String} str2 匹配字符串\n\t   * @return {Boolean} 匹配结果\n\t   * @static\n\t   */\n\t  ntils.endWith = function (str1, str2) {\n\t    if (this.isNull(str1) || this.isNull(str2)) return false;\n\t    return str1.indexOf(str2) === (str1.length - str2.length);\n\t  };\n\t\n\t  /**\n\t   * 是否包含属性\n\t   * @method hasProperty\n\t   * @param  {Object}  obj  对象\n\t   * @param  {String}  name 属性名\n\t   * @return {Boolean}      结果\n\t   * @static\n\t   */\n\t  ntils.has = ntils.hasProperty = function (obj, name) {\n\t    if (this.isNull(obj) || this.isNull(name)) return false;\n\t    return (name in obj) || (obj.hasOwnProperty(name));\n\t  };\n\t\n\t  /**\n\t   * 验证一个对象是否为Function\n\t   * @method isFunction\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isFunction = function (obj) {\n\t    if (this.isNull(obj)) return false;\n\t    return typeof obj === \"function\";\n\t  };\n\t\n\t  /**\n\t   * 验证一个对象是否为String\n\t   * @method isString\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isString = function (obj) {\n\t    if (this.isNull(obj)) return false;\n\t    return typeof obj === 'string' || obj instanceof String;\n\t  };\n\t\n\t  /**\n\t   * 验证一个对象是否为Number\n\t   * @method isNumber\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isNumber = function (obj) {\n\t    if (this.isNull(obj)) return false;\n\t    return typeof obj === 'number' || obj instanceof Number;\n\t  };\n\t\n\t  /**\n\t   * 验证一个对象是否为Boolean\n\t   * @method isBoolean\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isBoolean = function (obj) {\n\t    if (this.isNull(obj)) return false;\n\t    return typeof obj === 'boolean' || obj instanceof Boolean;\n\t  };\n\t\n\t  /**\n\t   * 验证一个对象是否为HTML Element\n\t   * @method isElement\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isElement = function (obj) {\n\t    if (this.isNull(obj)) return false;\n\t    if (window.Element) {\n\t      return obj instanceof Element;\n\t    } else {\n\t      return (obj.tagName && obj.nodeType && obj.nodeName && obj.attributes && obj.ownerDocument);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * 验证一个对象是否为HTML Text Element\n\t   * @method isText\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isText = function (obj) {\n\t    if (this.isNull(obj)) return false;\n\t    return obj instanceof Text;\n\t  };\n\t\n\t  /**\n\t   * 验证一个对象是否为Object\n\t   * @method isObject\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isObject = function (obj) {\n\t    if (this.isNull(obj)) return false;\n\t    return typeof obj === \"object\";\n\t  };\n\t\n\t  /**\n\t   * 验证一个对象是否为Array或伪Array\n\t   * @method isArray\n\t   * @param  {Object}  obj 要验证的对象\n\t   * @return {Boolean}     结果\n\t   * @static\n\t   */\n\t  ntils.isArray = function (obj) {\n\t    if (this.isNull(obj)) return false;\n\t    var v1 = Object.prototype.toString.call(obj) === '[object Array]';\n\t    var v2 = obj instanceof Array;\n\t    var v3 = !this.isString(obj) && this.isNumber(obj.length) && this.isFunction(obj.splice);\n\t    var v4 = !this.isString(obj) && this.isNumber(obj.length) && obj[0];\n\t    return v1 || v2 || v3 || v4;\n\t  };\n\t\n\t  /**\n\t   * 验证是不是一个日期对象\n\t   * @method isDate\n\t   * @param {Object} val   要检查的对象\n\t   * @return {Boolean}           结果\n\t   * @static\n\t   */\n\t  ntils.isDate = function (val) {\n\t    if (this.isNull(val)) return false;\n\t    return val instanceof Date;\n\t  };\n\t\n\t  /**\n\t   * 验证是不是一个正则对象\n\t   * @method isDate\n\t   * @param {Object} val   要检查的对象\n\t   * @return {Boolean}           结果\n\t   * @static\n\t   */\n\t  ntils.isRegexp = function (val) {\n\t    return val instanceof RegExp;\n\t  };\n\t\n\t  /**\n\t   * 转换为数组\n\t   * @method toArray\n\t   * @param {Array|Object} array 伪数组\n\t   * @return {Array} 转换结果数组\n\t   * @static\n\t   */\n\t  ntils.toArray = function (array) {\n\t    if (this.isNull(array)) return [];\n\t    return Array.prototype.slice.call(array);\n\t  };\n\t\n\t  /**\n\t   * 转为日期格式\n\t   * @method toDate\n\t   * @param {Number|String} val 日期字符串或整型数值\n\t   * @return {Date} 日期对象\n\t   * @static\n\t   */\n\t  ntils.toDate = function (val) {\n\t    var self = this;\n\t    if (self.isNumber(val))\n\t      return new Date(val);\n\t    else if (self.isString(val))\n\t      return new Date(self.replace(self.replace(val, '-', '/'), 'T', ' '));\n\t    else if (self.isDate(val))\n\t      return val;\n\t    else\n\t      return null;\n\t  };\n\t\n\t  /**\n\t   * 遍历一个对像或数组\n\t   * @method each\n\t   * @param  {Object or Array}   obj  要遍历的数组或对象\n\t   * @param  {Function} fn            处理函数\n\t   * @return {void}                   无返回值\n\t   * @static\n\t   */\n\t  ntils.each = function (list, handler, scope) {\n\t    if (this.isNull(list) || this.isNull(handler)) return;\n\t    if (this.isArray(list)) {\n\t      var listLength = list.length;\n\t      for (var i = 0; i < listLength; i++) {\n\t        var rs = handler.call(scope || list[i], i, list[i]);\n\t        if (!this.isNull(rs)) return rs;\n\t      }\n\t    } else {\n\t      for (var key in list) {\n\t        var rs = handler.call(scope || list[key], key, list[key]);\n\t        if (!this.isNull(rs)) return rs;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * 格式化日期\n\t   * @method formatDate\n\t   * @param {Date|String|Number} date 日期\n\t   * @param {String} format 格式化字符串\n\t   * @param {object} dict 反译字典\n\t   * @return {String} 格式化结果\n\t   * @static\n\t   */\n\t  ntils.formatDate = function (date, format, dict) {\n\t    if (this.isNull(format) || this.isNull(date)) return date;\n\t    date = this.toDate(date);\n\t    dict = dict || {};\n\t    var placeholder = {\n\t      \"M+\": date.getMonth() + 1, //month\n\t      \"d+\": date.getDate(), //day\n\t      \"h+\": date.getHours(), //hour\n\t      \"m+\": date.getMinutes(), //minute\n\t      \"s+\": date.getSeconds(), //second\n\t      \"w+\": date.getDay(), //week\n\t      \"q+\": Math.floor((date.getMonth() + 3) / 3), //quarter\n\t      \"S\": date.getMilliseconds() //millisecond\n\t    }\n\t    if (/(y+)/.test(format)) {\n\t      format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n\t    }\n\t    for (var key in placeholder) {\n\t      if (new RegExp(\"(\" + key + \")\").test(format)) {\n\t        var value = placeholder[key];\n\t        value = dict[value] || value;\n\t        format = format.replace(RegExp.$1, RegExp.$1.length == 1\n\t          ? value : (\"00\" + value).substr((\"\" + value).length));\n\t      }\n\t    }\n\t    return format;\n\t  };\n\t\n\t  /**\n\t   * 拷贝对象\n\t   * @method copy\n\t   * @param {Object} src 源对象\n\t   * @param {Object} dst 目标对象\n\t   * @static\n\t   */\n\t  ntils.copy = function (src, dst, igonres) {\n\t    dst = dst || (this.isArray(src) ? [] : {});\n\t    this.each(src, function (key) {\n\t      if (igonres && igonres.indexOf(key) > -1) return;\n\t      delete dst[key];\n\t      if (Object.getOwnPropertyDescriptor) {\n\t        try {\n\t          Object.defineProperty(dst, key, Object.getOwnPropertyDescriptor(src, key));\n\t        } catch (ex) {\n\t          dst[key] = src[key];\n\t        }\n\t      } else {\n\t        dst[key] = src[key];\n\t      }\n\t    })\n\t    return dst;\n\t  };\n\t\n\t  /**\n\t   * 深度克隆对象\n\t   * @method clone\n\t   * @param {Object} src 源对象\n\t   * @return {Object} 新对象\n\t   * @static\n\t   */\n\t  ntils.clone = function (src, igonres) {\n\t    if (this.isNull(src) ||\n\t      this.isString(src) ||\n\t      this.isNumber(src) ||\n\t      this.isBoolean(src) ||\n\t      this.isDate(src)) {\n\t      return src;\n\t    }\n\t    var objClone = src;\n\t    try {\n\t      objClone = new src.constructor();\n\t    } catch (ex) { }\n\t    this.each(src, function (key, value) {\n\t      if (objClone[key] != value && !this.contains(igonres, key)) {\n\t        if (this.isObject(value)) {\n\t          objClone[key] = this.clone(value, igonres);\n\t        } else {\n\t          objClone[key] = value;\n\t        }\n\t      }\n\t    }, this);\n\t    ['toString', 'valueOf'].forEach(function (key) {\n\t      if (this.contains(igonres, key)) return;\n\t      this.defineFreezeProp(objClone, key, src[key]);\n\t    }, this);\n\t    return objClone;\n\t  };\n\t\n\t  /**\n\t   * 合并对象\n\t   * @method mix\n\t   * @return 合并后的对象\n\t   * @param {Object} dst 目标对象\n\t   * @param {Object} src 源对象\n\t   * @param {Array} igonres 忽略的属性名,\n\t   * @param {Number} mode 模式\n\t   */\n\t  ntils.mix = function (dst, src, igonres, mode) {\n\t    //根据模式来判断，默认是Obj to Obj的  \n\t    if (mode) {\n\t      switch (mode) {\n\t        case 1: // proto to proto  \n\t          return ntils.mix(dst.prototype, src.prototype, igonres, 0);\n\t        case 2: // object to object and proto to proto  \n\t          ntils.mix(dst.prototype, src.prototype, igonres, 0);\n\t          break; // pass through  \n\t        case 3: // proto to static  \n\t          return ntils.mix(dst, src.prototype, igonres, 0);\n\t        case 4: // static to proto  \n\t          return ntils.mix(dst.prototype, src, igonres, 0);\n\t        default: // object to object is what happens below  \n\t      }\n\t    }\n\t    //---\n\t    src = src || {};\n\t    dst = dst || (this.isArray(src) ? [] : {});\n\t    this.keys(src).forEach(function (key) {\n\t      if (this.contains(igonres, key)) return;\n\t      if (this.isObject(src[key]) &&\n\t        (src[key].constructor == Object ||\n\t          src[key].constructor == Array ||\n\t          src[key].constructor == null)) {\n\t        dst[key] = ntils.mix(dst[key], src[key], igonres, 0);\n\t      } else {\n\t        dst[key] = src[key];\n\t      }\n\t    }, this);\n\t    return dst;\n\t  };\n\t\n\t  /**\n\t   * 定义不可遍历的属性\n\t   **/\n\t  ntils.defineFreezeProp = function (obj, name, value) {\n\t    try {\n\t      Object.defineProperty(obj, name, {\n\t        value: value,\n\t        enumerable: false,\n\t        configurable: true, //能不能重写定义\n\t        writable: false //能不能用「赋值」运算更改\n\t      });\n\t    } catch (err) {\n\t      obj[name] = value;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * 获取所有 key \n\t   */\n\t  ntils.keys = function (obj) {\n\t    if (Object.keys) return Object.keys(obj);\n\t    var keys = [];\n\t    this.each(obj, function (key) {\n\t      keys.push(key);\n\t    });\n\t    return keys;\n\t  };\n\t\n\t  /**\n\t   * 创建一个对象\n\t   */\n\t  ntils.create = function (proto, props) {\n\t    if (Object.create) return Object.create(proto, props);\n\t    var Cotr = function () { };\n\t    Cotr.prototype = proto;\n\t    var obj = new Cotr();\n\t    if (props) this.copy(props, obj);\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * 设置 proto\n\t   * 在不支持 setPrototypeOf 也不支持 __proto__ 的浏览器\n\t   * 中，会采用 copy 方式\n\t   */\n\t  ntils.setPrototypeOf = function (obj, proto) {\n\t    if (Object.setPrototypeOf) {\n\t      return Object.setPrototypeOf(obj, proto || this.create(null));\n\t    } else {\n\t      if (!('__proto__' in Object)) this.copy(proto, obj);\n\t      obj.__proto__ = proto;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * 获取 proto\n\t   */\n\t  ntils.getPrototypeOf = function (obj) {\n\t    if (obj.__proto__) return obj.__proto__;\n\t    if (Object.getPrototypeOf) return Object.getPrototypeOf(obj);\n\t    if (obj.constructor) return obj.constructor.prototype;\n\t  };\n\t\n\t  /**\n\t   * 是否深度相等\n\t   */\n\t  ntils.deepEqual = function (a, b) {\n\t    if (a === b) return true;\n\t    if (!this.isObject(a) || !this.isObject(b)) return false;\n\t    var aKeys = this.keys(a);\n\t    var bKeys = this.keys(b);\n\t    if (aKeys.length !== bKeys.length) return false;\n\t    var allKeys = aKeys.concat(bKeys);\n\t    var checkedMap = this.create(null);\n\t    var result = true;\n\t    this.each(allKeys, function (i, key) {\n\t      if (checkedMap[key]) return;\n\t      if (!this.deepEqual(a[key], b[key])) result = false;\n\t      checkedMap[key] = true;\n\t    }, this);\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * 从一个数值循环到别一个数\n\t   * @param {number} fromNum 开始数值\n\t   * @param {Number} toNum 结束数值\n\t   * @param {Number} step 步长值\n\t   * @param {function} handler 执行函数\n\t   * @returns {void} 无返回\n\t   */\n\t  ntils.fromTo = function (fromNum, toNum, step, handler) {\n\t    if (!handler) handler = [step, step = handler][0];\n\t    step = Math.abs(step || 1);\n\t    if (fromNum < toNum) {\n\t      for (var i = fromNum; i <= toNum; i += step) handler(i);\n\t    } else {\n\t      for (var i = fromNum; i >= toNum; i -= step) handler(i);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * 生成一个Guid\n\t   * @method newGuid\n\t   * @return {String} GUID字符串\n\t   * @static\n\t   */\n\t  ntils.newGuid = function () {\n\t    var S4 = function () {\n\t      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n\t    };\n\t    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n\t  };\n\t\n\t  /**\n\t   * 对象变换\n\t   **/\n\t  ntils.map = function (list, fn) {\n\t    var buffer = this.isArray(list) ? [] : {};\n\t    this.each(list, function (name, value) {\n\t      buffer[name] = fn(name, value);\n\t    });\n\t    return buffer;\n\t  };\n\t\n\t  /**\n\t   * 通过路径设置属性值\n\t   */\n\t  ntils.setByPath = function (obj, path, value) {\n\t    if (this.isNull(obj) || this.isNull(path) || path === '') {\n\t      return;\n\t    }\n\t    if (!this.isArray(path)) {\n\t      path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n\t    }\n\t    this.each(path, function (index, name) {\n\t      if (this.isNull(name) || name.length < 1) return;\n\t      if (index === path.length - 1) {\n\t        obj[name] = value;\n\t      } else {\n\t        obj[name] = obj[name] || {};\n\t        obj = obj[name];\n\t      }\n\t    }, this);\n\t  };\n\t\n\t  /**\n\t   * 通过路径获取属性值\n\t   */\n\t  ntils.getByPath = function (obj, path) {\n\t    if (this.isNull(obj) || this.isNull(path) || path === '') {\n\t      return obj;\n\t    }\n\t    if (!this.isArray(path)) {\n\t      path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n\t    }\n\t    this.each(path, function (index, name) {\n\t      if (this.isNull(name) || name.length < 1) return;\n\t      if (!this.isNull(obj)) obj = obj[name];\n\t    }, this);\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * 数组去重\n\t   **/\n\t  ntils.unique = function (array) {\n\t    if (this.isNull(array)) return array;\n\t    var newArray = [];\n\t    this.each(array, function (i, value) {\n\t      if (newArray.indexOf(value) > -1) return;\n\t      newArray.push(value);\n\t    });\n\t    return newArray;\n\t  };\n\t\n\t  /**\n\t   * 解析 function 的参数列表\n\t   **/\n\t  ntils.getFunctionArgumentNames = function (fn) {\n\t    if (!fn) return [];\n\t    var src = fn.toString();\n\t    var parts = src.split(')')[0].split('=>')[0].split('(');\n\t    return (parts[1] || parts[0]).split(',').map(function (name) {\n\t      return name.trim();\n\t    }).filter(function (name) {\n\t      return name != 'function';\n\t    });\n\t  };\n\t\n\t  /**\n\t   * 缩短字符串\n\t   */\n\t  ntils.short = function (str, maxLength) {\n\t    if (!str) return str;\n\t    maxLength = maxLength || 40;\n\t    var strLength = str.length;\n\t    var trimLength = maxLength / 2;\n\t    return strLength > maxLength ? str.substr(0, trimLength) + '...' + str.substr(strLength - trimLength) : str;\n\t  };\n\t\n\t  /**\n\t   * 首字母大写\n\t   */\n\t  ntils.firstUpper = function (str) {\n\t    if (this.isNull(str)) return;\n\t    str[0] = str[0].toLowerCase();\n\t    return str;\n\t  };\n\t\n\t  /**\n\t   * 编码正则字符串\n\t   */\n\t  ntils.escapeRegExp = function (str) {\n\t    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t  };\n\t\n\t  /**\n\t   * 解析字符串为 dom \n\t   * @param {string} str 字符串\n\t   * @returns {HTMLNode} 解析后的 DOM \n\t   */\n\t  ntils.parseDom = function (str) {\n\t    this._PDD_ = this._PDD_ || document.createElement('div');\n\t    this._PDD_.innerHTML = ntils.trim(str);\n\t    var firstNode = this._PDD_.childNodes[0];\n\t    //先 clone 一份再通过 innerHTML 清空\n\t    //否则 IE9 下，清空时会导出返回的 DOM 没有子结点\n\t    if (firstNode) firstNode = firstNode.cloneNode(true);\n\t    this._PDD_.innerHTML = '';\n\t    return firstNode;\n\t  };\n\t\n\t})(( false) ? (window.ntils = {}) : exports);\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst utils = __webpack_require__(12);\n\t\n\tfunction ClassFactory(options) {\n\t  //处理 options\n\t  options = options || utils.create(null);\n\t  options.$name = options.$name || 'Class';\n\t  options.$extends = options.$extends || ClassFactory;\n\t  options.$static = options.$static || utils.create(null);\n\t  //处理父类 prototype\n\t  var superPrototype = utils.isFunction(options.$extends) ?\n\t    options.$extends.prototype : options.$extends;\n\t  //定义新类\n\t  var Class = function () {\n\t    //处理 super\n\t    if (!this.$super) {\n\t      utils.defineFreezeProp(this, '$super', function () {\n\t        if (this._super_called_) return this._super_ret_;\n\t        this._super_called_ = true;\n\t        if (utils.isFunction(options.$extends)) {\n\t          this._super_ret_ = options.$extends.apply(this, arguments);\n\t          //这几行确保可继承于数组\n\t          if (this._super_ret_) {\n\t            var proto = utils.getPrototypeOf(this);\n\t            utils.setPrototypeOf(proto, this._super_ret_);\n\t          }\n\t        } else {\n\t          this._super_ret_ = options.$extends;\n\t        }\n\t        return this._super_ret_;\n\t      });\n\t      for (var name in superPrototype) {\n\t        var value = superPrototype[name];\n\t        if (utils.isFunction(value)) {\n\t          this.$super[name] = value.bind(this);\n\t        } else {\n\t          this.$super[name] = value;\n\t        }\n\t      }\n\t    }\n\t    //调用构造\n\t    if (utils.isFunction(options.constructor) &&\n\t      options.constructor !== Object) {\n\t      return options.constructor.apply(this, arguments);\n\t    } else {\n\t      //如果没有实现 constructor 则调用父类构造\n\t      this.$super.apply(this, arguments);\n\t    }\n\t  };\n\t  //处理 prototype\n\t  Class.prototype = utils.create(superPrototype);\n\t  utils.copy(options, Class.prototype);\n\t  utils.defineFreezeProp(Class.prototype, '$class', Class);\n\t  //处理静态成员\n\t  utils.copy(options.$static, Class);\n\t  if (utils.isFunction(options.$extends)) {\n\t    utils.setPrototypeOf(Class, options.$extends);\n\t  }\n\t  if (!options.$extends.$extend) {\n\t    utils.copy(ClassFactory, Class);\n\t  }\n\t  utils.defineFreezeProp(Class, '$super', options.$extends);\n\t  //--\n\t  return Class;\n\t}\n\t\n\t//定义扩展方法\n\tClassFactory.$extend = function (options) {\n\t  options.$extends = this;\n\t  return new ClassFactory(options);\n\t};\n\t\n\tClassFactory.Class = ClassFactory;\n\tmodule.exports = ClassFactory;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Class = __webpack_require__(13);\n\tvar utils = __webpack_require__(12);\n\t\n\t/**\n\t * Watcher 类\n\t * 通过「计算函数」、「执行函数」可以创建一个 Watcher 实例\n\t */\n\tvar Watcher = new Class({\n\t\n\t  /**\n\t   * 通过「计算函数」、「执行函数」构建一个 Watcher 实例\n\t   * @param {function} calcor 计算函数\n\t   * @param {function} handler 处理函数\n\t   * @param {boolean} first 是否自动执行第一次\n\t   * @returns {void} 无返回\n\t   */\n\t  constructor: function /*istanbul ignore next*/constructor(calcor, handler, first) {\n\t    if (!utils.isFunction(calcor) || !utils.isFunction(handler)) {\n\t      throw new Error('Invalid parameters');\n\t    }\n\t    this.calcor = calcor;\n\t    this.handler = handler;\n\t    if (first) this.calc(true);\n\t  },\n\t\n\t  /**\n\t   * 执行计算\n\t   * @param {boolean} force 是否强制触发「计算函数」\n\t   * @returns {Object} 计算后的值\n\t   */\n\t  calc: function /*istanbul ignore next*/calc(force) {\n\t    var newValue = this.calcor();\n\t    if (force || !utils.deepEqual(newValue, this.value)) {\n\t      this.handler(newValue, this.value);\n\t    }\n\t    this.value = utils.clone(newValue);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = Watcher;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar _keys = __webpack_require__(16);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _getOwnPropertyDescriptor = __webpack_require__(51);\n\t\n\tvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\t\n\tvar _defineProperty = __webpack_require__(56);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Class = __webpack_require__(13);\n\tvar utils = __webpack_require__(12);\n\tvar EventEmitter = __webpack_require__(59);\n\t\n\tvar OBSERVER_PROP_NAME = '_observer_';\n\tvar CHANGE_EVENT_NAME = 'change';\n\tvar EVENT_MAX_DISPATCH_LAYER = 10;\n\tvar IGNORE_REGEXPS = [/^\\_(.*)\\_$/i, /^\\_\\_/i];\n\t\n\t/**\n\t * 对象观察类，可以监控对象变化\n\t * 目前方案问题:\n\t *   对于父子关系和事件冒泡，目前方案如果用 delete 删除一个属性，无关真实删除关系，\n\t *   即便调用 clearReference 也无法再清除关系，子对象的 parents 中会一直有一个引用，当前方案最高效\n\t * 其它方法一:\n\t *   将「关系」放入全局数组中，然后将 ob.parents 变成一个「属性」从全局数组件中 filter 出来，\n\t *   基本和目前方法类似，但是关系在外部存领教，所以 clearReference 可清除。\n\t * 其它方案二: \n\t *   构造时添加到全局数组，每一个 observer change 时都让放到全局的 observer 遍历自身的，\n\t *   检果事件源是不是自已的子对象，如果是则触发自身 change 事件，这样 ob 对象本身没有相关引用\n\t *   clearReference 时只从全局清除掉就行了，并且 delete 操作也不会影响，但效率稍差。\n\t * 其它方案三: \n\t *   给构造函数添加一个 deep 属性，只有 deep 的 ob 对象，才放入到全局数组中，检查时逻辑同方案二\n\t *   但是因为要检查的对象会少很多，效率会更高一点。\n\t */\n\tvar Observer = new Class({\n\t  $extends: EventEmitter,\n\t\n\t  /**\n\t   * 通过目标对象构造一个观察对象\n\t   * @param {Object} target 目标对象\n\t   * @param {Object} options 选项\n\t   * @returns {void} 无返回\n\t   */\n\t  constructor: function /*istanbul ignore next*/constructor(target, options) {\n\t    if (utils.isNull(target)) {\n\t      throw new Error('Invalid target');\n\t    }\n\t    options = options || {};\n\t    var observer = target[OBSERVER_PROP_NAME];\n\t    if (observer) {\n\t      utils.copy(options, observer.options);\n\t      //当时一个组件 A 的为组件 B 的 prop 时，A 更新不会触发 B 更新\n\t      //所在暂注释这里，另一种方法是更新 prop 指令，重写 excute 方法，而不是现在的 update 方法\n\t      // if (observer.options.root) {\n\t      //   observer.parents.length = 0;\n\t      // }\n\t      observer.apply();\n\t      return observer;\n\t    }\n\t    EventEmitter.call(this);\n\t    utils.defineFreezeProp(this, 'options', options);\n\t    utils.defineFreezeProp(this, 'shadow', {});\n\t    utils.defineFreezeProp(this, 'target', target);\n\t    utils.defineFreezeProp(this, 'parents', []);\n\t    utils.defineFreezeProp(target, OBSERVER_PROP_NAME, this);\n\t    this.apply();\n\t  },\n\t\n\t  /**\n\t   * 添加一个属性，动态添中的属性，无法被观察，\n\t   * 但是通过 set 方法添加的属性可能被观察。\n\t   * @param {string} name 名称\n\t   * @param {Object} value 值\n\t   * @returns {void} 无返回\n\t   */\n\t  set: function /*istanbul ignore next*/set(name, value) {\n\t    if (utils.isFunction(value) || Observer.isIgnore(name)) {\n\t      return;\n\t    }\n\t    /*istanbul ignore next*/(0, _defineProperty2.default)(this.target, name, {\n\t      get: function /*istanbul ignore next*/get() {\n\t        return this[OBSERVER_PROP_NAME].shadow[name];\n\t      },\n\t      set: function /*istanbul ignore next*/set(value) {\n\t        var observer = this[OBSERVER_PROP_NAME];\n\t        var oldValue = observer.shadow[name];\n\t        if (oldValue === value) return;\n\t        if (utils.isObject(value)) {\n\t          var childObserver = new Observer(value);\n\t          observer.addChild(childObserver, name);\n\t        }\n\t        //移除旧值的父引用\n\t        //如果用 delete 删除属性将无法移除父子引用\n\t        if (oldValue && oldValue[OBSERVER_PROP_NAME]) {\n\t          observer.removeChild(oldValue[OBSERVER_PROP_NAME], name);\n\t        }\n\t        observer.shadow[name] = value;\n\t        observer.emitChange({ path: name, value: value });\n\t      },\n\t      configurable: true,\n\t      enumerable: true\n\t    });\n\t    this.target[name] = value;\n\t  },\n\t\n\t  /**\n\t   * 自动应用所有动态添加的属性\n\t   * @returns {void} 无返回\n\t   */\n\t  apply: function /*istanbul ignore next*/apply() {\n\t    if (utils.isArray(this.target)) {\n\t      this._wrapArray(this.target);\n\t    }\n\t    var names = this._getPropertyNames(this.target);\n\t    names.forEach(function (name) {\n\t      var desc = /*istanbul ignore next*/(0, _getOwnPropertyDescriptor2.default)(this.target, name);\n\t      if (!('value' in desc)) return;\n\t      this.set(name, this.target[name]);\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * 清除所有父子引用\n\t   * @returns {void} 无返回\n\t   */\n\t  clearReference: function /*istanbul ignore next*/clearReference() {\n\t    utils.each(this.target, function (name, value) {\n\t      if (utils.isNull(value)) return;\n\t      var child = value[OBSERVER_PROP_NAME];\n\t      if (child) this.removeChild(child);\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * 派发一个事件，事件会向父级对象冒泡\n\t   * @param {string} eventName 事件名称\n\t   * @param {Object} event 事件对象\n\t   * @returns {void} 无返回\n\t   */\n\t  dispatch: function /*istanbul ignore next*/dispatch(eventName, event) {\n\t    if (event._src_ === this) return;\n\t    event._src_ = event._src_ || this;\n\t    event._layer_ = event._layer_ || 0;\n\t    if (event._layer_++ >= EVENT_MAX_DISPATCH_LAYER) return;\n\t    this.emit(eventName, event);\n\t    if (!this.parents || this.parents.length < 1) return;\n\t    this.parents.forEach(function (item) {\n\t      if (!(item.name in item.parent.target)) {\n\t        return item.parent.removeChild(this);\n\t      }\n\t      var parentEvent = utils.copy(event);\n\t      parentEvent.path = item.name + '.' + event.path;\n\t      item.parent.dispatch(eventName, parentEvent);\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * 添子观察者对象\n\t   * @param {Object} child 父对象\n\t   * @param {String} name 属性名\n\t   * @returns {void} 无返回\n\t   */\n\t  addChild: function /*istanbul ignore next*/addChild(child, name) {\n\t    if (utils.isNull(child) || utils.isNull(name)) {\n\t      throw new Error('Invalid paramaters');\n\t    }\n\t    if (child.options.root) return;\n\t    child.parents.push({ parent: this, name: name });\n\t  },\n\t\n\t  /**\n\t   * 移除子对象\n\t   * @param {Object} child 父对象\n\t   * @param {String} name 属性名\n\t   * @returns {void} 无返回\n\t   */\n\t  removeChild: function /*istanbul ignore next*/removeChild(child, name) {\n\t    if (utils.isNull(child)) {\n\t      throw new Error('Invalid paramaters');\n\t    }\n\t    var foundIndex = -1;\n\t    child.parents.forEach(function (item, index) {\n\t      if (item.parent === this && item.name === name) {\n\t        foundIndex = index;\n\t      }\n\t    }, this);\n\t    if (foundIndex > -1) {\n\t      child.parents.splice(foundIndex, 1);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 触发 change 事件\n\t   * @param {Object} event 事件对象\n\t   * @returns {void} 无返回\n\t   */\n\t  emitChange: function /*istanbul ignore next*/emitChange(event) {\n\t    this.dispatch(CHANGE_EVENT_NAME, event);\n\t  },\n\t\n\t  /**\n\t   * 获取所有成员名称列表\n\t   * @returns {Array} 所有成员名称列表\n\t   */\n\t  _getPropertyNames: function /*istanbul ignore next*/_getPropertyNames() {\n\t    var names = utils.isArray(this.target) ? this.target.map(function (item, index) {\n\t      return index;\n\t    }) : /*istanbul ignore next*/(0, _keys2.default)(this.target);\n\t    return names.filter(function (name) {\n\t      return name !== OBSERVER_PROP_NAME;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * 包裹数组\n\t   * @param {array} array 源数组\n\t   * @returns {array} 处理后的数组\n\t   */\n\t  _wrapArray: function /*istanbul ignore next*/_wrapArray(array) {\n\t    utils.defineFreezeProp(array, 'push', function () {\n\t      var items = [].slice.call(arguments);\n\t      items.forEach(function (item) {\n\t        //这里也会触发对应 index 的 change 事件\n\t        this[OBSERVER_PROP_NAME].set(array.length, item);\n\t      }, this);\n\t      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n\t    });\n\t    utils.defineFreezeProp(array, 'pop', function () {\n\t      var item = [].pop.apply(this, arguments);\n\t      this[OBSERVER_PROP_NAME].emitChange({ path: this.length, value: item });\n\t      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n\t      return item;\n\t    });\n\t    utils.defineFreezeProp(array, 'unshift', function () {\n\t      var items = [].slice.call(arguments);\n\t      items.forEach(function (item) {\n\t        //这里也会触发对应 index 的 change 事件\n\t        this[OBSERVER_PROP_NAME].set(0, item);\n\t      }, this);\n\t      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n\t    });\n\t    utils.defineFreezeProp(array, 'shift', function () {\n\t      var item = [].shift.apply(this, arguments);\n\t      this[OBSERVER_PROP_NAME].emitChange({ path: 0, value: item });\n\t      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n\t      return item;\n\t    });\n\t    utils.defineFreezeProp(array, 'splice', function () {\n\t      var startIndex = arguments[0];\n\t      var endIndex = utils.isNull(arguments[1]) ? startIndex + arguments[1] : this.length - 1;\n\t      var items = [].splice.apply(this, arguments);\n\t      for (var i = startIndex; i <= endIndex; i++) {\n\t        this[OBSERVER_PROP_NAME].emitChange({ path: i, value: items[i - startIndex] });\n\t      }\n\t      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n\t      return items;\n\t    });\n\t    utils.defineFreezeProp(array, 'set', function (index, value) {\n\t      if (index >= this.length) {\n\t        this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n\t      }\n\t      this[OBSERVER_PROP_NAME].set(index, value);\n\t    });\n\t  }\n\t\n\t});\n\t\n\t/**\n\t * 观察一个对象\n\t * @param {Object} target 目标对象\n\t * @return {Observer} 观察者对象\n\t */\n\tObserver.observe = function (target) {\n\t  return new Observer(target);\n\t};\n\t\n\t/**\n\t * 检查是不是忽略的属性名\n\t * @param {string} word 待检查的字符串\n\t * @returns {void} 无返回\n\t */\n\tObserver.isIgnore = function (word) {\n\t  return IGNORE_REGEXPS.some(function (re) /*istanbul ignore next*/{\n\t    return re.test(word);\n\t  });\n\t};\n\t\n\tmodule.exports = Observer;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(17), __esModule: true };\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(18);\n\tmodule.exports = __webpack_require__(38).Object.keys;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 Object.keys(O)\n\tvar toObject = __webpack_require__(19)\n\t  , $keys    = __webpack_require__(21);\n\t\n\t__webpack_require__(36)('keys', function(){\n\t  return function keys(it){\n\t    return $keys(toObject(it));\n\t  };\n\t});\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(20);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\tvar $keys       = __webpack_require__(22)\n\t  , enumBugKeys = __webpack_require__(35);\n\t\n\tmodule.exports = Object.keys || function keys(O){\n\t  return $keys(O, enumBugKeys);\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar has          = __webpack_require__(23)\n\t  , toIObject    = __webpack_require__(24)\n\t  , arrayIndexOf = __webpack_require__(27)(false)\n\t  , IE_PROTO     = __webpack_require__(31)('IE_PROTO');\n\t\n\tmodule.exports = function(object, names){\n\t  var O      = toIObject(object)\n\t    , i      = 0\n\t    , result = []\n\t    , key;\n\t  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n\t  // Don't enum bug & hidden keys\n\t  while(names.length > i)if(has(O, key = names[i++])){\n\t    ~arrayIndexOf(result, key) || result.push(key);\n\t  }\n\t  return result;\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(25)\n\t  , defined = __webpack_require__(20);\n\tmodule.exports = function(it){\n\t  return IObject(defined(it));\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(26);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(24)\n\t  , toLength  = __webpack_require__(28)\n\t  , toIndex   = __webpack_require__(30);\n\tmodule.exports = function(IS_INCLUDES){\n\t  return function($this, el, fromIndex){\n\t    var O      = toIObject($this)\n\t      , length = toLength(O.length)\n\t      , index  = toIndex(fromIndex, length)\n\t      , value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    if(IS_INCLUDES && el != el)while(length > index){\n\t      value = O[index++];\n\t      if(value != value)return true;\n\t    // Array#toIndex ignores holes, Array#includes - not\n\t    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n\t      if(O[index] === el)return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(29)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(29)\n\t  , max       = Math.max\n\t  , min       = Math.min;\n\tmodule.exports = function(index, length){\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(32)('keys')\n\t  , uid    = __webpack_require__(34);\n\tmodule.exports = function(key){\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(33)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t// IE 8- don't enum bug keys\n\tmodule.exports = (\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n\t).split(',');\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// most Object methods by ES6 should accept primitives\n\tvar $export = __webpack_require__(37)\n\t  , core    = __webpack_require__(38)\n\t  , fails   = __webpack_require__(47);\n\tmodule.exports = function(KEY, exec){\n\t  var fn  = (core.Object || {})[KEY] || Object[KEY]\n\t    , exp = {};\n\t  exp[KEY] = exec(fn);\n\t  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(33)\n\t  , core      = __webpack_require__(38)\n\t  , ctx       = __webpack_require__(39)\n\t  , hide      = __webpack_require__(41)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , expProto  = exports[PROTOTYPE]\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(a, b, c){\n\t        if(this instanceof C){\n\t          switch(arguments.length){\n\t            case 0: return new C;\n\t            case 1: return new C(a);\n\t            case 2: return new C(a, b);\n\t          } return new C(a, b, c);\n\t        } return C.apply(this, arguments);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\t    if(IS_PROTO){\n\t      (exports.virtual || (exports.virtual = {}))[key] = out;\n\t      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\t      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n\t    }\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library` \n\tmodule.exports = $export;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(40);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(42)\n\t  , createDesc = __webpack_require__(50);\n\tmodule.exports = __webpack_require__(46) ? function(object, key, value){\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject       = __webpack_require__(43)\n\t  , IE8_DOM_DEFINE = __webpack_require__(45)\n\t  , toPrimitive    = __webpack_require__(49)\n\t  , dP             = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(46) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return dP(O, P, Attributes);\n\t  } catch(e){ /* empty */ }\n\t  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n\t  if('value' in Attributes)O[P] = Attributes.value;\n\t  return O;\n\t};\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(44);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(46) && !__webpack_require__(47)(function(){\n\t  return Object.defineProperty(__webpack_require__(48)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(47)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(44)\n\t  , document = __webpack_require__(33).document\n\t  // in old IE typeof document.createElement is 'object'\n\t  , is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function(it){\n\t  return is ? document.createElement(it) : {};\n\t};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(44);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function(it, S){\n\t  if(!isObject(it))return it;\n\t  var fn, val;\n\t  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(52), __esModule: true };\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(53);\n\tvar $Object = __webpack_require__(38).Object;\n\tmodule.exports = function getOwnPropertyDescriptor(it, key){\n\t  return $Object.getOwnPropertyDescriptor(it, key);\n\t};\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n\tvar toIObject                 = __webpack_require__(24)\n\t  , $getOwnPropertyDescriptor = __webpack_require__(54).f;\n\t\n\t__webpack_require__(36)('getOwnPropertyDescriptor', function(){\n\t  return function getOwnPropertyDescriptor(it, key){\n\t    return $getOwnPropertyDescriptor(toIObject(it), key);\n\t  };\n\t});\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pIE            = __webpack_require__(55)\n\t  , createDesc     = __webpack_require__(50)\n\t  , toIObject      = __webpack_require__(24)\n\t  , toPrimitive    = __webpack_require__(49)\n\t  , has            = __webpack_require__(23)\n\t  , IE8_DOM_DEFINE = __webpack_require__(45)\n\t  , gOPD           = Object.getOwnPropertyDescriptor;\n\t\n\texports.f = __webpack_require__(46) ? gOPD : function getOwnPropertyDescriptor(O, P){\n\t  O = toIObject(O);\n\t  P = toPrimitive(P, true);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return gOPD(O, P);\n\t  } catch(e){ /* empty */ }\n\t  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\texports.f = {}.propertyIsEnumerable;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(57), __esModule: true };\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(58);\n\tvar $Object = __webpack_require__(38).Object;\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $Object.defineProperty(it, key, desc);\n\t};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(37);\n\t// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n\t$export($export.S + $export.F * !__webpack_require__(46), 'Object', {defineProperty: __webpack_require__(42).f});\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar utils = __webpack_require__(12);\n\tvar Class = __webpack_require__(13);\n\t\n\t/**\n\t * 事件触发器基类\n\t */\n\tvar EventEmitter = new Class({\n\t  $extends: Function,\n\t\n\t  /**\n\t   * 构建一个一个事修的触发器对象\n\t   * @param {object} target 将代理的目标对象可以省略\n\t   * @returns {void} 无返回\n\t   */\n\t  constructor: function /*istanbul ignore next*/constructor(target) {\n\t    target = target || this;\n\t    var emitter = target._emitter_;\n\t    if (emitter) return emitter;\n\t    utils.defineFreezeProp(this, '_target_', target);\n\t    utils.defineFreezeProp(target, '_emitter_', this);\n\t    this._isNative_ = this._isNativeObject(this._target_);\n\t    this._listeners_ = this._listeners_ || {};\n\t    this.on = this.$on = this.$addListener = this.addListener;\n\t    this.off = this.$off = this.$removeListener = this.removeListener;\n\t    this.$emit = this.emit;\n\t  },\n\t\n\t  /**\n\t   * 检查是否原生支持事件\n\t   * @param {object} obj 对象\n\t   * @returns {void} 检查结果\n\t   */\n\t  _isNativeObject: function /*istanbul ignore next*/_isNativeObject(obj) {\n\t    return obj.addEventListener && obj.removeEventListener && obj.dispatchEvent;\n\t  },\n\t\n\t  /**\n\t   * 添加一个事件监听函数\n\t   * @param {string} name 事件名称\n\t   * @param {function} listener 事件处理函数\n\t   * @param {capture} capture 是否是捕获阶段事件(只在代理 dom 对象时有效)\n\t   * @returns {void} 无返回\n\t   */\n\t  addListener: function /*istanbul ignore next*/addListener(name, listener, capture) {\n\t    if (this._isNative_) {\n\t      this._addNativeEventListener(name, listener, capture);\n\t    }\n\t    this._listeners_[name] = this._listeners_[name] || [];\n\t    this._listeners_[name].push(listener);\n\t    if (this._listeners_[name].length > EventEmitter._maxListeners) {\n\t      throw new Error('The `' + name + '` event listener is not more than 10');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 移除「一个/一组/所有」事件监听函数\n\t   * @param {string} name 事件名称\n\t   * @param {function} listener 事件处理函数\n\t   * @param {capture} capture 是否是捕获阶段事件(只在代理 dom 对象时有效)\n\t   * @returns {void} 无返回\n\t   */\n\t  removeListener: function /*istanbul ignore next*/removeListener(name, listener, capture) {\n\t    if (name && listener) {\n\t      if (this._isNative_) {\n\t        this._removeNativeEventListener(name, listener, capture);\n\t      }\n\t      if (!this._listeners_[name]) return;\n\t      var index = this._listeners_[name].indexOf(listener);\n\t      this._listeners_[name].splice(index, 1);\n\t    } else if (name) {\n\t      if (this._isNative_ && this._listeners_[name]) {\n\t        this._listeners_[name].forEach(function (_listener) {\n\t          this.removeListener(name, _listener, capture);\n\t        }, this);\n\t      }\n\t      delete this._listeners_[name];\n\t    } else {\n\t      utils.each(this._listeners_, function (name) {\n\t        this.removeListener(name, null, capture);\n\t      }, this);\n\t      this._listeners_ = {};\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 触发自身的一个事件\n\t   * @param {string} name 事件名称\n\t   * @param {object} data 传递的对象\n\t   * @param {string} canBubble 能否冒泡(只在代理 dom 对象时有效)\n\t   * @param {object} cancelAble 能否取消(只在代理 dom 对象时有效)\n\t   * @returns {void} 无返回\n\t   */\n\t  emit: function /*istanbul ignore next*/emit(name, data, canBubble, cancelAble) {\n\t    if (this._isNative_) {\n\t      return this._emitNativeEvent(name, data, canBubble, cancelAble);\n\t    }\n\t    if (!this._listeners_[name]) return;\n\t    var stopPropagation = false;\n\t    this._listeners_[name].forEach(function (handler) {\n\t      var rs = handler.call(this._target_, data);\n\t      if (rs === false) stopPropagation = true;\n\t    }, this);\n\t    return stopPropagation;\n\t  },\n\t\n\t  /**\n\t   * 添加 DOM 元素事件\n\t   * @param {string} name 事件名称\n\t   * @param {function} listener 事件处理函数\n\t   * @param {capture} capture 是否是捕获阶段事件\n\t   * @returns {void} 无返回\n\t   */\n\t  _addNativeEventListener: function /*istanbul ignore next*/_addNativeEventListener(name, listener, capture) {\n\t    this._target_.addEventListener(name, listener, capture);\n\t    //如果存在已注册的自定义 “组合事件”\n\t    var descriptor = EventEmitter._events[name];\n\t    if (descriptor) {\n\t      descriptor.addListener = descriptor.addListener || descriptor.on;\n\t      descriptor.addListener(this, name, listener, capture);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 移除 DOM 元素事件\n\t   * @param {string} name 事件名称\n\t   * @param {function} listener 事件处理函数\n\t   * @param {capture} capture 是否是捕获阶段事件\n\t   * @returns {void} 无返回\n\t   */\n\t  _removeNativeEventListener: function /*istanbul ignore next*/_removeNativeEventListener(name, listener, capture) {\n\t    this._target_.removeEventListener(name, listener, capture);\n\t    //如果存在已注册的自定义 “组合事件”\n\t    var descriptor = EventEmitter._events[name];\n\t    if (descriptor) {\n\t      descriptor.removeListener = descriptor.removeListener || descriptor.off;\n\t      descriptor.removeListener(this, name, listener, capture);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 触发 DOM 元素事件\n\t   * @param {string} name 事件名称\n\t   * @param {object} data 传递的对象\n\t   * @param {string} canBubble 能否冒泡\n\t   * @param {object} cancelAble 能否取消\n\t   * @returns {void} 无返回\n\t   */\n\t  _emitNativeEvent: function /*istanbul ignore next*/_emitNativeEvent(name, data, canBubble, cancelAble) {\n\t    var event = document.createEvent('HTMLEvents');\n\t    event.initEvent(name, canBubble, cancelAble);\n\t    utils.copy(data, event, ['data']);\n\t    event.data = data;\n\t    return this._target_.dispatchEvent(event);\n\t  }\n\t\n\t});\n\t\n\t//最多添加多少个 listener\n\tEventEmitter._maxListeners = 10;\n\t\n\t//所有自定义事件\n\tEventEmitter._events = [];\n\t\n\t/**\n\t * 注册自定义事件(只在代理 dom 对象时有效)\n\t * @param {object} descriptor 事件定义\n\t * @returns {void} 无返回\n\t */\n\tEventEmitter.register = function (descriptor) {\n\t  var names = descriptor.name;\n\t  if (!names) return;\n\t  if (!utils.isArray(names)) names = names.split(',');\n\t  names.forEach(function (name) {\n\t    this._events[name] = descriptor;\n\t  }, this);\n\t};\n\t\n\tmodule.exports = EventEmitter;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Compiler = __webpack_require__(61);\n\tvar Directive = __webpack_require__(62);\n\tvar Expression = __webpack_require__(63);\n\tvar Template = __webpack_require__(86);\n\tvar directives = __webpack_require__(64);\n\t\n\tTemplate.Template = Template;\n\tTemplate.Compiler = Compiler;\n\tTemplate.Directive = Directive;\n\tTemplate.directives = directives;\n\tTemplate.Expression = Expression;\n\t\n\tmodule.exports = Template;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Class = __webpack_require__(13);\n\tvar Directive = __webpack_require__(62);\n\tvar utils = __webpack_require__(12);\n\tvar Expression = __webpack_require__(63);\n\tvar commonDirectives = __webpack_require__(64);\n\t\n\tvar DEFAULT_PREFIX = 'm';\n\t\n\t/**\n\t * 模板编译器\n\t * 可以通过指定「前缀」或「指令集」构建实例\n\t */\n\tvar Compiler = new Class({\n\t\n\t  /**\n\t   * 构造一个编译器\n\t   * @param {Object} options 选项\n\t   * @returns {void} 无返回\n\t   */\n\t  constructor: function /*istanbul ignore next*/constructor(options) {\n\t    options = options || {};\n\t    this.prefix = options.prefix || DEFAULT_PREFIX;\n\t    this.elementDirectives = {};\n\t    this.attributeDirectives = {};\n\t    this.registerDirectives(commonDirectives);\n\t    this.registerDirectives(options.directives);\n\t  },\n\t\n\t  /**\n\t   * 添加指令\n\t   * @param {Object} directives 指令集 \n\t   * @returns {void} 无返回\n\t   */\n\t  registerDirectives: function /*istanbul ignore next*/registerDirectives(directives) {\n\t    utils.each(directives, function (name, directive) {\n\t      name = name.replace(/([A-Z])/g, '-$1');\n\t      if (name[0] == '-') name = name.slice(1);\n\t      var fullName = directive.options.prefix === false ? name : /*istanbul ignore next*/this.prefix + ':' + name;\n\t      if (directive.options.type == Directive.TE) {\n\t        this.elementDirectives[fullName.toUpperCase()] = directive;\n\t      } else {\n\t        this.attributeDirectives[fullName] = directive;\n\t      }\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * 解析要 attr 指令信息\n\t   * @param {string} attrName 要解析的名称字符串\n\t   * @returns {Object} 解析后的对象\n\t   */\n\t  _parseAttrInfo: function /*istanbul ignore next*/_parseAttrInfo(attrName) {\n\t    var parts = attrName.toLowerCase().split(':');\n\t    var info = {};\n\t    if (parts.length > 1) {\n\t      info.name = /*istanbul ignore next*/parts[0] + ':' + parts[1];\n\t      info.decorates = parts.slice(2);\n\t    } else {\n\t      info.name = parts[0];\n\t      info.decorates = [];\n\t    }\n\t    return info;\n\t  },\n\t\n\t  /**\n\t   * 创建一个指令实例\n\t   * @param {Directive} Directive 指令类\n\t   * @param {Object} options 指令构建选项\n\t   * @returns {Directive} 指令实例\n\t   */\n\t  _createDirectiveInstance: function /*istanbul ignore next*/_createDirectiveInstance(Directive, options) {\n\t    options.compiler = this;\n\t    options.prefix = this.prefix;\n\t    return new Directive(options);\n\t  },\n\t\n\t  /**\n\t   * 初始化一个编译完成的 handler\n\t   * @param {function} handler 编译后的的模板函数\n\t   * @returns {void} 无返回\n\t   */\n\t  _bindHandler: function /*istanbul ignore next*/_bindHandler(handler) {\n\t    //排序 directives\n\t    handler.directives = handler.directives.sort(function (a, b) {\n\t      return b.level - a.level;\n\t    });\n\t    //初始化 directives\n\t    var boundDirectives = [];\n\t    utils.each(handler.directives, function (index, directive) {\n\t      directive.index = index;\n\t      directive.bind();\n\t      boundDirectives.push(directive);\n\t      //移除完成绑定的指令对应的 attribute\n\t      if (directive.remove !== false && directive.attribute) {\n\t        directive.node.removeAttribute(directive.attribute.name);\n\t      }\n\t      //如果遇到一个「终态」指令，停止向下初始化\n\t      if (directive.final) {\n\t        return handler.final = true;\n\t      }\n\t    }, this);\n\t    handler.directives = boundDirectives;\n\t  },\n\t\n\t  /**\n\t   * 编译一个元素本身\n\t   * @param {function} handler 当前模板函数\n\t   * @param {HTMLNode} node 当前 HTML 结点\n\t   * @returns {void} 无返回\n\t   */\n\t  _compileElement: function /*istanbul ignore next*/_compileElement(handler, node) {\n\t    var ElementDirective = this.elementDirectives[node.nodeName.toUpperCase()];\n\t    if (!ElementDirective) return;\n\t    handler.directives.push(this._createDirectiveInstance(ElementDirective, {\n\t      handler: handler,\n\t      node: node\n\t    }));\n\t  },\n\t\n\t  /**\n\t   * 编译一个元素所有 attributes \n\t   * @param {function} handler 当前模板函数\n\t   * @param {HTMLNode} node 当前 HTML 结点\n\t   * @returns {void} 无返回\n\t   */\n\t  _compileAttributes: function /*istanbul ignore next*/_compileAttributes(handler, node) {\n\t    utils.toArray(node.attributes).forEach(function (attribute) {\n\t      var attrInfo = this._parseAttrInfo(attribute.name);\n\t      var AttrDirective = this.attributeDirectives[attrInfo.name] || this.attributeDirectives['*'];\n\t      if (!AttrDirective) return;\n\t      var directiveOptions = AttrDirective.options;\n\t      handler.directives.push(this._createDirectiveInstance(AttrDirective, {\n\t        handler: handler,\n\t        node: node,\n\t        attribute: attribute,\n\t        expression: directiveOptions.literal ? attribute.value : new Expression(attribute.value, directiveOptions.mixed),\n\t        decorates: attrInfo.decorates\n\t      }));\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * 编译所有子结点\n\t   * @param {function} handler 当前模板函数\n\t   * @param {HTMLNode} node 当前 HTML 结点\n\t   * @returns {void} 无返回\n\t   */\n\t  _compileChildren: function /*istanbul ignore next*/_compileChildren(handler, node) {\n\t    if (handler.final) return;\n\t    utils.toArray(node.childNodes).forEach(function (childNode) {\n\t      if (childNode._compiled_) return;\n\t      var childHandler = this.compile(childNode);\n\t      childHandler.parent = this;\n\t      handler.children.push(childHandler);\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * 编译一个模板\n\t   * @param {HTMLNode} node 模板根元素\n\t   * @param {Object} options 选项\n\t   * @returns {function} 模板函数\n\t   */\n\t  compile: function /*istanbul ignore next*/compile(node, options) {\n\t    if (!node) {\n\t      throw new Error('Invalid node for compile');\n\t    }\n\t    node._compiled_ = true;\n\t    options = options || {};\n\t    //定义编译结果函数\n\t    var handler = function handler(scope) {\n\t      if (utils.isNull(scope)) scope = {};\n\t      handler.directives.forEach(function (directive) {\n\t        directive.scope = scope;\n\t        directive.execute(scope);\n\t      }, this);\n\t      handler.children.forEach(function (childHandler) {\n\t        childHandler(scope);\n\t      }, this);\n\t    };\n\t    //--\n\t    handler.dispose = function () {\n\t      handler.directives.forEach(function (directive) {\n\t        directive.unbind();\n\t      }, this);\n\t      handler.children.forEach(function (childHandler) {\n\t        childHandler.dispose();\n\t      }, this);\n\t    };\n\t    handler.node = node;\n\t    //定义 children & directives \n\t    handler.directives = [];\n\t    handler.children = [];\n\t    //编译相关指令\n\t    if (options.element !== false) this._compileElement(handler, node);\n\t    if (options.attribute !== false) this._compileAttributes(handler, node);\n\t    this._bindHandler(handler);\n\t    if (options.children !== false) this._compileChildren(handler, node);\n\t    //返回编译后函数\n\t    return handler;\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = Compiler;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Class = __webpack_require__(13);\n\tvar utils = __webpack_require__(12);\n\tvar Expression = __webpack_require__(63);\n\t\n\t/**\n\t * 指令定义工场函数\n\t * @param {Object} classOptions 选项\n\t * @returns {Directive} 指令类\n\t */\n\tfunction Directive(classOptions) {\n\t  //处理指令选项\n\t  classOptions = classOptions || {};\n\t  classOptions.type = classOptions.type || Directive.TA;\n\t  classOptions.level = classOptions.level || Directive.LG;\n\t\n\t  //生成指令类\n\t  var DirectiveClass = new Class({\n\t\n\t    $extends: classOptions,\n\t    //指令构建函数\n\t    constructor: function /*istanbul ignore next*/constructor(instanceOptions) {\n\t      utils.copy(instanceOptions, this);\n\t    },\n\t    //挂载实例上的 options\n\t    options: classOptions,\n\t    //挂载实例核心方法\n\t    bind: classOptions.bind || utils.noop,\n\t    execute: classOptions.execute || function (scope) {\n\t      this.scope = scope;\n\t      if (this.options.type === Directive.TE) {\n\t        return this.update();\n\t      }\n\t      var newValue = this.options.literal ? this.attribute.value : this.expression.execute(scope);\n\t      if (!utils.deepEqual(this._value_, newValue)) {\n\t        this.update(newValue, this._value_);\n\t        this._value_ = newValue;\n\t      }\n\t    },\n\t    update: classOptions.update || utils.noop,\n\t    unbind: classOptions.unbind || utils.noop,\n\t    //挂载指令常用的类型\n\t    utils: utils,\n\t    Expression: Expression\n\t  });\n\t  //向指令类添加「指令定义信息」\n\t  DirectiveClass.options = classOptions;\n\t  utils.setPrototypeOf(DirectiveClass, classOptions);\n\t  return DirectiveClass;\n\t}\n\t\n\t//指令类型\n\tDirective.TA = 'A';\n\tDirective.TE = 'E';\n\t\n\t//指令级别\n\tDirective.LP = 3000; //prevent\n\tDirective.LS = 2000; //statement\n\tDirective.LE = 1000; //eleemtn\n\tDirective.LG = 0; //general\n\tDirective.LA = -1000; //any attribute\n\tDirective.LC = -2000; //cloak\n\t\n\tmodule.exports = Directive;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Class = __webpack_require__(13);\n\tvar utils = __webpack_require__(12);\n\t\n\t/**\n\t * 表达式类型，将字符串构析为可执行表达式实例\n\t */\n\tvar Expression = new Class({\n\t\n\t  /**\n\t   * 通过字符串构造一个表达式实例\n\t   * @param {string} code 代码字符串\n\t   * @param {boolean} mix 是否是混合代码\n\t   * @returns {void} 无返回\n\t   */\n\t  constructor: function /*istanbul ignore next*/constructor(code, mix) {\n\t    this.func = mix ? this._compileMixedCode(code) : this._compileCode(code);\n\t  },\n\t\n\t  /**\n\t   * 编译普通表达式代码\n\t   * @param {string} code 代码字符串\n\t   * @returns {function} 编辑后的函数\n\t   */\n\t  _compileCode: function /*istanbul ignore next*/_compileCode(code) {\n\t    code = this._escapeEOL(this._wrapCode(code));\n\t    return this._createFunction(code);\n\t  },\n\t\n\t  /**\n\t   * 编辑混合的表达式代码\n\t   * @param {string} code 代码字符串\n\t   * @returns {function} 编辑后的函数\n\t   */\n\t  _compileMixedCode: function /*istanbul ignore next*/_compileMixedCode(code) {\n\t    var statements = this._parseMixedCode(code);\n\t    code = this._escapeEOL(statements.join('+'));\n\t    return this._createFunction(code);\n\t  },\n\t\n\t  /**\n\t   * 通过符串代码创建一个可执行函数\n\t   * @param {string} code 代码字符串\n\t   * @returns {function} 创建的函数\n\t   */\n\t  _createFunction: function /*istanbul ignore next*/_createFunction(code) {\n\t    var func = new Function('utils', 'scope', 'with(scope){return ' + code + '}');\n\t    return func.bind(null, utils);\n\t  },\n\t\n\t  /**\n\t   * 解析混合代码字符串\n\t   * @param {string} code 混合代码字符串\n\t   * @returns {Array} 解析后的「token」列表\n\t   */\n\t  _parseMixedCode: function /*istanbul ignore next*/_parseMixedCode(code) {\n\t    var index = 0,\n\t        length = code.length;\n\t    var token = '',\n\t        isExpr = false,\n\t        tokens = [];\n\t    while (index <= length) {\n\t      var char = code[index++];\n\t      var nextChar = code[index];\n\t      if (utils.isNull(char)) {\n\t        if (token.length > 0) {\n\t          tokens.push('\"' + this._escapeCode(token) + '\"');\n\t        }\n\t        token = '';\n\t        isExpr = false;\n\t      } else if (!isExpr && char + nextChar == '{{') {\n\t        if (token.length > 0) {\n\t          tokens.push('\"' + this._escapeCode(token) + '\"');\n\t        }\n\t        token = '';\n\t        isExpr = true;\n\t        index++;\n\t      } else if (isExpr && char + nextChar == '}}') {\n\t        if (token.length > 0) {\n\t          tokens.push(this._wrapCode(token));\n\t        }\n\t        token = '';\n\t        isExpr = false;\n\t        index++;\n\t      } else {\n\t        token += char;\n\t      }\n\t    }\n\t    return tokens;\n\t  },\n\t\n\t  /**\n\t   * 转义处理代码字符串\n\t   * @param {string} code 源字符串\n\t   * @returns {string} 处理后的字符串\n\t   */\n\t  _escapeCode: function /*istanbul ignore next*/_escapeCode(code) {\n\t    return code.replace(/\"/, '\\\\\"').replace('\\r\\n', '\\\\r\\\\n').replace('\\n', '\\\\n');\n\t  },\n\t\n\t  /**\n\t   * 转义换行符\n\t   * @param {string} code 源字符串\n\t   * @returns {string} 处理后的字符串\n\t   */\n\t  _escapeEOL: function /*istanbul ignore next*/_escapeEOL(code) {\n\t    return code.replace(/\\n/gm, '\\\\\\n');\n\t  },\n\t\n\t  /**\n\t   * 通过闭包和 try/cache 包裹代码\n\t   * 将模板中错误的代码直接显示在「模板中用到的位置」，更易于定位错误。\n\t   * @param {string} code 源字符串\n\t   * @returns {string} 处理后的字符串\n\t   */\n\t  _wrapCode: function /*istanbul ignore next*/_wrapCode(code) {\n\t    return '((function(){try{return (' + code + ')}catch(err){console.error(err);return err;}})())';\n\t  },\n\t\n\t  /**\n\t   * 通过 scope 对象执行表达式\n\t   * @param {Object} scope 上下文对象\n\t   * @returns {Object} 执行结果\n\t   */\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    if (utils.isNull(scope)) {\n\t      scope = {};\n\t    }\n\t    return this.func.call(scope, scope);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = Expression;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tmodule.exports = {\n\t  '#text': __webpack_require__(65),\n\t  'each': __webpack_require__(66),\n\t  'if': __webpack_require__(68),\n\t  'prop': __webpack_require__(69),\n\t  'attr': __webpack_require__(70),\n\t  'on': __webpack_require__(71),\n\t  'html': __webpack_require__(72),\n\t  'text': __webpack_require__(73),\n\t  'prevent': __webpack_require__(74),\n\t  'id': __webpack_require__(75),\n\t  'cloak': __webpack_require__(76),\n\t  'show': __webpack_require__(77),\n\t  'model': __webpack_require__(78),\n\t  '*': __webpack_require__(85) //处理所有未知 attr\n\t};\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar Expression = __webpack_require__(63);\n\t\n\tmodule.exports = new Directive({\n\t  type: Directive.TE,\n\t  prefix: false,\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.expr = new Expression(this.node.nodeValue, true);\n\t    this.node.nodeValue = '';\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    this.scope = scope;\n\t    var newValue = this.expr.execute(scope);\n\t    if (this.node.nodeValue !== newValue) {\n\t      this.node.nodeValue = newValue;\n\t    }\n\t  }\n\t\n\t});\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar _defineProperty = __webpack_require__(56);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar utils = __webpack_require__(12);\n\tvar Scope = __webpack_require__(67);\n\t\n\tmodule.exports = new Directive({\n\t  level: Directive.LS + 1, //比 if 要高一个权重\n\t  final: true,\n\t  literal: true,\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.mountNode = document.createTextNode('');\n\t    this.node.parentNode.insertBefore(this.mountNode, this.node);\n\t    //虽然，bind 完成后，也会进行 attribute 的移除，\n\t    //但 each 指令必须先移除，否再进行 item 编译时 each 还会生效\n\t    this.node.removeAttribute(this.attribute.name);\n\t    this.node.parentNode.removeChild(this.node);\n\t    this.parseExpr();\n\t    this.eachItems = {};\n\t  },\n\t\n\t  parseExpr: function /*istanbul ignore next*/parseExpr() {\n\t    this.eachType = this.attribute.value.indexOf(' in ') > -1 ? 'in' : 'of';\n\t    var tokens = this.attribute.value.split(' ' + this.eachType + ' ');\n\t    var fnText = /*istanbul ignore next*/'with(scope){utils.each(' + tokens[1] + ',fn.bind(this,' + tokens[1] + '))}';\n\t    this.each = new Function('utils', 'scope', 'fn', fnText).bind(null, this.utils);\n\t    var names = tokens[0].split(',').map(function (name) {\n\t      return name.trim();\n\t    });\n\t    if (this.eachType == 'in') {\n\t      this.keyName = names[0];\n\t      this.valueName = names[1];\n\t    } else {\n\t      this.keyName = names[1];\n\t      this.valueName = names[0];\n\t    }\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    /*istanbul ignore next*/var _this = this;\n\t\n\t    var currentEachKeys = [];\n\t    var itemsFragment = document.createDocumentFragment();\n\t    var self = this;\n\t    this.each(scope, function (eachTarget, key) {\n\t      //创建新 scope，必须选创建再设置 prototype 或采用定义「属性」的方式\n\t      //因为指令参数指定的名称有可能和 scope 原有变量冲突\n\t      //将导致针对 watch 变量的赋值，从引用发循环\n\t      var newScope = new Scope(this.scope);\n\t      if (self.keyName) {\n\t        /*istanbul ignore next*/(0, _defineProperty2.default)(newScope, self.keyName, {\n\t          /*istanbul ignore next*/get: function get() {\n\t            return key;\n\t          }\n\t        });\n\t      }\n\t      //value 采用「属性」进行代理，否则将会使「双向」绑定无把回设值\n\t      if (self.valueName) {\n\t        /*istanbul ignore next*/(0, _defineProperty2.default)(newScope, self.valueName, {\n\t          /*istanbul ignore next*/get: function get() {\n\t            return eachTarget[key];\n\t          },\n\t          /*istanbul ignore next*/set: function set(value) {\n\t            eachTarget[key] = value;\n\t          }\n\t        });\n\t      }\n\t      var oldItem = this.eachItems[key];\n\t      if (oldItem) {\n\t        oldItem.handler(newScope);\n\t      } else {\n\t        var newItem = {};\n\t        //创建新元素\n\t        newItem.node = this.node.cloneNode(true);\n\t        itemsFragment.appendChild(newItem.node);\n\t        newItem.handler = this.compiler.compile(newItem.node);\n\t        newItem.handler(newScope);\n\t        this.eachItems[key] = newItem;\n\t      }\n\t      currentEachKeys.push(key);\n\t    }.bind(this));\n\t    utils.each(this.eachItems, function (key, item) {\n\t      if (currentEachKeys.some(function (k) /*istanbul ignore next*/{\n\t        return k == key;\n\t      })) return;\n\t      if (item.node.parentNode) {\n\t        item.node.parentNode.removeChild(item.node);\n\t      }\n\t      delete /*istanbul ignore next*/_this.eachItems[key];\n\t    }, this);\n\t    if (itemsFragment.childNodes.length > 0) {\n\t      this.mountNode.parentNode.insertBefore(itemsFragment, this.mountNode);\n\t    }\n\t  }\n\t\n\t});\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar utils = __webpack_require__(12);\n\t\n\tvar Scope = function Scope(parent, props) {\n\t  //新的 scope 因为「继承」了 _observer_ \n\t  //所以在新 scope 上进行双向绑定时，将将值成功回写\n\t  //如果有天不须用 utils.cteate 继承法，需要注意 _observer_ \n\t  //或在新 scope 上 defineProperty 代理 parentScope\n\t  var scope = utils.create(parent);\n\t  utils.copy(props, scope);\n\t  //将 func 绑定到原 scope 上;\n\t  utils.each(parent, function (key, value) {\n\t    if (!utils.isFunction(value)) return;\n\t    scope[key] = value.bind(parent);\n\t  });\n\t  return scope;\n\t};\n\t\n\tmodule.exports = Scope;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  level: Directive.LS,\n\t  final: true,\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.mountNode = document.createTextNode('');\n\t    this.node.parentNode.insertBefore(this.mountNode, this.node);\n\t    //虽然，bind 完成后，也会进行 attribute 的移除，\n\t    //但 if 指令必须先移除，否再进行 item 编译时 if 还会生效\n\t    this.node.removeAttribute(this.attribute.name);\n\t    this.node.parentNode.removeChild(this.node);\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    var newValue = this.expression.execute(scope);\n\t    if (newValue) {\n\t      //如果新计算的结果为 true 才执行 \n\t      this._handler = this._handler || this.compiler.compile(this.node);\n\t      this._handler(scope);\n\t      var node = this.node.$substitute || this.node;\n\t      if (!node.parentNode) {\n\t        this.mountNode.parentNode.insertBefore(node, this.mountNode);\n\t      }\n\t    } else {\n\t      var _node = this.node.$substitute || this.node;\n\t      if (_node.parentNode) _node.parentNode.removeChild(_node);\n\t    }\n\t  }\n\t\n\t});\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  update: function /*istanbul ignore next*/update(value) {\n\t    var target = this.node.$target || this.node;\n\t    target[this.decorates[0]] = value;\n\t  }\n\t  // execute: function (scope) {\n\t  //   this.scope = scope;\n\t  //   let newValue = this.expression.execute(scope);\n\t  //   let target = this.node.$target || this.node;\n\t  //   target[this.decorates[0]] = newValue;\n\t  // }\n\t});\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  update: function /*istanbul ignore next*/update(value) {\n\t    var target = this.node.$target || this.node;\n\t    if (target.setAttribute) {\n\t      target.setAttribute(this.decorates[0], value);\n\t    } else {\n\t      target[this.decorates[0]] = value;\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar EventEmitter = __webpack_require__(59);\n\tvar Scope = __webpack_require__(67);\n\t\n\tmodule.exports = new Directive({\n\t  literal: true,\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    var attrValue = this.attribute.value || '';\n\t    if (attrValue.indexOf('(') < 0 && attrValue.indexOf(')') < 0) {\n\t      attrValue += '($event)';\n\t    }\n\t    this.expr = new this.Expression(attrValue);\n\t    var eventTarget = this.node.$target || this.node;\n\t    this.emiter = new EventEmitter(eventTarget);\n\t    this.emiter.addListener(this.decorates[0], function (event) {\n\t      if (this.utils.isNull(this.scope)) return;\n\t      this.expr.execute(new Scope(this.scope, {\n\t        $event: event\n\t      }));\n\t    }.bind(this), false);\n\t  },\n\t\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    this.emiter.removeListener();\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    this.scope = scope;\n\t  }\n\t\n\t});\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  update: function /*istanbul ignore next*/update(newValue) {\n\t    this.node.innerHTML = newValue;\n\t  }\n\t});\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  update: function /*istanbul ignore next*/update(newValue) {\n\t    this.node.innerText = newValue;\n\t  }\n\t});\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  level: Directive.LP,\n\t  final: true\n\t});\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  literal: true,\n\t\n\t  update: function /*istanbul ignore next*/update(id) {\n\t    if (id in this.scope) {\n\t      throw new Error('Conflicting component id `' + id + '`');\n\t    }\n\t    this.scope[id] = this.node.$target || this.node;\n\t  }\n\t\n\t});\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  level: Directive.LC,\n\t  literal: true,\n\t  prefix: false,\n\t\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.node.removeAttribute(this.attribute.name);\n\t  }\n\t\n\t});\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\tmodule.exports = new Directive({\n\t  update: function /*istanbul ignore next*/update(value) {\n\t    this.node.style.display = value ? '' : 'none';\n\t  }\n\t});\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar SelectDirective = __webpack_require__(79);\n\tvar EditableDirective = __webpack_require__(80);\n\tvar InputDirective = __webpack_require__(81);\n\tvar RadioDirective = __webpack_require__(82);\n\tvar CheckboxDirective = __webpack_require__(83);\n\tvar PropDirective = __webpack_require__(84);\n\t\n\tvar Directive = function Directive(options) {\n\t  var node = options.node;\n\t  var tagName = node.tagName;\n\t  if (options.decorates[0]) {\n\t    return new PropDirective(options);\n\t  } else if (tagName == 'INPUT') {\n\t    var type = node.getAttribute('type');\n\t    if (type == 'radio') {\n\t      return new RadioDirective(options);\n\t    } else if (type == 'checkbox') {\n\t      return new CheckboxDirective(options);\n\t    } else {\n\t      return new InputDirective(options);\n\t    }\n\t  } else if (tagName == 'TEXTAREA') {\n\t    return new InputDirective(options);\n\t  } else if (tagName == 'SELECT') {\n\t    return new SelectDirective(options);\n\t  } else if (node.isContentEditable) {\n\t    return new EditableDirective(options);\n\t  } else {\n\t    throw new Error( /*istanbul ignore next*/'Directive `model` cannot be used on `' + tagName + '`');\n\t  }\n\t};\n\t\n\t//手动添加 classOptions\n\tDirective.options = {\n\t  level: Directive.LA\n\t};\n\t\n\tmodule.exports = Directive;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar EventEmitter = __webpack_require__(59);\n\tvar Scope = __webpack_require__(67);\n\t\n\tmodule.exports = new Directive({\n\t  final: true,\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n\t    this.node.removeAttribute(this.attribute.name);\n\t    this._handler = this.compiler.compile(this.node);\n\t    this.emiter = new EventEmitter(this.node);\n\t    this.emiter.addListener('change', function () {\n\t      if (this.utils.isNull(this.scope)) return;\n\t      var selectedOptions = this.node.selectedOptions;\n\t      var value = this.node.multiple ? [].slice.call(selectedOptions).map(function (option) {\n\t        return option.value;\n\t      }, this) : selectedOptions[0].value;\n\t      this.backExpr.execute(new Scope(this.scope, {\n\t        _value_: value\n\t      }));\n\t    }.bind(this), false);\n\t  },\n\t\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    this.emiter.removeListener();\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    this.scope = scope;\n\t    this._handler(scope);\n\t    var value = this.expression.execute(scope);\n\t    if (!this.utils.isArray(value)) value = [value];\n\t    [].slice.call(this.node.options).forEach(function (option) {\n\t      option.selected = value.indexOf(option.value) > -1;\n\t    }, this);\n\t  }\n\t\n\t});\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar EventEmitter = __webpack_require__(59);\n\tvar Scope = __webpack_require__(67);\n\t\n\tmodule.exports = new Directive({\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n\t    this.emiter = new EventEmitter(this.node);\n\t    this.emiter.addListener('input', function () {\n\t      if (this.utils.isNull(this.scope)) return;\n\t      this.backExpr.execute(new Scope(this.scope, {\n\t        _value_: this.node.innerHTML\n\t      }));\n\t    }.bind(this), false);\n\t  },\n\t\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    this.emiter.removeListener();\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    var value = this.expression.execute(scope);\n\t    if (this.node.innerHTML !== value) {\n\t      this.node.innerHTML = value;\n\t    }\n\t  }\n\t\n\t});\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar EventEmitter = __webpack_require__(59);\n\tvar Scope = __webpack_require__(67);\n\t\n\tmodule.exports = new Directive({\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n\t    this.emiter = new EventEmitter(this.node);\n\t    this.emiter.addListener('input', function () {\n\t      if (this.utils.isNull(this.scope)) return;\n\t      this.backExpr.execute(new Scope(this.scope, {\n\t        _value_: this.node.value\n\t      }));\n\t    }.bind(this), false);\n\t  },\n\t\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    this.emiter.removeListener();\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    var value = this.expression.execute(scope);\n\t    if (this.node.value !== value) {\n\t      this.node.value = value;\n\t    }\n\t  }\n\t\n\t});\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar EventEmitter = __webpack_require__(59);\n\tvar Scope = __webpack_require__(67);\n\t\n\tmodule.exports = new Directive({\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n\t    this.emiter = new EventEmitter(this.node);\n\t    this.emiter.addListener('change', function () {\n\t      if (this.utils.isNull(this.scope)) return;\n\t      this.backExpr.execute(new Scope(this.scope, {\n\t        _value_: this.node.value\n\t      }));\n\t    }.bind(this), false);\n\t  },\n\t\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    this.emiter.removeListener();\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    this.scope = scope;\n\t    var value = this.expression.execute(scope);\n\t    this.node.checked = value == this.node.value;\n\t  }\n\t\n\t});\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar EventEmitter = __webpack_require__(59);\n\tvar Scope = __webpack_require__(67);\n\t\n\tmodule.exports = new Directive({\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n\t    this.emiter = new EventEmitter(this.node);\n\t    this.emiter.addListener('change', function () {\n\t      if (this.utils.isNull(this.scope)) return;\n\t      var value = this.expression.execute(this.scope);\n\t      if (this.utils.isArray(value) && this.node.checked) {\n\t        value.push(this.node.value);\n\t      } else if (this.utils.isArray(value) && !this.node.checked) {\n\t        var index = value.indexOf(this.node.value);\n\t        value.splice(index, 1);\n\t      } else {\n\t        this.backExpr.execute(new Scope(this.scope, {\n\t          _value_: this.node.checked\n\t        }));\n\t      }\n\t    }.bind(this), false);\n\t  },\n\t\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    this.emiter.removeListener();\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    this.scope = scope;\n\t    var value = this.expression.execute(scope);\n\t    if (this.utils.isArray(value)) {\n\t      this.node.checked = value.indexOf(this.node.value) > -1;\n\t    } else {\n\t      this.node.checked = value;\n\t    }\n\t  }\n\t\n\t});\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\tvar Scope = __webpack_require__(67);\n\t\n\tmodule.exports = new Directive({\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    /*istanbul ignore next*/var _this = this;\n\t\n\t    this.target = this.node.$target;\n\t    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n\t    this.bindProp = this.decorates[0];\n\t    if (!this.target) {\n\t      throw new Error( /*istanbul ignore next*/'Directive `model:' + this.bindProp + '` cannot be used on `' + this.node.tagName + '`');\n\t    }\n\t    this.watcher = this.target.$watch(this.bindProp, function (value) {\n\t      if ( /*istanbul ignore next*/_this.utils.isNull( /*istanbul ignore next*/_this.scope)) return;\n\t      /*istanbul ignore next*/_this.backExpr.execute(new Scope( /*istanbul ignore next*/_this.scope, {\n\t        _value_: value\n\t      }));\n\t    });\n\t  },\n\t\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    this.target.$unWatch(this.watcher);\n\t  },\n\t\n\t  update: function /*istanbul ignore next*/update(value) {\n\t    this.target[this.bindProp] = value;\n\t  }\n\t\n\t});\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Directive = __webpack_require__(62);\n\t\n\t/**\n\t * 通用的 attribute 指令\n\t * 用于所有 attribute 的处理\n\t * 例如:\n\t *  <div attr1=\"{{expr1}}\" {{expr2}} {{attr3}}=\"{{expr3}}\">\n\t *  </div>\n\t */\n\tmodule.exports = new Directive({\n\t  level: Directive.LA,\n\t  prefix: false,\n\t  literal: true,\n\t  remove: false,\n\t\n\t  /**\n\t   * 初始化指令\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    this.computedName = this.attribute.name;\n\t    this.computedValue = this.attribute.value;\n\t    this.nameExpr = new this.Expression(this.attribute.name, true);\n\t    this.valueExpr = new this.Expression(this.attribute.value, true);\n\t  },\n\t\n\t  execute: function /*istanbul ignore next*/execute(scope) {\n\t    var target = this.node.$target || this.node;\n\t    var newComputedName = this.nameExpr.execute(scope);\n\t    if (this.computedName !== newComputedName) {\n\t      //移除旧名称\n\t      if (target.removeAttribute) {\n\t        target.removeAttribute(this.computedName);\n\t      }\n\t      //设置新名称\n\t      this.computedName = newComputedName;\n\t      if (!this.utils.isNull(this.computedName) && this.computedName.length > 0) {\n\t        if (target.setAttribute) {\n\t          target.setAttribute(this.computedName, this.computedValue || '');\n\t        }\n\t      }\n\t    }\n\t    var newComputeValue = this.valueExpr.execute(scope);\n\t    if (this.computedValue !== newComputeValue) {\n\t      this.computedValue = newComputeValue;\n\t      if (target.setAttribute) {\n\t        target.setAttribute(this.computedName, this.computedValue || '');\n\t      } else {\n\t        target[this.computedName] = this.computedValue;\n\t      }\n\t    }\n\t  }\n\t\n\t});\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Class = __webpack_require__(13);\n\tvar Observer = __webpack_require__(15);\n\tvar EventEmitter = __webpack_require__(59);\n\tvar Compiler = __webpack_require__(61);\n\t\n\t/**\n\t * 模板类\n\t * 可能通过 element 作为参数，创建一个模板实例\n\t */\n\tvar Template = new Class({\n\t\n\t  $extends: EventEmitter,\n\t\n\t  /**\n\t   * 构建一个模板板实例\n\t   * @param {HTMLNode} element HTML 元素\n\t   * @param {Object} options 选项\n\t   * @returns {void} 无返回\n\t   */\n\t  constructor: function /*istanbul ignore next*/constructor(element, options) {\n\t    options = options || {};\n\t    EventEmitter.call(this);\n\t    this.options = options;\n\t    this.element = element;\n\t    this.compiler = options.compiler || new Compiler(options);\n\t    this.render = this.compiler.compile(this.element);\n\t    this.update = this.update.bind(this);\n\t    this._update = this._update.bind(this);\n\t    this._updateTimer = 0;\n\t  },\n\t\n\t  /**\n\t   * 更新当前模板 (会过滤不必要的更新)\n\t   * @returns {void} 无返回\n\t   */\n\t  update: function /*istanbul ignore next*/update() {\n\t    if (this._updateTimer) {\n\t      clearTimeout(this._updateTimer);\n\t      this._updateTimer = null;\n\t    }\n\t    this._updateTimer = setTimeout(this._update, 0);\n\t  },\n\t\n\t  /**\n\t   * 更新当前模板内部方法 \n\t   * @returns {void} 无返回\n\t   */\n\t  _update: function /*istanbul ignore next*/_update() {\n\t    if (!this._updateTimer || !this.observer) return;\n\t    this.emit('update', this);\n\t    this.render(this.observer.target);\n\t    this._onBind();\n\t  },\n\t\n\t  /**\n\t   * 在绑定成功时\n\t   * @returns {void} 无返回\n\t   */\n\t  _onBind: function /*istanbul ignore next*/_onBind() {\n\t    if (this._bound) return;\n\t    this._bound = true;\n\t    this.emit('bind', this);\n\t  },\n\t\n\t  /**\n\t   * 将模板绑定到一个 scope\n\t   * @param {Object} scope 绑定的上下文对象\n\t   * @param {boolean} disableFirst 是否禁用第一次的自动渲染\n\t   * @returns {void} 无返回\n\t   */\n\t  bind: function /*istanbul ignore next*/bind(scope, disableFirst) {\n\t    if (!scope) return;\n\t    this.unbind();\n\t    this.observer = new Observer(scope, {\n\t      root: this.options.root\n\t    });\n\t    scope.$self = scope;\n\t    this.observer.on('change', this.update);\n\t    if (disableFirst) {\n\t      this._onBind();\n\t    } else {\n\t      this.update();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 解绑定\n\t   * @returns {void} 无返回\n\t   */\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    if (!this.observer) return;\n\t    this.observer.removeListener('change', this.update);\n\t    this.observer.clearReference();\n\t    this.observer = null;\n\t  },\n\t\n\t  /**\n\t   * 释放\n\t   * @returns {void} 无返回\n\t   */\n\t  dispose: function /*istanbul ignore next*/dispose() {\n\t    this.unbind();\n\t    this.render.dispose();\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = Template;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Component = __webpack_require__(88);\n\tvar components = __webpack_require__(90);\n\tvar directives = __webpack_require__(60).directives;\n\t\n\tComponent.components = components;\n\tComponent.Component = Component;\n\t\n\tComponent.component = function (name, component) {\n\t  if (!component) return components[name];\n\t  components[name] = component;\n\t};\n\t\n\tComponent.directive = function (name, directive) {\n\t  if (!directive) return directives[name];\n\t  directives[name] = directive;\n\t};\n\t\n\tmodule.exports = Component;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar _defineProperty = __webpack_require__(56);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Class = __webpack_require__(13);\n\tvar Template = __webpack_require__(60);\n\tvar Watcher = __webpack_require__(14);\n\tvar utils = __webpack_require__(12);\n\tvar EventEmitter = __webpack_require__(59);\n\tvar Observer = __webpack_require__(15);\n\tvar ComponentDirective = __webpack_require__(89);\n\t\n\t/**\n\t * 组件类\n\t * 用于定义一个新的组件\n\t * @param {Object} classOpts 类选项\n\t * @returns {Component} 组件类\n\t */\n\tfunction Component(classOpts) {\n\t\n\t  //处理组件选项\n\t  classOpts = classOpts || {};\n\t\n\t  //处理「继承」，目前的机制，只能用「合并类选项」\n\t  var mixes = classOpts.mixes;\n\t  delete classOpts.mixes;\n\t  if (mixes && !utils.isArray(mixes)) {\n\t    mixes = [mixes];\n\t  } else {\n\t    mixes = [];\n\t  }\n\t  var extendComponent = classOpts.extend || Component;\n\t  delete classOpts.extend;\n\t  //extend 会覆盖 mixes 中的同名成员\n\t  mixes.push(extendComponent);\n\t  //classOpts 会覆盖 extend 或 mixes 中的同名成员\n\t  mixes.push(classOpts);\n\t  var mixedClassOpts = {};\n\t  mixes.forEach(function (mixItem) {\n\t    if (mixItem instanceof Component || mixItem == Component) {\n\t      mixItem = mixItem.$options || {};\n\t    }\n\t    utils.mix(mixedClassOpts, mixItem);\n\t  });\n\t  classOpts = mixedClassOpts;\n\t\n\t  /**\n\t   * 定义组件类\n\t   * 可以通过 new ComponentClass() 创建组件实例\n\t   */\n\t  var ComponentClass = new Class({\n\t    $extends: extendComponent,\n\t\n\t    /**\n\t     * 组件类构造函数\n\t     * @param {object} instanceOpts 实例选项\n\t     * @returns {void} 无返回\n\t     */\n\t    constructor: function /*istanbul ignore next*/constructor(instanceOpts) {\n\t      /*istanbul ignore next*/var _this = this;\n\t\n\t      if (this == window) return new this.$class(instanceOpts);\n\t      EventEmitter.call(this);\n\t      instanceOpts = instanceOpts || {};\n\t      //创建组件实例时可以给实例添加成员\n\t      utils.each(instanceOpts, function (key, value) {\n\t        if (key in /*istanbul ignore next*/_this) return;\n\t        /*istanbul ignore next*/_this[key] = value;\n\t      });\n\t      this._onTemplateUpdate_ = this._onTemplateUpdate_.bind(this);\n\t      this._createdData_(classOpts.data);\n\t      this._createProperties_(classOpts.properties || classOpts.props);\n\t      this._createWatches_(classOpts.watches || classOpts.watch);\n\t      this.$directives = this.$directives || {};\n\t      this._importDirectives_(classOpts.directives);\n\t      this.$components = this.$components || {};\n\t      this._importComponents_(__webpack_require__(90));\n\t      this._importComponents_({\n\t        'self': ComponentClass\n\t      });\n\t      this._importComponents_(classOpts.components);\n\t      utils.defineFreezeProp(this, '$children', []);\n\t      if (instanceOpts.parent) this.$setParent(instanceOpts.parent);\n\t      this.$callHook('onInit', [instanceOpts]);\n\t      Observer.observe(this);\n\t      if (classOpts.element) {\n\t        this.$mount();\n\t      } else {\n\t        this.$compile();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * 设定父组件\n\t     * @param {Object} parent 父组件\n\t     * @returns {void} 无返回\n\t     */\n\t    $setParent: function /*istanbul ignore next*/$setParent(parent) {\n\t      if (this.$parent === parent) return;\n\t      if (this.$parent) {\n\t        this.$parent.$removeChild(this);\n\t      }\n\t      if (parent) {\n\t        parent.$addChild(this);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * 添加子组件\n\t     * @param {Object} child 子组件\n\t     * @returns {void} 无返回\n\t     */\n\t    $addChild: function /*istanbul ignore next*/$addChild(child) {\n\t      if (!(child instanceof Component)) return;\n\t      this.$children.push(child);\n\t      utils.defineFreezeProp(child, '$parent', this);\n\t      utils.defineFreezeProp(child, '$root', this.$root || this);\n\t    },\n\t\n\t    /**\n\t     * 移除子组件\n\t     * @param {Object} child 子组件\n\t     * @returns {void} 无返回\n\t     */\n\t    $removeChild: function /*istanbul ignore next*/$removeChild(child) {\n\t      var index = this.$children.indexOf(child);\n\t      this.$children.splice(index, 1);\n\t      utils.defineFreezeProp(child, '$parent', null);\n\t      //utils.defineFreezeProp(child, '$root', null);\n\t    },\n\t\n\t    /**\n\t     * 获取根组件, 为了能通过 polyfill 处理 IE8 暂不用这种方式\n\t     */\n\t    get $root() {\n\t      if (this.$parent) {\n\t        return this.$parent.$root;\n\t      } else {\n\t        return this;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * 导入用到的子组件类\n\t     * @param {Object} components 引入的组件\n\t     * @returns {void} 无返回\n\t     */\n\t    _importComponents_: function /*istanbul ignore next*/_importComponents_(components) {\n\t      utils.each(components, function (name, component) {\n\t        if (!component) return;\n\t        this.$components[name] = component;\n\t        this.$directives[name] = new ComponentDirective({\n\t          name: name,\n\t          component: component,\n\t          parent: this\n\t        });\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * 导入一个用到的指令\n\t     * @param {Object} directives 引入的指令\n\t     * @returns {void} 无返回\n\t     */\n\t    _importDirectives_: function /*istanbul ignore next*/_importDirectives_(directives) {\n\t      utils.each(directives, function (name, directive) {\n\t        if (!directive) return;\n\t        this.$directives[name] = directive;\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * 调用生命周期 hook\n\t     * @param {string} name 调用的 hook 名称\n\t     * @param {Array} args 调用 hook 的参数列表\n\t     * @returns {void} 无反回\n\t     */\n\t    $callHook: function /*istanbul ignore next*/$callHook(name, args) {\n\t      if (!utils.isFunction(this[name])) return;\n\t      this[name].apply(this, args || []);\n\t    },\n\t\n\t    /**\n\t     * 创建数据对象\n\t     * @param {Object} data 组件数据对象\n\t     * @returns {void} 无返回\n\t     */\n\t    _createdData_: function /*istanbul ignore next*/_createdData_(data) {\n\t      if (utils.isFunction(data)) {\n\t        this.$data = data.call(this);\n\t      } else {\n\t        this.$data = data || {};\n\t      }\n\t      utils.each(this.$data, function (name) {\n\t        /*istanbul ignore next*/(0, _defineProperty2.default)(this, name, {\n\t          configurable: true,\n\t          enumerable: true,\n\t          get: function /*istanbul ignore next*/get() {\n\t            if (!this.$data) return;\n\t            return this.$data[name];\n\t          },\n\t          set: function /*istanbul ignore next*/set(value) {\n\t            if (!this.$data) return;\n\t            this.$data[name] = value;\n\t          }\n\t        });\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * 创建组件属性\n\t     * @param {Object} properties 属性定义对象\n\t     * @returns {void} 无返回\n\t     */\n\t    _createProperties_: function /*istanbul ignore next*/_createProperties_(properties) {\n\t      this.$properties = {};\n\t      utils.each(properties, function (name, descriptor) {\n\t        if (utils.isFunction(descriptor)) {\n\t          descriptor = {\n\t            get: descriptor\n\t          };\n\t        } else if (!utils.isObject(descriptor)) {\n\t          descriptor = {\n\t            value: descriptor\n\t          };\n\t        } else {\n\t          //不能直接用 descriptor，\n\t          //因为为会导到多个组件实例间的影响\n\t          descriptor = utils.copy(descriptor);\n\t        }\n\t        var hasGetterOrSetter = !!descriptor.get || !!descriptor.set;\n\t        if (!hasGetterOrSetter) {\n\t          descriptor.value = descriptor.value || null;\n\t          descriptor.get = function () {\n\t            return descriptor.value;\n\t          };\n\t          descriptor.set = function (value) {\n\t            descriptor.value = value;\n\t          };\n\t        }\n\t        /*istanbul ignore next*/(0, _defineProperty2.default)(this, name, {\n\t          configurable: true,\n\t          enumerable: true,\n\t          get: function /*istanbul ignore next*/get() {\n\t            if (!descriptor.get) {\n\t              throw new Error('Property `' + name + '` cannot be read');\n\t            }\n\t            return descriptor.get.call(this);\n\t          },\n\t          set: function /*istanbul ignore next*/set(value) {\n\t            if (!descriptor.set) {\n\t              throw new Error('Property `' + name + '` cannot be written');\n\t            }\n\t            if (descriptor.test && !descriptor.test(value)) {\n\t              throw new Error('Invalid value `' + value + '` for property `' + name + '`');\n\t            }\n\t            descriptor.set.call(this, value);\n\t            if (this._observer_) {\n\t              this._observer_.emitChange({\n\t                path: name,\n\t                value: value\n\t              });\n\t            }\n\t          }\n\t        });\n\t        this.$properties[name] = descriptor;\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * 创建监控\n\t     * 为什么用 watches 而不是 watchers 或其它？\n\t     * 因为，这里仅是「监控配置」并且是「复数」\n\t     * @param {Object} watches 监控定义对象\n\t     * @returns {void} 无返回\n\t     */\n\t    _createWatches_: function /*istanbul ignore next*/_createWatches_(watches) {\n\t      this._watchers_ = this._watchers_ || [];\n\t      utils.each(watches, function (name, handler) {\n\t        this.$watch(name, handler);\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * 在模板发生更新时\n\t     * @returns {void} 无返回\n\t     */\n\t    _onTemplateUpdate_: function /*istanbul ignore next*/_onTemplateUpdate_() {\n\t      this._watchers_.forEach(function (watcher) {\n\t        watcher.calc();\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * 添加一个监控\n\t     * @param {string|function} path 计算函数或路径\n\t     * @param {function} handler 处理函数\n\t     * @returns {void} 无返回\n\t     */\n\t    $watch: function /*istanbul ignore next*/$watch(path, handler) {\n\t      if (!utils.isFunction(handler)) return;\n\t      var calcer = path;\n\t      if (!utils.isFunction(path)) {\n\t        calcer = function /*istanbul ignore next*/calcer() {\n\t          return utils.getByPath(this, path);\n\t        };\n\t      }\n\t      var watcher = new Watcher(calcer.bind(this), handler.bind(this));\n\t      this._watchers_.push(watcher);\n\t      return watcher;\n\t    },\n\t\n\t    /**\n\t     * 取消一个 watcher 对象\n\t     * @param {object} watcher 监控对象实例\n\t     * @returns {void} 无返回\n\t     */\n\t    $unWatch: function /*istanbul ignore next*/$unWatch(watcher) {\n\t      var index = this._watchers_.findIndex(function (w) /*istanbul ignore next*/{\n\t        return w === watcher;\n\t      });\n\t      this._watchers_.splice(index, 1);\n\t    },\n\t\n\t    /**\n\t     * 创建元素\n\t     * @returns {void} 无返回\n\t     */\n\t    _createElement_: function /*istanbul ignore next*/_createElement_() {\n\t      if (this._created_) return;\n\t      this._created_ = true;\n\t      this.$callHook('onCreate');\n\t      utils.defineFreezeProp(this, '$element', this.element || ComponentClass.$template.cloneNode(true));\n\t      if (!this.$element || this.$element.nodeName === '#text') {\n\t        throw new Error('Invalid component template');\n\t      }\n\t      this.$callHook('onCreated');\n\t    },\n\t\n\t    /**\n\t     * 编译自身模板并完成绑定\n\t     * @returns {void} 无返回\n\t     */\n\t    $compile: function /*istanbul ignore next*/$compile() {\n\t      if (this._compiled_) return;\n\t      this._compiled_ = true;\n\t      this._createElement_();\n\t      utils.defineFreezeProp(this, '_template_', new Template(this.$element, {\n\t        directives: this.$directives,\n\t        root: true\n\t      }));\n\t      this._template_.bind(this);\n\t      this._template_.on('update', this._onTemplateUpdate_);\n\t      this._template_.on('bind', function () {\n\t        if (!this.deferReady) this.$callHook('onReady');\n\t      }.bind(this));\n\t    },\n\t\n\t    /**\n\t     * 向 DOM tree 中挂截组件\n\t     * @param {HTMLNode} mountNode 挂载点元素\n\t     * @param {append} append 是否 append 到挂载元素内\n\t     * @returns {void} 无返回 \n\t     */\n\t    $mount: function /*istanbul ignore next*/$mount(mountNode, append) {\n\t      if (this._mounted_) return;\n\t      this.$compile();\n\t      this.$callHook('onMount');\n\t      if (mountNode) {\n\t        mountNode.$substitute = this.$element;\n\t        this.$element._mountNode = mountNode;\n\t        if (append) {\n\t          mountNode.appendChild(this.$element);\n\t        } else if (mountNode.parentNode) {\n\t          mountNode.parentNode.insertBefore(this.$element, mountNode);\n\t        }\n\t      }\n\t      this._mounted_ = true;\n\t      this._removed_ = false;\n\t      this.$callHook('onMounted');\n\t    },\n\t\n\t    /**\n\t     * 将组件添加到指定容器元素内\n\t     * @param {HTMLNode} node 容器元素\n\t     * @returns {void} 无返回 \n\t     */\n\t    $appendTo: function /*istanbul ignore next*/$appendTo(node) {\n\t      this.$mount(node, true);\n\t    },\n\t\n\t    /**\n\t     * 移除组件\n\t     * @returns {void} 无返回\n\t     */\n\t    $remove: function /*istanbul ignore next*/$remove() {\n\t      if (this._removed_ || !this._mounted_) return;\n\t      this.$callHook('onRemove');\n\t      if (this.$element.parentNode) {\n\t        this.$element.parentNode.removeChild(this.$element);\n\t      }\n\t      this._removed_ = true;\n\t      this._mounted_ = false;\n\t      this.$callHook('onRemoved');\n\t    },\n\t\n\t    /**\n\t     * 触发自身的一个事件并向上冒泡\n\t     * @param {string} name 事件名称\n\t     * @param {object} data 传递的对象\n\t     * @returns {void} 无返回\n\t     */\n\t    $dispatch: function /*istanbul ignore next*/$dispatch(name, data) {\n\t      var stopPropagation = this.$emit(name, data);\n\t      if (!stopPropagation && this.$parent) {\n\t        this.$parent.$dispatch(name, data);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * 触发自身的一个事件并向下广播\n\t     * @param {string} name 事件名称\n\t     * @param {object} data 传递的对象\n\t     * @returns {void} 无返回\n\t     */\n\t    $broadcast: function /*istanbul ignore next*/$broadcast(name, data) {\n\t      var stopPropagation = this.$emit(name, data);\n\t      if (!stopPropagation && this.$children && this.$children.length > 0) {\n\t        this.$children.forEach(function (child) {\n\t          child.$broadcast(name, data);\n\t        }, this);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * 释放组件\n\t     * @returns {void} 无返回\n\t     */\n\t    $dispose: function /*istanbul ignore next*/$dispose() {\n\t      this.$remove();\n\t      this._emitter_.off();\n\t      this.$children.forEach(function (child) {\n\t        child.$dispose();\n\t      }, this);\n\t      if (this.$parent) {\n\t        var index = this.$parent.$children.indexOf(this);\n\t        this.$parent.$children.splice(index, 1);\n\t      }\n\t      this.$callHook('onDispose');\n\t      if (this._compiled_) {\n\t        this._template_.unbind();\n\t      }\n\t      this.$callHook('onDisposed');\n\t      for (var key in this) {\n\t        delete this[key];\n\t      }\n\t      ['_observer_', '$element', '$children', '$parent', '_template_'].forEach(function (key) {\n\t        delete this[key];\n\t      }, this);\n\t      utils.setPrototypeOf(this, null);\n\t    }\n\t\n\t  });\n\t\n\t  //保存类选项\n\t  ComponentClass.$options = classOpts;\n\t  ComponentClass.$template = utils.parseDom(classOpts.template);\n\t\n\t  //向 ComponentClass.prototype 上拷贝成员\n\t  utils.copy(classOpts, ComponentClass.prototype);\n\t  utils.copy(classOpts.methods, ComponentClass.prototype);\n\t\n\t  //使 ComponentClass instanceof Component === true \n\t  //IE9/10 下为 false，并且动态为 Component.prototype 添加的成员不会在 ComponentClass 上生效\n\t  utils.setPrototypeOf(ComponentClass, Component.prototype);\n\t\n\t  return ComponentClass;\n\t}\n\t\n\t//继承自 EventEmitter\n\tComponent.prototype = utils.create(EventEmitter.prototype);\n\t\n\t//组件扩展方法，简单封装 extends\n\tComponent.extend = function (classOpts) {\n\t  return new Component(classOpts);\n\t};\n\t\n\t//定义扩展方法\n\tComponent.prototype.extend = function (classOpts) {\n\t  classOpts = classOpts || {};\n\t  classOpts.extend = this;\n\t  return new Component(classOpts);\n\t};\n\t\n\t//创建实例的方法\n\tComponent.prototype.create = function (instanceOpts) {\n\t  return new this(instanceOpts);\n\t};\n\t\n\t//针对包括 element 组件类的启动方法\n\tComponent.prototype.start = function (instanceOpts) {\n\t  if (!this.$options || !this.$options.element) {\n\t    throw new Error('Start method cannot be called');\n\t  }\n\t  return this.create(instanceOpts);\n\t};\n\t\n\tmodule.exports = Component;\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Template = __webpack_require__(60);\n\tvar Directive = Template.Directive;\n\t\n\t/**\n\t * 创建一个组件指令\n\t * @param {object} options 选项\n\t * @returns {object} 组件指令\n\t */\n\tfunction ComponentDirective(options) {\n\t\n\t  return new Directive({\n\t    type: Directive.TE,\n\t    literal: true,\n\t    final: true,\n\t    level: Directive.LE,\n\t\n\t    bind: function /*istanbul ignore next*/bind() {\n\t      this.component = new options.component({\n\t        deferReady: true,\n\t        parent: options.parent || this.scope\n\t      });\n\t      this.handleAttrs();\n\t      this.node.$target = this.component;\n\t      this.handler = this.compiler.compile(this.node, {\n\t        element: false,\n\t        children: false\n\t      });\n\t      this.handleContents();\n\t      this.component.$mount(this.node);\n\t      if (this.node.parentNode) {\n\t        this.node.parentNode.removeChild(this.node);\n\t      }\n\t    },\n\t\n\t    handleAttrs: function /*istanbul ignore next*/handleAttrs() {\n\t      this.attrs = [].slice.call(this.node.attributes);\n\t      var directiveRegexp = new RegExp('^' + this.prefix + ':', 'i');\n\t      this.attrs.forEach(function (attr) {\n\t        if (directiveRegexp.test(attr.name)) return;\n\t        if (attr.name in this.component.$properties) return;\n\t        this.component.$element.setAttribute(attr.name, attr.value);\n\t        this.node.removeAttribute(attr.name);\n\t      }, this);\n\t    },\n\t\n\t    handleContents: function /*istanbul ignore next*/handleContents() {\n\t      this.placeHandlers = [];\n\t      var places = [].slice.call(this.component.$element.querySelectorAll('[' + this.prefix + '\\\\:content]'));\n\t      places.forEach(function (place) {\n\t        //将内容插入到指定的「位置」\n\t        var contents = null;\n\t        var selector = place.getAttribute(this.prefix + ':content');\n\t        if (!selector) {\n\t          contents = [].slice.call(this.node.childNodes);\n\t        } else {\n\t          contents = [].slice.call(this.node.querySelectorAll(selector));\n\t        }\n\t        if (!contents || contents.length < 1) return;\n\t        place.innerHTML = '';\n\t        contents.forEach(function (content) {\n\t          place.appendChild(content.cloneNode(true));\n\t        }, this);\n\t        //编译插入后的子「内容模板」\n\t        var handler = this.compiler.compile(place);\n\t        this.placeHandlers.push(handler);\n\t      }, this);\n\t    },\n\t\n\t    execute: function /*istanbul ignore next*/execute(scope) {\n\t      this.handler(scope);\n\t      if (!this._ready_) {\n\t        this._ready_ = true;\n\t        this.component.$callHook('onReady');\n\t      }\n\t      this.placeHandlers.forEach(function (handler) {\n\t        handler(scope);\n\t      }, this);\n\t    }\n\t\n\t  });\n\t}\n\t\n\tmodule.exports = ComponentDirective;\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tmodule.exports = {\n\t  View: __webpack_require__(91)\n\t};\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Component = __webpack_require__(88);\n\tvar utils = __webpack_require__(12);\n\t\n\t/**\n\t * 内置视图组件\n\t * 可以加载并显示其它组件，并可以指定「转场效果」\n\t */\n\tvar View = new Component({\n\t\n\t  template: '<div></div>',\n\t\n\t  properties: {\n\t\n\t    /**\n\t     * 显示到视图中的组件\n\t     */\n\t    component: {\n\t      test: function /*istanbul ignore next*/test(value) {\n\t        if (!value) return false;\n\t        return value instanceof Component || utils.isString(value);\n\t      },\n\t      set: function /*istanbul ignore next*/set(component) {\n\t        if (this._transitioning) return;\n\t        this._transitioning = true;\n\t        //如果 value 是字符串则尝试从 $parent.components 中获取组件类 \n\t        if (utils.isString(component)) {\n\t          if (this.$parent && this.$parent.$components) {\n\t            this.component = this.$parent.$components[component];\n\t          } else {\n\t            this.component = null;\n\t          }\n\t          return;\n\t        }\n\t        //声明新旧组件变量\n\t        var newComponentInstance = null;\n\t        var oldComponentInstance = this.componentInstance;\n\t        //创建新组件实例\n\t        if (utils.isFunction(component)) {\n\t          newComponentInstance = new component({\n\t            parent: this\n\t          });\n\t        } else {\n\t          component.$setParent(this);\n\t          newComponentInstance = component;\n\t        }\n\t        //通过转场控制器进行转场准备\n\t        this.transition.prep(newComponentInstance, oldComponentInstance);\n\t        //挂载新组件实例\n\t        newComponentInstance.$appendTo(this.$element);\n\t        //通过转场控制器进行转场\n\t        this.transition.go(newComponentInstance, oldComponentInstance, function () {\n\t          //触发相关事件\n\t          this.$emit('enter', newComponentInstance);\n\t          this.$emit('leave', oldComponentInstance);\n\t          //销毁旧组件实例\n\t          if (oldComponentInstance) {\n\t            oldComponentInstance.$dispose();\n\t          }\n\t          this._transitioning = false;\n\t        }.bind(this));\n\t        //暂存当前组件实例\n\t        this.componentInstance = newComponentInstance;\n\t      },\n\t      get: function /*istanbul ignore next*/get() {\n\t        return this._Component;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * 视图的转场控制对象\n\t     */\n\t    transition: {\n\t      get: function /*istanbul ignore next*/get() {\n\t        return this._transition || View.transition;\n\t      },\n\t      set: function /*istanbul ignore next*/set(transition) {\n\t        if (this._transitioning) return;\n\t        if (!transition || utils.isFunction(transition.prep) && utils.isFunction(transition.go)) {\n\t          if (this._transition && utils.isFunction(this._transition.clean)) {\n\t            this._transition.clean(this);\n\t          }\n\t          if (transition && utils.isFunction(transition.init)) {\n\t            transition.init(this);\n\t          }\n\t          this._transition = transition;\n\t        } else {\n\t          throw new Error('Invalid transition');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 切换到指定的组件\n\t   * @param {Component} component 组件\n\t   * @param {transition} transition 转场控制组件\n\t   * @returns {void} 无返回\n\t   */\n\t  switchTo: function /*istanbul ignore next*/switchTo(component, transition) {\n\t    if (transition) {\n\t      this.transition = transition;\n\t    }\n\t    this.component = component;\n\t  }\n\t\n\t});\n\t\n\t/**\n\t * 默认转场设置\n\t */\n\tView.transition = {\n\t  //init: function () { },\n\t  //clean: function () { },\n\t\n\t  /**\n\t   * 转场开始前的准备\n\t   * @param {Component} newComponent 新组件\n\t   * @param {Component} oldComponent 旧组件\n\t   * @returns {void} 无返回\n\t   */\n\t  prep: function /*istanbul ignore next*/prep(newComponent, oldComponent) {\n\t    if (oldComponent) oldComponent.$element.style.display = 'none';\n\t  },\n\t\n\t  /**\n\t   * 执行转场动画\n\t   * @param {Component} newComponent 新组件\n\t   * @param {Component} oldComponent 旧组件\n\t   * @param {Function} done 完成后的回调\n\t   * @returns {void} 无返回\n\t   */\n\t  go: function /*istanbul ignore next*/go(newComponent, oldComponent, done) {\n\t    done();\n\t  }\n\t};\n\t\n\tmodule.exports = View;\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Plugin = __webpack_require__(93);\n\tmodule.exports = new Plugin(function () {\n\t  return __webpack_require__(94);\n\t});\n\n/***/ },\n/* 93 */\n/***/ function(module, exports) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar factory = function factory(thunk) {\n\t  function Plugin(opts) {\n\t    return typeof Plugin.entity === 'function' ? new Plugin.entity(opts) : Plugin.entity;\n\t  }\n\t  Plugin.install = function (mokit) {\n\t    factory.mokit = mokit;\n\t    this.entity = thunk();\n\t    this.entity.install(mokit);\n\t  };\n\t  if (typeof mokit !== 'undefined') {\n\t    mokit.use(Plugin);\n\t  }\n\t  return Plugin;\n\t};\n\t\n\tmodule.exports = factory;\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar mokit = __webpack_require__(93).mokit;\n\tvar utils = mokit.utils;\n\tvar Class = mokit.Class;\n\tvar EventEmitter = mokit.EventEmitter;\n\tvar Component = mokit.Component;\n\tvar RouterBase = __webpack_require__(95);\n\tvar HashDirver = __webpack_require__(96);\n\tvar RouterView = __webpack_require__(97);\n\tvar LinkDirective = __webpack_require__(98);\n\t\n\tvar ROOT_PATH = '/';\n\t\n\tvar Router = new Class({\n\t  $name: 'Router',\n\t  $extends: RouterBase,\n\t\n\t  /**\n\t   * 路由类构造函数\n\t   * @param {Object} options 选项\n\t   * @returns {void} 无返回\n\t   */\n\t  constructor: function /*istanbul ignore next*/constructor(options) {\n\t    this.$super();\n\t    options = options || utils.create(null);\n\t    if (options.view) this.view = options.view;\n\t    this.emitter = new EventEmitter(this);\n\t    this.dirvier = options.dirvier || new HashDirver(this);\n\t    this.dirvier.on('changed', this._onChanged.bind(this));\n\t  },\n\t\n\t  /**\n\t   *「路由视组」访问器\n\t   * @returns {RouterView} 路由视图组件实例\n\t   */\n\t  get view() {\n\t    return this._view;\n\t  },\n\t\n\t  /**\n\t   *「路由视组」设置器\n\t   * @param {RouterView} view 路由视图组件实例\n\t   * @returns {void} 无返回\n\t   */\n\t  set view(view) {\n\t    if (!(view instanceof RouterView)) {\n\t      throw new Error('Invalid RouterView');\n\t    }\n\t    this._view = view;\n\t    this._view._router = this;\n\t    this._onChanged(this.dirvier.get());\n\t  },\n\t\n\t  /**\n\t   * 路由发生变化时的处理函数\n\t   * @param {string} path 将要转到的路径\n\t   * @returns {void} 无返回\n\t   */\n\t  _onChanged: function /*istanbul ignore next*/_onChanged(path) {\n\t    path = path || '/';\n\t    var fromPath = this.dirvier.get();\n\t    var toPath = this.resolveUri(path, fromPath);\n\t    toPath = path.split('?')[0].split('!')[0];\n\t    var routes = this.get(toPath);\n\t    if (!routes || routes.length < 1) return;\n\t    this.route = routes[0];\n\t    this.route.path = toPath;\n\t    this.route.query = this.parseQuery();\n\t    if (this.view) {\n\t      setTimeout(function () {\n\t        this.view.switchTo(this.route.component, this._transition);\n\t        this._transition = null;\n\t      }.bind(this), 0);\n\t    }\n\t    this.emitter.$emit('enter', toPath);\n\t    this.emitter.$emit('leave', fromPath);\n\t  },\n\t\n\t  /**\n\t   * 转到一个路径\n\t   * @param {string} path 将要转到的路径\n\t   * @param {Object} transition 转场动画\n\t   * @returns {void} 无返回\n\t   */\n\t  go: function /*istanbul ignore next*/go(path, transition) {\n\t    this._transition = transition;\n\t    this.dirvier.set(path);\n\t  },\n\t\n\t  /**\n\t   * 映射路由配置\n\t   * @param {Object} map 路由配置\n\t   * @returns {void} 无返回\n\t   */\n\t  map: function /*istanbul ignore next*/map(_map) {\n\t    utils.each(_map, function (pattern, item) {\n\t      if (utils.isString(item)) {\n\t        item = _map[item];\n\t      }\n\t      if (item instanceof Component) {\n\t        item = {\n\t          component: item\n\t        };\n\t      }\n\t      if (!item) throw new Error('Invalid route `' + pattern + '`');\n\t      item.pattern = pattern;\n\t      this.addOne(item);\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * 解析相对路径\n\t   * @param {string} toUri 原始路径\n\t   * @param {string} fromUri 参数路径\n\t   * @returns {string} 解析后的相关路径\n\t   */\n\t  resolveUri: function /*istanbul ignore next*/resolveUri(toUri, fromUri) {\n\t    toUri = toUri || ROOT_PATH;\n\t    if (toUri[0] == ROOT_PATH) return toUri;\n\t    fromUri = fromUri || ROOT_PATH;\n\t    fromUri = fromUri.split('?')[0].split('#')[0];\n\t    var baseDir = fromUri.substring(0, fromUri.lastIndexOf(ROOT_PATH));\n\t    var uriParts = toUri.split('#')[0].split(ROOT_PATH);\n\t    var uriHash = toUri.split('#')[1];\n\t    var newUriParts = baseDir.length > 0 ? baseDir.split(ROOT_PATH) : [];\n\t    uriParts.forEach(function (part) {\n\t      if (part == '..') {\n\t        newUriParts.pop();\n\t      } else if (part && part != '.') {\n\t        newUriParts.push(part);\n\t      }\n\t    }, this);\n\t    return ROOT_PATH + newUriParts.join(ROOT_PATH) + (uriHash ? '#' + uriHash : '');\n\t  },\n\t\n\t  /**\n\t   * 解析查询字符串并生成查询参数对象\n\t   * @returns {Object} 查询参数对象\n\t   */\n\t  parseQuery: function /*istanbul ignore next*/parseQuery() {\n\t    var queryString = (location.href.split('#')[1] || '').split('?')[1] || '';\n\t    var pairs = queryString.split('&');\n\t    var query = utils.create(null);\n\t    pairs.forEach(function (pair) {\n\t      var strs = pair.split('=');\n\t      query[strs[0]] = strs[1];\n\t    }, this);\n\t    return query;\n\t  },\n\t\n\t  /**\n\t   * 启动应用\n\t   * @param {Component} root 应用根组件类\n\t   * @param {element} element 挂载元素\n\t   * @returns {Component} 应用根件实例\n\t   */\n\t  start: function /*istanbul ignore next*/start(root, element) {\n\t    this.app = new root({\n\t      _router: this\n\t    });\n\t    this.app.$appendTo(element);\n\t    return this.app;\n\t  }\n\t\n\t});\n\t\n\tRouter.HashDirver = HashDirver;\n\t\n\t/**\n\t * 路由插件安装方法\n\t * @param {Component} owner 组件类\n\t * @returns {void} 无返回\n\t */\n\tRouter.install = function (owner) {\n\t\n\t  owner.Router = this;\n\t\n\t  //为组件实例扩展 $router 属性\n\t  Object.defineProperty(owner.prototype, '$router', {\n\t    get: function /*istanbul ignore next*/get() {\n\t      if (this instanceof RouterView) {\n\t        return this._router || this.$parent && this.$parent.$router;\n\t      } else if (this.$parent) {\n\t        return this.$parent.$router;\n\t      } else if (!this.$parent) {\n\t        return this._router || this.router;\n\t      } else {\n\t        return null;\n\t      }\n\t    }\n\t  });\n\t\n\t  //为组件实例扩展 $route 属性\n\t  Object.defineProperty(owner.prototype, '$route', {\n\t    get: function /*istanbul ignore next*/get() {\n\t      return this.$router && this.$router.route;\n\t    }\n\t  });\n\t\n\t  //添加全局组件 RouterView\n\t  owner.component('RouterView', RouterView);\n\t\n\t  //添加 link 指令\n\t  owner.directive('link', LinkDirective);\n\t};\n\t\n\tmodule.exports = Router;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar utils = __webpack_require__(12);\n\t\n\t/**\n\t * 定义正则表达式常量\n\t */\n\tvar PLACE_HOLDER_EXPR = /\\{.+?\\}/gim;\n\tvar COLLECT_EXPR_STR = '([^\\\\/]+)';\n\tvar GREEDY_COLLECT_EXPR_STR = '(.+)';\n\t\n\t/**\n\t * 定义路由实例扩展 __proto__\n\t **/\n\tvar routeInstanceProto = {};\n\t\n\t/**\n\t * 生成 action URL\n\t * @param {String} action action 名称\n\t * @return {String} 对应的 path\n\t **/\n\trouteInstanceProto.actionUrl = function (action) {\n\t  var self = this;\n\t  var actionUrl = self.withoutActionUrl + '/' + action;\n\t  actionUrl = actionUrl.replace(/\\/\\//igm, '/');\n\t  return actionUrl;\n\t};\n\t\n\t/**\n\t * 定义路由对象\n\t * @param {Object} routes 路由眏射表\n\t * @param {Object} options 选项\n\t * @returns {void} 无返回\n\t */\n\tfunction Router(routes, options) {\n\t  var self = this;\n\t  options = options || {};\n\t  self.options = options;\n\t  self.table = [];\n\t  if (routes) {\n\t    self.add(routes);\n\t  }\n\t}\n\t\n\t/**\n\t * 解析占位符 key 定义\n\t * @param {String} _keyDefStr 占位符定义\n\t * @returns {Object} 占符符信息对象\n\t **/\n\tRouter.prototype._parseKeyDef = function (_keyDefStr) {\n\t  var keyDefStr = _keyDefStr.substring(1, _keyDefStr.length - 1);\n\t  var keyDefParts = keyDefStr.split(':');\n\t  var keyDef = {};\n\t  keyDef.name = keyDefParts[0];\n\t  if (keyDef.name[0] == '*') {\n\t    keyDef.greedy = true;\n\t    keyDef.name = keyDef.name.substring(1);\n\t  }\n\t  if (keyDefParts[1]) {\n\t    keyDef.expr = new RegExp(keyDefParts[1], 'igm');\n\t  }\n\t  return keyDef;\n\t};\n\t\n\t/**\n\t * 添加一个路由配置\n\t * @param {Object} route 路由项\n\t * @returns {void} 无返回\n\t */\n\tRouter.prototype.addOne = function (route) {\n\t  var self = this;\n\t  if (!route || !route.pattern) return;\n\t  //取到所有路由key\n\t  PLACE_HOLDER_EXPR.lastIndex = 0;\n\t  var keyDefs = route.pattern.match(PLACE_HOLDER_EXPR) || [];\n\t  route.keys = {};\n\t  //初始化 url 匹配测试表达式字符串\n\t  var exprStr = '^' + route.pattern + '$';\n\t  utils.each(keyDefs, function (i) {\n\t    //处理 key 定义\n\t    var keyDef = self._parseKeyDef(keyDefs[i]);\n\t    route.keys[keyDef.name] = {\n\t      index: i,\n\t      expr: keyDef.expr\n\t    };\n\t    //将 'key 占位符' 的表达式，替换为 '提交值的正则表达式'\n\t    var collectExprStr = keyDef.greedy ? GREEDY_COLLECT_EXPR_STR : COLLECT_EXPR_STR;\n\t    exprStr = exprStr.replace(keyDefs[i], collectExprStr);\n\t  });\n\t  //生成 url 匹配测试表达式\n\t  route.expr = new RegExp(exprStr, 'igm');\n\t  //处理所有 route 的 method \n\t  route.methods = route.methods || self.options.defaultMethods;\n\t  if (route.methods && route.methods.length > 0) {\n\t    route.methods = route.methods.map(function (method) {\n\t      return method.toUpperCase();\n\t    });\n\t  }\n\t  //继承原型\n\t  route.__proto__ = routeInstanceProto;\n\t  self.table.push(route);\n\t};\n\t\n\t/**\n\t * 添加一组路由配置表\n\t * @param {Route} routes 一个路由实体,格式:{pattern:'',target:object}\n\t * @returns {void} 无返回\n\t */\n\tRouter.prototype.add = function (routes) {\n\t  var self = this;\n\t  utils.each(routes, function (_name, _route) {\n\t    //判断是字符串还是一个对象，并都将 _route 转为对象\n\t    var route = utils.isString(_route) ? {\n\t      'target': _route\n\t    } : _route;\n\t    //尝试从名称中解析出 method 和 pattern\n\t    var name = (_name || '/').toString();\n\t    var nameParts = name.split(' ');\n\t    if (nameParts.length > 1) {\n\t      route.methods = nameParts[0].split(',');\n\t      route.pattern = route.pattern || nameParts[1];\n\t    } else {\n\t      route.pattern = route.pattern || nameParts[0];\n\t    }\n\t    //解析 controller 和 action\n\t    //target 和 controller 不可同时配置，target 可以为 'controller action' 这样的格式\n\t    if (route.target) {\n\t      var targetParts = route.target.split(' ');\n\t      route.controller = route.controller || targetParts[0];\n\t      route.action = route.action || targetParts[1];\n\t    }\n\t    route.target = route.controller;\n\t    //添加 route\n\t    self.addOne(route);\n\t  });\n\t};\n\t\n\t/**\n\t * 解析路由动态 action\n\t * @param {Object} route 路由项\n\t * @returns {Object} 解析后路由项\n\t **/\n\tRouter.prototype._parseDynamicAction = function (route) {\n\t  if (route && route.action && route.action.indexOf('{') > -1) {\n\t    utils.each(route.params, function (key, val) {\n\t      route.action = utils.replace(route.action, '{' + key + '}', val);\n\t    });\n\t  }\n\t  return route;\n\t};\n\t\n\t/**\n\t * 创建一个路由实例\n\t * @param {object} srcRoute 路由项原型 proto\n\t * @param {String} url URL\n\t * @param {Object} params 参数\n\t * @returns {Object} 路由实例\n\t **/\n\tRouter.prototype._createRouteInstance = function (srcRoute, url, params) {\n\t  var self = this;\n\t  var routeInstance = {\n\t    __proto__: srcRoute\n\t  };\n\t  routeInstance.params = params;\n\t  if (routeInstance.action) {\n\t    var urlParts = url.split('/');\n\t    routeInstance.withoutActionUrl = urlParts.slice(0, urlParts.length - 1);\n\t  } else {\n\t    routeInstance.withoutActionUrl = url;\n\t  }\n\t  routeInstance = self._parseDynamicAction(routeInstance);\n\t  return routeInstance;\n\t};\n\t\n\t/**\n\t * 通过请求路径获取第一个匹配的路由\n\t * @param {String} url 请求路径\n\t * @param {Boolean} handleActionFromUrl 是否从 URL 中分析 action\n\t * @returns {Route} 路由实体\n\t */\n\tRouter.prototype.get = function (url, handleActionFromUrl) {\n\t  var self = this;\n\t  var routeArray = [];\n\t  if (utils.isNull(url)) {\n\t    return routeArray;\n\t  }\n\t  //url = url.replace(/\\/\\//igm, '/');\n\t  utils.each(self.table, function (i, route) {\n\t    route.expr.lastIndex = 0;\n\t    if (!route.expr.test(url)) return;\n\t    //通过子表达式 '正则的()' 取值\n\t    route.expr.lastIndex = 0;\n\t    var values = route.expr.exec(url);\n\t    //生成 params\n\t    var params = {};\n\t    var failed = utils.each(route.keys, function (key, keyDef) {\n\t      params[key] = values[keyDef.index + 1];\n\t      if (!keyDef.expr) return;\n\t      keyDef.expr.lastIndex = 0;\n\t      if (!keyDef.expr.test(params[key])) {\n\t        return true;\n\t      }\n\t    });\n\t    if (failed) return;\n\t    routeArray.push(self._createRouteInstance(route, url, params));\n\t  });\n\t  //确定 parseActionFromUrl 的值\n\t  handleActionFromUrl = utils.isNull(handleActionFromUrl) ? self.options.parseActionFromUrl : handleActionFromUrl;\n\t  //如果需要 parseActionFromUrl\n\t  if (handleActionFromUrl) {\n\t    var _routeArray = self._getForActionFromUrl(url);\n\t    routeArray.push.apply(routeArray, _routeArray);\n\t  }\n\t  return routeArray;\n\t};\n\t\n\t/**\n\t * 从 url 中分解出来 action ，然后获取 route array\n\t * @param {String} url 路径\n\t * @returns {Object} 路由实例\n\t **/\n\tRouter.prototype._getForActionFromUrl = function (url) {\n\t  var self = this;\n\t  /*\n\t  一是在如果直接匹配不成功时，才将 “/” 分隔的最后一个 “字串” 当作 action 进行再一次匹配\n\t  */\n\t  var urlParts = url.split('/');\n\t  var lastIndex = urlParts.length - 1;\n\t  var action = urlParts[lastIndex];\n\t  //检查分解出来的 action 是否合法\n\t  if (action === '' || action.indexOf('.') > -1) {\n\t    return null;\n\t  }\n\t  var ctrlRouteUrl = urlParts.slice(0, lastIndex).join('/');\n\t  if (ctrlRouteUrl === '') ctrlRouteUrl = '/';\n\t  var ctrlRouteArray = self.get(ctrlRouteUrl, false) || [];\n\t  var routeArray = ctrlRouteArray.filter(function (route) {\n\t    /**\n\t     * 从 URL 分解出来的 action 不可能是动态的 action\n\t     * route.action 没有指定时才能作为 parseAction 的合法 route\n\t     **/\n\t    if (route.action) return false;\n\t    //设定 action 作为指向 action 的 route\n\t    route.action = action;\n\t    //标记一下 action 在 url 中\n\t    route.actionFromUrl = true;\n\t    return true;\n\t  });\n\t  return routeArray;\n\t};\n\t\n\t/**\n\t * 过滤出包含指定 method 的 route\n\t * @param {array} routeArray 路由实例数组\n\t * @param {String} method HTTP method\n\t * @returns {Object} 匹配的路由实例\n\t **/\n\tRouter.prototype.matchByMethod = function (routeArray, method) {\n\t  if (!routeArray || routeArray.length < 1) {\n\t    return routeArray;\n\t  }\n\t  return routeArray.filter(function (route) {\n\t    if (!route || !route.methods || route.methods.length < 1) {\n\t      return false;\n\t    }\n\t    return route.methods.indexOf(method) > -1;\n\t  })[0];\n\t};\n\t\n\tmodule.exports = Router;\n\t\n\t/*end*/\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar mokit = __webpack_require__(93).mokit;\n\tvar Class = mokit.Class;\n\tvar EventEmitter = mokit.EventEmitter;\n\t\n\tvar SEPARATOR = '#!';\n\tvar ROOT_PATH = '/';\n\t\n\t/**\n\t * 基于 has 的路由驱动\n\t */\n\tvar HashDriver = new Class({\n\t  $name: 'HashDriver',\n\t  $extends: EventEmitter,\n\t\n\t  /**\n\t   * 路由驱动构造函数\n\t   * @param {Object} router 路径实例\n\t   * @returns {void} 无返回\n\t   */\n\t  constructor: function /*istanbul ignore next*/constructor(router) {\n\t    this.$super();\n\t    this.router = router;\n\t    window.addEventListener('hashchange', function () {\n\t      this._onChange();\n\t    }.bind(this));\n\t  },\n\t\n\t  /**\n\t   * 获取当前路径\n\t   * @returns {string} 当前路径\n\t   */\n\t  get: function /*istanbul ignore next*/get() {\n\t    return location.hash.split(SEPARATOR)[1] || ROOT_PATH;\n\t  },\n\t\n\t  /**\n\t   * 设置当前路径\n\t   * @param {string} path 要转到的路径\n\t   * @returns {void} 无返回\n\t   */\n\t  set: function /*istanbul ignore next*/set(path) {\n\t    path = path || ROOT_PATH;\n\t    location.hash = SEPARATOR + path;\n\t  },\n\t\n\t  /**\n\t   * 路由发生变化时的处理函数\n\t   * @param {string} path 将要转到的路径\n\t   * @returns {void} 无返回\n\t   */\n\t  _onChange: function /*istanbul ignore next*/_onChange(path) {\n\t    path = path || this.get() || '';\n\t    if (path[0] != ROOT_PATH) path = ROOT_PATH + path;\n\t    this.emit('changed', path);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = HashDriver;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar mokit = __webpack_require__(93).mokit;\n\tvar View = mokit.components.View;\n\t\n\tvar RouterView = View.extend({\n\t  properties: {\n\t    router: {\n\t      test: function /*istanbul ignore next*/test(router) {\n\t        return !!router;\n\t      },\n\t      get: function /*istanbul ignore next*/get() {\n\t        return this._router;\n\t      },\n\t      set: function /*istanbul ignore next*/set(router) {\n\t        this._router = router;\n\t        this._router.view = this;\n\t      }\n\t    }\n\t  },\n\t  onCreated: function /*istanbul ignore next*/onCreated() {\n\t    if (!this.router && this.$router) {\n\t      this.router = this.$router;\n\t    }\n\t  }\n\t});\n\t\n\tmodule.exports = RouterView;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar mokit = __webpack_require__(93).mokit;\n\tvar Directive = mokit.Directive;\n\tvar EventEmitter = mokit.EventEmitter;\n\t\n\tmodule.exports = new Directive({\n\t  literal: true,\n\t\n\t  bind: function /*istanbul ignore next*/bind() {\n\t    var eventTarget = this.node.$target || this.node;\n\t    this.emiter = new EventEmitter(eventTarget);\n\t    this.emiter.addListener(this.decorates[0] || 'click', function () {\n\t      if (!this.scope || !this.scope.$router) return;\n\t      this.scope.$router.go(this.path, eventTarget.transition);\n\t    }.bind(this), false);\n\t  },\n\t\n\t  unbind: function /*istanbul ignore next*/unbind() {\n\t    this.emiter.removeListener();\n\t  },\n\t\n\t  update: function /*istanbul ignore next*/update(path) {\n\t    this.path = path;\n\t  }\n\t\n\t});\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Plugin = __webpack_require__(93);\n\tmodule.exports = new Plugin(function () {\n\t  return __webpack_require__(100);\n\t});\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar mokit = __webpack_require__(93).mokit;\n\tvar utils = mokit.utils;\n\t\n\tvar SUPPORT_TOUCH = 'ontouchstart' in document;\n\tvar START_EVENT_NAME = SUPPORT_TOUCH ? 'touchstart' : 'mousedown';\n\tvar MOVE_EVENT_NAME = SUPPORT_TOUCH ? 'touchmove' : 'mousemove';\n\tvar END_EVENT_NAME = SUPPORT_TOUCH ? 'touchend' : 'mouseup';\n\tvar CUSTOM_EVENT_NAMES = /*istanbul ignore next*/'tap,taphold,dbltap,swipe,swipeup,swiperight,\\nswipedown,swipeleft,pointdown,pointmove,pointup';\n\t\n\tmodule.exports = {\n\t  name: CUSTOM_EVENT_NAMES,\n\t\n\t  option: {\n\t    swipeDurationThreshold: 1000,\n\t    swipeHorizontalDistanceThreshold: 25,\n\t    swipeVerticalDistanceThreshold: 45,\n\t    holdDurationThreshold: 1000,\n\t    dblDurationThreshold: 450,\n\t    scrollSupressionThreshold: 25\n\t  },\n\t\n\t  addListener: function /*istanbul ignore next*/addListener(emitter, name, listener, capture) {\n\t    if (!utils.isFunction(listener)) return;\n\t\n\t    var self = this;\n\t\n\t    //处理 touchstart 事件\n\t    listener.touchstart = listener.touchstart || function (event) {\n\t      var point = event.changedTouches ? event.changedTouches[0] : event;\n\t      listener.startPoint = listener.endPoint = {\n\t        'x': point.pageX,\n\t        'y': point.pageY,\n\t        'timeStamp': event.timeStamp,\n\t        'point': point\n\t      };\n\t      if (name == 'taphold') {\n\t        listener.createHoldHandler(event);\n\t      }\n\t      //模拟鼠标事件\n\t      if (name == 'pointdown') {\n\t        utils.copy(listener.startPoint, event);\n\t        emitter.emit('pointdown', event);\n\t        emitter.isPointDown = true;\n\t      }\n\t    };\n\t\n\t    //创建 hold 处理器\n\t    listener.createHoldHandler = listener.createHoldHandler || function (event) {\n\t      // 处理 taphold 事件\n\t      if (!listener.holdTimer && !listener.holdHandler) {\n\t        var option = self.option;\n\t        listener.holdHandler = function () {\n\t          event.taphold = true;\n\t          emitter.emit('taphold', event);\n\t        };\n\t        listener.holdTimer = setTimeout(function () {\n\t          if (listener.holdHandler) listener.holdHandler();\n\t        }, option.holdDurationThreshold);\n\t      }\n\t    };\n\t\n\t    //清除 hold 处理器\n\t    listener.clearHoldHandler = listener.clearHoldHandler || function () {\n\t      if (listener.holdTimer) {\n\t        clearTimeout(listener.holdTimer);\n\t        listener.holdTimer = null;\n\t        listener.holdHandler = null;\n\t      }\n\t    };\n\t\n\t    //获取划动信息\n\t    listener.getTouchInfo = function (event) {\n\t      var point = event.changedTouches ? event.changedTouches[0] : event;\n\t      listener.endPoint = {\n\t        'x': point.pageX,\n\t        'y': point.pageY,\n\t        'timeStamp': event.timeStamp,\n\t        'point': point\n\t      };\n\t      //\n\t      var option = self.option;\n\t      // 一些计算结果\n\t      var info = {};\n\t      info.timeStamp = listener.endPoint ? listener.endPoint.timeStamp : null;\n\t      info.existStartAndStop = listener.endPoint && listener.startPoint;\n\t      info.horizontalDistance = info.existStartAndStop ? listener.endPoint.x - listener.startPoint.x : 0;\n\t      info.verticalDistance = info.existStartAndStop ? listener.endPoint.y - listener.startPoint.y : 0;\n\t      info.horizontalDistanceValue = Math.abs(info.horizontalDistance);\n\t      info.verticalDistanceVlaue = Math.abs(info.verticalDistance);\n\t      info.isHorizontal = info.horizontalDistanceValue >= info.verticalDistanceVlaue;\n\t      info.isVertical = !info.sHorizontal;\n\t      info.isSwipeMove = info.horizontalDistanceValue >= option.swipeHorizontalDistanceThreshold || info.verticalDistanceVlaue >= option.swipeVerticalDistanceThreshold;\n\t      info.isSwipeTime = info.existStartAndStop ? listener.endPoint.timeStamp - listener.startPoint.timeStamp <= option.swipeDurationThreshold : true;\n\t      info.isHoldTime = info.existStartAndStop ? listener.endPoint.timeStamp - listener.startPoint.timeStamp >= option.holdDurationThreshold : false;\n\t      //这里的 direction 仅是指划动方法，不代表 swipe 动作，swipe 动作还有时间或划动距离等因素\n\t      if (info.isHorizontal && info.horizontalDistance > 0) {\n\t        info.direction = 'right';\n\t      } else if (info.isHorizontal && info.horizontalDistance < 0) {\n\t        info.direction = 'left';\n\t      } else if (info.isVertical && info.verticalDistance > 0) {\n\t        info.direction = 'down';\n\t      } else if (info.isVertical && info.verticalDistance < 0) {\n\t        info.direction = 'up';\n\t      }\n\t      return info;\n\t    };\n\t\n\t    //处理 touchmove 事件\n\t    listener.touchmove = listener.touchmove || function (event) {\n\t      var info = listener.getTouchInfo(event);\n\t      if (info.isSwipeMove) {\n\t        listener.clearHoldHandler();\n\t      }\n\t      var stopBubble = false;\n\t      //模拟鼠标事件\n\t      if (emitter.isPointDown && name == 'pointmove') {\n\t        utils.copy(listener.endPoint, event);\n\t        emitter.emit('pointmove', event);\n\t        stopBubble = true;\n\t      }\n\t      //在绑定划动的方向上禁止滚动，因为 Android 4.x 不如此处理，touchend 事件将不触发\n\t      if (name == 'swipe' || name == 'swipe' + info.direction) {\n\t        stopBubble = true;\n\t      }\n\t      //如果需要阻止冒泡\n\t      if (stopBubble) {\n\t        return false;\n\t      }\n\t    };\n\t\n\t    //完成事件\n\t    listener.done = listener.done || function (event) {\n\t      listener.clearHoldHandler();\n\t      var info = listener.getTouchInfo(event);\n\t      //模拟鼠标事件\n\t      if (name == 'pointup') {\n\t        utils.copy(listener.endPoint, event);\n\t        emitter.emit('pointup', event);\n\t        emitter.isPointDown = false;\n\t      }\n\t      // 根据计算结果判断\n\t      if (info.isSwipeTime && info.isSwipeMove) {\n\t        event.swipe = true;\n\t        event.direction = info.direction;\n\t        if (name == 'swipe') {\n\t          emitter.emit('swipe', event);\n\t        }\n\t        if (name == 'swipe' + event.direction) {\n\t          emitter.emit('swipe' + event.direction, event);\n\t        }\n\t      } else if (info.isSwipeTime && !info.isSwipeMove && !info.isHoldTime) {\n\t        if (name == 'tap') {\n\t          emitter.emit('tap', event);\n\t        }\n\t        if (name == 'dbltap') {\n\t          //处理 “双击”\n\t          var option = self.option;\n\t          event.dbltap = listener.PreTapTime && info.timeStamp - listener.PreTapTime <= option.dblDurationThreshold;\n\t          if (event.dbltap) {\n\t            emitter.emit('dbltap', event);\n\t            listener.PreTapTime = null;\n\t          } else {\n\t            listener.PreTapTime = listener.endPoint.timeStamp;\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    //绑定组合事件\n\t    emitter.on(START_EVENT_NAME, listener.touchstart, capture);\n\t    emitter.on(MOVE_EVENT_NAME, listener.touchmove, capture);\n\t    emitter.on(END_EVENT_NAME, listener.done, capture);\n\t  },\n\t\n\t  removeListener: function /*istanbul ignore next*/removeListener(emitter, name, listener, capture) {\n\t    //只有指定了 handler 才能取消构成组合事件的 “原事件”\n\t    //否则会直接移除会将其他 touchstart 等事件也移除\n\t    if (utils.isFunction(listener)) {\n\t      if (utils.isFunction(listener.touchstart)) {\n\t        emitter.off(START_EVENT_NAME, listener.touchstart, capture);\n\t      }\n\t      if (utils.isFunction(listener.touchmove)) {\n\t        emitter.off(MOVE_EVENT_NAME, listener.touchmove, capture);\n\t      }\n\t      if (utils.isFunction(listener.done)) {\n\t        emitter.off(END_EVENT_NAME, listener.done, capture);\n\t      }\n\t    }\n\t  },\n\t\n\t  install: function /*istanbul ignore next*/install(mokit) {\n\t    mokit.EventEmitter.register(this);\n\t    mokit.Touch = this;\n\t  }\n\t\n\t};\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar Plugin = __webpack_require__(93);\n\tmodule.exports = new Plugin(function () {\n\t  return __webpack_require__(102);\n\t});\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\t__webpack_require__(103);\n\tvar classes = __webpack_require__(104);\n\tvar utils = __webpack_require__(105);\n\tvar mokit = __webpack_require__(93).mokit;\n\tvar EventEmitter = mokit.EventEmitter;\n\tvar Class = mokit.Class;\n\t\n\tvar Transition = new Class({\n\t\n\t  constructor: function /*istanbul ignore next*/constructor(id) {\n\t    this.classes = classes.get(id);\n\t  },\n\t\n\t  init: function /*istanbul ignore next*/init(view) {\n\t    utils.addClass(view.$element, 'ts-container');\n\t  },\n\t\n\t  clean: function /*istanbul ignore next*/clean(view) {\n\t    utils.removeClass(view.$element, 'ts-container');\n\t  },\n\t\n\t  prep: function /*istanbul ignore next*/prep(newComponent, oldComponent) {\n\t    if (!newComponent || !oldComponent) return;\n\t    utils.addClass(newComponent.$element, 'ts-item');\n\t    utils.addClass(oldComponent.$element, 'ts-item');\n\t  },\n\t\n\t  go: function /*istanbul ignore next*/go(newComponent, oldComponent, done) {\n\t    if (!newComponent || !oldComponent) return done();\n\t    var doneCount = 0;\n\t    var newEmitter = new EventEmitter(newComponent.$element);\n\t    var oldEmitter = new EventEmitter(oldComponent.$element);\n\t    var checkDone = function () {\n\t      if (++doneCount > 1) {\n\t        newEmitter.off(utils.ANIMATION_END_EVENT_NAME, checkDone);\n\t        oldEmitter.off(utils.ANIMATION_END_EVENT_NAME, checkDone);\n\t        utils.removeClass(oldComponent.$element, this.classes.leave);\n\t        utils.removeClass(oldComponent.$element, 'ts-item');\n\t        utils.removeClass(newComponent.$element, this.classes.enter);\n\t        utils.removeClass(newComponent.$element, 'ts-item');\n\t        done();\n\t      }\n\t    }.bind(this);\n\t    newEmitter.on(utils.ANIMATION_END_EVENT_NAME, checkDone);\n\t    oldEmitter.on(utils.ANIMATION_END_EVENT_NAME, checkDone);\n\t    utils.addClass(newComponent.$element, this.classes.enter);\n\t    utils.addClass(oldComponent.$element, this.classes.leave);\n\t  }\n\t\n\t});\n\t\n\tTransition.install = function (mokit) {\n\t  mokit.Transition = this;\n\t};\n\t\n\tmodule.exports = Transition;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 104 */\n/***/ function(module, exports) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\t/**\n\t * 获取动画样式\n\t * @param {int} num 编号\n\t * @returns {Object} 包含一组样式名的对象\n\t */\n\texports.get = function (num) {\n\t  var leave = /*istanbul ignore next*/void 0,\n\t      enter = /*istanbul ignore next*/void 0;\n\t  /* eslint-disable */\n\t  switch (num) {\n\t    case 1:\n\t      leave = 'ts-moveToLeft';\n\t      enter = 'ts-moveFromRight';\n\t      break;\n\t    case 2:\n\t      leave = 'ts-moveToRight';\n\t      enter = 'ts-moveFromLeft';\n\t      break;\n\t    case 3:\n\t      leave = 'ts-moveToTop';\n\t      enter = 'ts-moveFromBottom';\n\t      break;\n\t    case 4:\n\t      leave = 'ts-moveToBottom';\n\t      enter = 'ts-moveFromTop';\n\t      break;\n\t    case 5:\n\t      leave = 'ts-fade';\n\t      enter = 'ts-moveFromRight ts-ontop';\n\t      break;\n\t    case 6:\n\t      leave = 'ts-fade';\n\t      enter = 'ts-moveFromLeft ts-ontop';\n\t      break;\n\t    case 7:\n\t      leave = 'ts-fade';\n\t      enter = 'ts-moveFromBottom ts-ontop';\n\t      break;\n\t    case 8:\n\t      leave = 'ts-fade';\n\t      enter = 'ts-moveFromTop ts-ontop';\n\t      break;\n\t    case 9:\n\t      leave = 'ts-moveToLeftFade';\n\t      enter = 'ts-moveFromRightFade';\n\t      break;\n\t    case 10:\n\t      leave = 'ts-moveToRightFade';\n\t      enter = 'ts-moveFromLeftFade';\n\t      break;\n\t    case 11:\n\t      leave = 'ts-moveToTopFade';\n\t      enter = 'ts-moveFromBottomFade';\n\t      break;\n\t    case 12:\n\t      leave = 'ts-moveToBottomFade';\n\t      enter = 'ts-moveFromTopFade';\n\t      break;\n\t    case 13:\n\t      leave = 'ts-moveToLeftEasing ts-ontop';\n\t      enter = 'ts-moveFromRight';\n\t      break;\n\t    case 14:\n\t      leave = 'ts-moveToRightEasing ts-ontop';\n\t      enter = 'ts-moveFromLeft';\n\t      break;\n\t    case 15:\n\t      leave = 'ts-moveToTopEasing ts-ontop';\n\t      enter = 'ts-moveFromBottom';\n\t      break;\n\t    case 16:\n\t      leave = 'ts-moveToBottomEasing ts-ontop';\n\t      enter = 'ts-moveFromTop';\n\t      break;\n\t    case 17:\n\t      leave = 'ts-scaleDown';\n\t      enter = 'ts-moveFromRight ts-ontop';\n\t      break;\n\t    case 18:\n\t      leave = 'ts-scaleDown';\n\t      enter = 'ts-moveFromLeft ts-ontop';\n\t      break;\n\t    case 19:\n\t      leave = 'ts-scaleDown';\n\t      enter = 'ts-moveFromBottom ts-ontop';\n\t      break;\n\t    case 20:\n\t      leave = 'ts-scaleDown';\n\t      enter = 'ts-moveFromTop ts-ontop';\n\t      break;\n\t    case 21:\n\t      leave = 'ts-scaleDown';\n\t      enter = 'ts-scaleUpDown ts-delay300';\n\t      break;\n\t    case 22:\n\t      leave = 'ts-scaleDownUp';\n\t      enter = 'ts-scaleUp ts-delay300';\n\t      break;\n\t    case 23:\n\t      leave = 'ts-moveToLeft ts-ontop';\n\t      enter = 'ts-scaleUp';\n\t      break;\n\t    case 24:\n\t      leave = 'ts-moveToRight ts-ontop';\n\t      enter = 'ts-scaleUp';\n\t      break;\n\t    case 25:\n\t      leave = 'ts-moveToTop ts-ontop';\n\t      enter = 'ts-scaleUp';\n\t      break;\n\t    case 26:\n\t      leave = 'ts-moveToBottom ts-ontop';\n\t      enter = 'ts-scaleUp';\n\t      break;\n\t    case 27:\n\t      leave = 'ts-scaleDownCenter';\n\t      enter = 'ts-scaleUpCenter ts-delay400';\n\t      break;\n\t    case 28:\n\t      leave = 'ts-rotateRightSideFirst';\n\t      enter = 'ts-moveFromRight ts-delay200 ts-ontop';\n\t      break;\n\t    case 29:\n\t      leave = 'ts-rotateLeftSideFirst';\n\t      enter = 'ts-moveFromLeft ts-delay200 ts-ontop';\n\t      break;\n\t    case 30:\n\t      leave = 'ts-rotateTopSideFirst';\n\t      enter = 'ts-moveFromTop ts-delay200 ts-ontop';\n\t      break;\n\t    case 31:\n\t      leave = 'ts-rotateBottomSideFirst';\n\t      enter = 'ts-moveFromBottom ts-delay200 ts-ontop';\n\t      break;\n\t    case 32:\n\t      leave = 'ts-flipOutRight';\n\t      enter = 'ts-flipInLeft ts-delay500';\n\t      break;\n\t    case 33:\n\t      leave = 'ts-flipOutLeft';\n\t      enter = 'ts-flipInRight ts-delay500';\n\t      break;\n\t    case 34:\n\t      leave = 'ts-flipOutTop';\n\t      enter = 'ts-flipInBottom ts-delay500';\n\t      break;\n\t    case 35:\n\t      leave = 'ts-flipOutBottom';\n\t      enter = 'ts-flipInTop ts-delay500';\n\t      break;\n\t    case 36:\n\t      leave = 'ts-rotateFall ts-ontop';\n\t      enter = 'ts-scaleUp';\n\t      break;\n\t    case 37:\n\t      leave = 'ts-rotateOutNewspaper';\n\t      enter = 'ts-rotateInNewspaper ts-delay500';\n\t      break;\n\t    case 38:\n\t      leave = 'ts-rotatePushLeft';\n\t      enter = 'ts-moveFromRight';\n\t      break;\n\t    case 39:\n\t      leave = 'ts-rotatePushRight';\n\t      enter = 'ts-moveFromLeft';\n\t      break;\n\t    case 40:\n\t      leave = 'ts-rotatePushTop';\n\t      enter = 'ts-moveFromBottom';\n\t      break;\n\t    case 41:\n\t      leave = 'ts-rotatePushBottom';\n\t      enter = 'ts-moveFromTop';\n\t      break;\n\t    case 42:\n\t      leave = 'ts-rotatePushLeft';\n\t      enter = 'ts-rotatePullRight ts-delay180';\n\t      break;\n\t    case 43:\n\t      leave = 'ts-rotatePushRight';\n\t      enter = 'ts-rotatePullLeft ts-delay180';\n\t      break;\n\t    case 44:\n\t      leave = 'ts-rotatePushTop';\n\t      enter = 'ts-rotatePullBottom ts-delay180';\n\t      break;\n\t    case 45:\n\t      leave = 'ts-rotatePushBottom';\n\t      enter = 'ts-rotatePullTop ts-delay180';\n\t      break;\n\t    case 46:\n\t      leave = 'ts-rotateFoldLeft';\n\t      enter = 'ts-moveFromRightFade';\n\t      break;\n\t    case 47:\n\t      leave = 'ts-rotateFoldRight';\n\t      enter = 'ts-moveFromLeftFade';\n\t      break;\n\t    case 48:\n\t      leave = 'ts-rotateFoldTop';\n\t      enter = 'ts-moveFromBottomFade';\n\t      break;\n\t    case 49:\n\t      leave = 'ts-rotateFoldBottom';\n\t      enter = 'ts-moveFromTopFade';\n\t      break;\n\t    case 50:\n\t      leave = 'ts-moveToRightFade';\n\t      enter = 'ts-rotateUnfoldLeft';\n\t      break;\n\t    case 51:\n\t      leave = 'ts-moveToLeftFade';\n\t      enter = 'ts-rotateUnfoldRight';\n\t      break;\n\t    case 52:\n\t      leave = 'ts-moveToBottomFade';\n\t      enter = 'ts-rotateUnfoldTop';\n\t      break;\n\t    case 53:\n\t      leave = 'ts-moveToTopFade';\n\t      enter = 'ts-rotateUnfoldBottom';\n\t      break;\n\t    case 54:\n\t      leave = 'ts-rotateRoomLeftOut ts-ontop';\n\t      enter = 'ts-rotateRoomLeftIn';\n\t      break;\n\t    case 55:\n\t      leave = 'ts-rotateRoomRightOut ts-ontop';\n\t      enter = 'ts-rotateRoomRightIn';\n\t      break;\n\t    case 56:\n\t      leave = 'ts-rotateRoomTopOut ts-ontop';\n\t      enter = 'ts-rotateRoomTopIn';\n\t      break;\n\t    case 57:\n\t      leave = 'ts-rotateRoomBottomOut ts-ontop';\n\t      enter = 'ts-rotateRoomBottomIn';\n\t      break;\n\t    case 58:\n\t      leave = 'ts-rotateCubeLeftOut ts-ontop';\n\t      enter = 'ts-rotateCubeLeftIn';\n\t      break;\n\t    case 59:\n\t      leave = 'ts-rotateCubeRightOut ts-ontop';\n\t      enter = 'ts-rotateCubeRightIn';\n\t      break;\n\t    case 60:\n\t      leave = 'ts-rotateCubeTopOut ts-ontop';\n\t      enter = 'ts-rotateCubeTopIn';\n\t      break;\n\t    case 61:\n\t      leave = 'ts-rotateCubeBottomOut ts-ontop';\n\t      enter = 'ts-rotateCubeBottomIn';\n\t      break;\n\t    case 62:\n\t      leave = 'ts-rotateCarouselLeftOut ts-ontop';\n\t      enter = 'ts-rotateCarouselLeftIn';\n\t      break;\n\t    case 63:\n\t      leave = 'ts-rotateCarouselRightOut ts-ontop';\n\t      enter = 'ts-rotateCarouselRightIn';\n\t      break;\n\t    case 64:\n\t      leave = 'ts-rotateCarouselTopOut ts-ontop';\n\t      enter = 'ts-rotateCarouselTopIn';\n\t      break;\n\t    case 65:\n\t      leave = 'ts-rotateCarouselBottomOut ts-ontop';\n\t      enter = 'ts-rotateCarouselBottomIn';\n\t      break;\n\t    case 66:\n\t      leave = 'ts-rotateSidesOut';\n\t      enter = 'ts-rotateSidesIn ts-delay200';\n\t      break;\n\t    case 67:\n\t      leave = 'ts-rotateSlideOut';\n\t      enter = 'ts-rotateSlideIn';\n\t      break;\n\t    case 68:\n\t      leave = 'ts-fade ts-ontop';\n\t      enter = 'ts-fade ts-delay200';\n\t      break;\n\t  }\n\t  /* eslint-enable */\n\t\n\t  return { enter: enter, leave: leave };\n\t};\n\n/***/ },\n/* 105 */\n/***/ function(module, exports) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\t/**\n\t * 添加或删除 className\n\t * @param {element} element 元素\n\t * @param {string} classNames 样式名称\n\t * @param {boolean} state 添加或删除\n\t * @returns {void} 无返回\n\t */\n\texports.setClassNames = function (element, classNames, state) {\n\t  if (!element || !classNames) return;\n\t  if (!(classNames instanceof Array)) {\n\t    classNames = classNames.split(' ');\n\t  }\n\t  classNames.forEach(function (className) {\n\t    element.classList[state ? 'add' : 'remove'](className);\n\t  }, this);\n\t};\n\t\n\t/**\n\t * 添加 className\n\t * @param {element} element 元素\n\t * @param {string} classNames 样式名称\n\t * @returns {void} 无返回\n\t */\n\texports.addClass = function (element, classNames) {\n\t  this.setClassNames(element, classNames, true);\n\t};\n\t\n\t/**\n\t * 删除 className\n\t * @param {element} element 元素\n\t * @param {string} classNames 样式名称\n\t * @returns {void} 无返回\n\t */\n\texports.removeClass = function (element, classNames) {\n\t  this.setClassNames(element, classNames, false);\n\t};\n\t\n\t// 取浏览器的 CSS 前缀\n\texports.BROWSER_PREFIX = function () {\n\t  var styles = window.getComputedStyle(document.documentElement, '');\n\t  return (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];\n\t}();\n\t\n\t// css 动画解束时的事件\n\texports.ANIMATION_END_EVENT_NAME = /*istanbul ignore next*/exports.BROWSER_PREFIX + 'AnimationEnd';\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar mokit = __webpack_require__(10);\n\tvar Toolbar = __webpack_require__(107);\n\t\n\tvar slides = [].slice.call(document.querySelectorAll('script[type=\"text/slide\"]'));\n\t\n\tmodule.exports = new mokit.Component({\n\t  template: __webpack_require__(110),\n\t  components: {\n\t    Toolbar: Toolbar\n\t  },\n\t  /*istanbul ignore next*/data: function data() {\n\t    return {\n\t      slides: slides\n\t    };\n\t  },\n\t  /*istanbul ignore next*/onReady: function onReady() {\n\t    /*istanbul ignore next*/var _this = this;\n\t\n\t    document.addEventListener('keydown', function (event) {\n\t      var keyCode = event.keyCode;\n\t      switch (keyCode) {\n\t        case 37:\n\t        case 38:\n\t          /*istanbul ignore next*/_this.toolbar.prev();\n\t          break;\n\t        case 39:\n\t        case 40:\n\t        case 32:\n\t          /*istanbul ignore next*/_this.toolbar.next();\n\t          break;\n\t        case 13:\n\t          /*istanbul ignore next*/_this.toolbar.togglePlay();\n\t          break;\n\t      }\n\t    });\n\t  },\n\t  /*istanbul ignore next*/onSwipeLeft: function onSwipeLeft() {\n\t    this.toolbar.next(17);\n\t  },\n\t  /*istanbul ignore next*/onSwipeRight: function onSwipeRight() {\n\t    this.toolbar.next(18);\n\t  }\n\t});\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar mokit = __webpack_require__(10);\n\tvar random = __webpack_require__(108);\n\t\n\tdocument.body.requestFullscreen = document.body.requestFullscreen || document.body.webkitRequestFullScreen || document.body.mozRequestFullScreen;\n\t\n\tdocument.exitFullscreen = document.exitFullscreen || document.webkitCancelFullScreen || document.webkitExitFullScreen || document.mozCancelFullScreen;\n\t\n\tmodule.exports = new mokit.Component({\n\t  template: __webpack_require__(109),\n\t  /*istanbul ignore next*/data: function data() {\n\t    return {\n\t      index: 0,\n\t      total: 0,\n\t      isPlay: false\n\t    };\n\t  },\n\t  /*istanbul ignore next*/onReady: function onReady() {\n\t    this.total = this.$parent.slides.length;\n\t    var index = this.$route.params.index || 1;\n\t    this.index = parseInt(index);\n\t  },\n\t  /*istanbul ignore next*/go: function go(index, effect) {\n\t    this.index = index;\n\t    if (this.index > this.total) this.index = 1;\n\t    if (this.index < 1) this.index = this.total;\n\t    var slide = this.$root.slides[this.index - 1];\n\t    effect = effect || parseInt(slide.getAttribute('effect') || random(1, 68));\n\t    this.$router.go( /*istanbul ignore next*/'/slide/' + this.index, new mokit.Transition(effect));\n\t  },\n\t  /*istanbul ignore next*/next: function next(effect) {\n\t    this.go(++this.index, effect);\n\t  },\n\t  /*istanbul ignore next*/prev: function prev(effect) {\n\t    this.go(--this.index, effect);\n\t  },\n\t  /*istanbul ignore next*/play: function play() {\n\t    document.body.requestFullscreen();\n\t    this.isPlay = true;\n\t  },\n\t  /*istanbul ignore next*/stop: function stop() {\n\t    document.exitFullscreen();\n\t    this.isPlay = false;\n\t  },\n\t  /*istanbul ignore next*/togglePlay: function togglePlay() {\n\t    if (this.isPlay) {\n\t      this.stop();\n\t    } else {\n\t      this.play();\n\t    }\n\t  }\n\t});\n\n/***/ },\n/* 108 */\n/***/ function(module, exports) {\n\n\t/*istanbul ignore next*/\"use strict\";\n\t\n\tmodule.exports = function random(min, max) {\n\t  return parseInt(Math.random() * (max - min + 1) + min);\n\t};\n\n/***/ },\n/* 109 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"toolbar\\\">\\n  <i class=\\\"fa fa-undo\\\" m:on:click=\\\"go(1)\\\"></i>\\n  <i class=\\\"fa fa-chevron-circle-left\\\" m:on:click=\\\"prev()\\\"></i>\\n  <span class=\\\"pager\\\">{{index}}/{{total}}</span>\\n  <i class=\\\"fa fa-chevron-circle-right\\\" m:on:click=\\\"next()\\\"></i>\\n  <i class=\\\"fa fa-{{isPlay?'stop':'play'}}\\\" m:on:click=\\\"togglePlay()\\\"></i>\\n</div>\"\n\n/***/ },\n/* 110 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"ppt\\\" m:on:swipeleft=\\\"onSwipeLeft\\\" m:on:swiperight=\\\"onSwipeRight\\\">\\n  <m:toolbar m:id=\\\"toolbar\\\"></m:toolbar>\\n  <m:router-view class=\\\"stage\\\"></m:router-view>\\n</div>\"\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*istanbul ignore next*/'use strict';\n\t\n\tvar mokit = __webpack_require__(10);\n\tvar random = __webpack_require__(108);\n\t\n\tmodule.exports = new mokit.Component({\n\t  template: __webpack_require__(112),\n\t  /*istanbul ignore next*/data: function data() {\n\t    return {\n\t      bgcolor: '#000',\n\t      bgimage: 'none',\n\t      content: '',\n\t      align: 'left',\n\t      style: ''\n\t    };\n\t  },\n\t  /*istanbul ignore next*/onCreate: function onCreate() {\n\t    var index = this.$route.params.index || 1;\n\t    index = parseInt(index) - 1;\n\t    var slide = this.$root.slides[index];\n\t    this.content = slide.innerHTML;\n\t    this.bgcolor = slide.getAttribute('bgcolor') || 'rgb(' + random(20, 150) + ',' + random(20, 180) + ',' + random(20, 180) + ')';\n\t    this.align = slide.getAttribute('align') || 'left';\n\t    this.bgimage = slide.getAttribute('bgimage');\n\t    this.bgimage = this.bgimage ? this.bgimage = /*istanbul ignore next*/'url(\\'' + this.bgimage + '\\')' : 'none';\n\t    this.style = slide.getAttribute('style') || '';\n\t  }\n\t});\n\n/***/ },\n/* 112 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"slide-container\\\">\\n  <div class=\\\"slide markdown-body\\\" \\n  style=\\\"background-color:{{bgcolor}};background-image:{{bgimage}};text-align:{{align}};{{style}}\\\" \\n  m:html=\\\"content\\\">\\n  </div>\\n</div>\"\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6b8d869b031e26d9d064","require('mditor/dist/css/mditor.css');\nrequire('./assets/common.less');\n\nconst mokit = require('mokit');\nconst Router = require('mokit-router');\nconst Touch = require('mokit-touch');\nconst Transition = require('mokit-transition');\nconst Frame = require('./components/frame');\nconst Slide = require('./components/slide');\n\nmokit.use(Router);\nmokit.use(Touch);\nmokit.use(Transition);\n\nvar router = new mokit.Router();\n\nrouter.map({\n  '/': Slide,\n  '/slide/{index}': Slide\n});\n\nrouter.start(Frame, document.body);\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","const info = require('./info.json');\nconst utils = require('ntils');\nconst Class = require('cify');\nconst Watcher = require('./watcher');\nconst Observer = require('./observer');\nconst Template = require('./template');\nconst Component = require('./component');\nconst EventEmitter = require('./events');\n\n//持载模板相关对象\nutils.copy(Template, Component);\n\nComponent.version = info.version;\nComponent.Template = Template;\nComponent.Watcher = Watcher;\nComponent.Observer = Observer;\nComponent.EventEmitter = EventEmitter;\nComponent.utils = utils;\nComponent.Class = Class;\n\n//定义安装插件的方法\nComponent.use = function (plugin) {\n  let install = plugin.install || plugin;\n  if (!utils.isFunction(install)) {\n    throw new Error('Invalid Plugin');\n  }\n  return install.call(plugin, this);\n};\n\n//安装内置的路由插件\n//Component.use(Router);\n\nmodule.exports = Component;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/index.js","module.exports = {\n\t\"name\": \"mokit\",\n\t\"version\": \"3.0.15\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._mokit@3.0.15@mokit/lib/info.json\n// module id = 11\n// module chunks = 0","(function (ntils) {\n\n  /**\n   * 空函数\n   */\n  ntils.noop = function () { };\n\n  /**\n   * 验证一个对象是否为NULL\n   * @method isNull\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isNull = function (obj) {\n    return obj === null || typeof obj === \"undefined\";\n  };\n\n  /**\n   * 除去字符串两端的空格\n   * @method trim\n   * @param  {String} str 源字符串\n   * @return {String}     结果字符串\n   * @static\n   */\n  ntils.trim = function (str) {\n    if (this.isNull(str)) return str;\n    if (str.trim) {\n      return str.trim();\n    } else {\n      return str.replace(/(^[\\\\s]*)|([\\\\s]*$)/g, \"\");\n    }\n  };\n\n  /**\n   * 替换所有\n   * @method replace\n   * @param {String} str 源字符串\n   * @param {String} str1 要替换的字符串\n   * @param {String} str2 替换为的字符串\n   * @static\n   */\n  ntils.replace = function (str, str1, str2) {\n    if (this.isNull(str)) return str;\n    return str.replace(new RegExp(str1, 'g'), str2);\n  };\n\n  /**\n   * 从字符串开头匹配\n   * @method startWith\n   * @param {String} str1 源字符串\n   * @param {String} str2 要匹配的字符串\n   * @return {Boolean} 匹配结果\n   * @static\n   */\n  ntils.startWith = function (str1, str2) {\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) === 0;\n  };\n\n  /**\n   * 是否包含\n   * @method contains\n   * @param {String} str1 源字符串\n   * @param {String} str2 检查包括字符串\n   * @return {Boolean} 结果\n   * @static\n   */\n  ntils.contains = function (str1, str2) {\n    var self = this;\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) > -1;\n  };\n\n  /**\n   * 从字符串结束匹配\n   * @method endWidth\n   * @param {String} str1 源字符串\n   * @param {String} str2 匹配字符串\n   * @return {Boolean} 匹配结果\n   * @static\n   */\n  ntils.endWith = function (str1, str2) {\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) === (str1.length - str2.length);\n  };\n\n  /**\n   * 是否包含属性\n   * @method hasProperty\n   * @param  {Object}  obj  对象\n   * @param  {String}  name 属性名\n   * @return {Boolean}      结果\n   * @static\n   */\n  ntils.has = ntils.hasProperty = function (obj, name) {\n    if (this.isNull(obj) || this.isNull(name)) return false;\n    return (name in obj) || (obj.hasOwnProperty(name));\n  };\n\n  /**\n   * 验证一个对象是否为Function\n   * @method isFunction\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isFunction = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === \"function\";\n  };\n\n  /**\n   * 验证一个对象是否为String\n   * @method isString\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isString = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'string' || obj instanceof String;\n  };\n\n  /**\n   * 验证一个对象是否为Number\n   * @method isNumber\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isNumber = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'number' || obj instanceof Number;\n  };\n\n  /**\n   * 验证一个对象是否为Boolean\n   * @method isBoolean\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isBoolean = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'boolean' || obj instanceof Boolean;\n  };\n\n  /**\n   * 验证一个对象是否为HTML Element\n   * @method isElement\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isElement = function (obj) {\n    if (this.isNull(obj)) return false;\n    if (window.Element) {\n      return obj instanceof Element;\n    } else {\n      return (obj.tagName && obj.nodeType && obj.nodeName && obj.attributes && obj.ownerDocument);\n    }\n  };\n\n  /**\n   * 验证一个对象是否为HTML Text Element\n   * @method isText\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isText = function (obj) {\n    if (this.isNull(obj)) return false;\n    return obj instanceof Text;\n  };\n\n  /**\n   * 验证一个对象是否为Object\n   * @method isObject\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isObject = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === \"object\";\n  };\n\n  /**\n   * 验证一个对象是否为Array或伪Array\n   * @method isArray\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isArray = function (obj) {\n    if (this.isNull(obj)) return false;\n    var v1 = Object.prototype.toString.call(obj) === '[object Array]';\n    var v2 = obj instanceof Array;\n    var v3 = !this.isString(obj) && this.isNumber(obj.length) && this.isFunction(obj.splice);\n    var v4 = !this.isString(obj) && this.isNumber(obj.length) && obj[0];\n    return v1 || v2 || v3 || v4;\n  };\n\n  /**\n   * 验证是不是一个日期对象\n   * @method isDate\n   * @param {Object} val   要检查的对象\n   * @return {Boolean}           结果\n   * @static\n   */\n  ntils.isDate = function (val) {\n    if (this.isNull(val)) return false;\n    return val instanceof Date;\n  };\n\n  /**\n   * 验证是不是一个正则对象\n   * @method isDate\n   * @param {Object} val   要检查的对象\n   * @return {Boolean}           结果\n   * @static\n   */\n  ntils.isRegexp = function (val) {\n    return val instanceof RegExp;\n  };\n\n  /**\n   * 转换为数组\n   * @method toArray\n   * @param {Array|Object} array 伪数组\n   * @return {Array} 转换结果数组\n   * @static\n   */\n  ntils.toArray = function (array) {\n    if (this.isNull(array)) return [];\n    return Array.prototype.slice.call(array);\n  };\n\n  /**\n   * 转为日期格式\n   * @method toDate\n   * @param {Number|String} val 日期字符串或整型数值\n   * @return {Date} 日期对象\n   * @static\n   */\n  ntils.toDate = function (val) {\n    var self = this;\n    if (self.isNumber(val))\n      return new Date(val);\n    else if (self.isString(val))\n      return new Date(self.replace(self.replace(val, '-', '/'), 'T', ' '));\n    else if (self.isDate(val))\n      return val;\n    else\n      return null;\n  };\n\n  /**\n   * 遍历一个对像或数组\n   * @method each\n   * @param  {Object or Array}   obj  要遍历的数组或对象\n   * @param  {Function} fn            处理函数\n   * @return {void}                   无返回值\n   * @static\n   */\n  ntils.each = function (list, handler, scope) {\n    if (this.isNull(list) || this.isNull(handler)) return;\n    if (this.isArray(list)) {\n      var listLength = list.length;\n      for (var i = 0; i < listLength; i++) {\n        var rs = handler.call(scope || list[i], i, list[i]);\n        if (!this.isNull(rs)) return rs;\n      }\n    } else {\n      for (var key in list) {\n        var rs = handler.call(scope || list[key], key, list[key]);\n        if (!this.isNull(rs)) return rs;\n      }\n    }\n  };\n\n  /**\n   * 格式化日期\n   * @method formatDate\n   * @param {Date|String|Number} date 日期\n   * @param {String} format 格式化字符串\n   * @param {object} dict 反译字典\n   * @return {String} 格式化结果\n   * @static\n   */\n  ntils.formatDate = function (date, format, dict) {\n    if (this.isNull(format) || this.isNull(date)) return date;\n    date = this.toDate(date);\n    dict = dict || {};\n    var placeholder = {\n      \"M+\": date.getMonth() + 1, //month\n      \"d+\": date.getDate(), //day\n      \"h+\": date.getHours(), //hour\n      \"m+\": date.getMinutes(), //minute\n      \"s+\": date.getSeconds(), //second\n      \"w+\": date.getDay(), //week\n      \"q+\": Math.floor((date.getMonth() + 3) / 3), //quarter\n      \"S\": date.getMilliseconds() //millisecond\n    }\n    if (/(y+)/.test(format)) {\n      format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    for (var key in placeholder) {\n      if (new RegExp(\"(\" + key + \")\").test(format)) {\n        var value = placeholder[key];\n        value = dict[value] || value;\n        format = format.replace(RegExp.$1, RegExp.$1.length == 1\n          ? value : (\"00\" + value).substr((\"\" + value).length));\n      }\n    }\n    return format;\n  };\n\n  /**\n   * 拷贝对象\n   * @method copy\n   * @param {Object} src 源对象\n   * @param {Object} dst 目标对象\n   * @static\n   */\n  ntils.copy = function (src, dst, igonres) {\n    dst = dst || (this.isArray(src) ? [] : {});\n    this.each(src, function (key) {\n      if (igonres && igonres.indexOf(key) > -1) return;\n      delete dst[key];\n      if (Object.getOwnPropertyDescriptor) {\n        try {\n          Object.defineProperty(dst, key, Object.getOwnPropertyDescriptor(src, key));\n        } catch (ex) {\n          dst[key] = src[key];\n        }\n      } else {\n        dst[key] = src[key];\n      }\n    })\n    return dst;\n  };\n\n  /**\n   * 深度克隆对象\n   * @method clone\n   * @param {Object} src 源对象\n   * @return {Object} 新对象\n   * @static\n   */\n  ntils.clone = function (src, igonres) {\n    if (this.isNull(src) ||\n      this.isString(src) ||\n      this.isNumber(src) ||\n      this.isBoolean(src) ||\n      this.isDate(src)) {\n      return src;\n    }\n    var objClone = src;\n    try {\n      objClone = new src.constructor();\n    } catch (ex) { }\n    this.each(src, function (key, value) {\n      if (objClone[key] != value && !this.contains(igonres, key)) {\n        if (this.isObject(value)) {\n          objClone[key] = this.clone(value, igonres);\n        } else {\n          objClone[key] = value;\n        }\n      }\n    }, this);\n    ['toString', 'valueOf'].forEach(function (key) {\n      if (this.contains(igonres, key)) return;\n      this.defineFreezeProp(objClone, key, src[key]);\n    }, this);\n    return objClone;\n  };\n\n  /**\n   * 合并对象\n   * @method mix\n   * @return 合并后的对象\n   * @param {Object} dst 目标对象\n   * @param {Object} src 源对象\n   * @param {Array} igonres 忽略的属性名,\n   * @param {Number} mode 模式\n   */\n  ntils.mix = function (dst, src, igonres, mode) {\n    //根据模式来判断，默认是Obj to Obj的  \n    if (mode) {\n      switch (mode) {\n        case 1: // proto to proto  \n          return ntils.mix(dst.prototype, src.prototype, igonres, 0);\n        case 2: // object to object and proto to proto  \n          ntils.mix(dst.prototype, src.prototype, igonres, 0);\n          break; // pass through  \n        case 3: // proto to static  \n          return ntils.mix(dst, src.prototype, igonres, 0);\n        case 4: // static to proto  \n          return ntils.mix(dst.prototype, src, igonres, 0);\n        default: // object to object is what happens below  \n      }\n    }\n    //---\n    src = src || {};\n    dst = dst || (this.isArray(src) ? [] : {});\n    this.keys(src).forEach(function (key) {\n      if (this.contains(igonres, key)) return;\n      if (this.isObject(src[key]) &&\n        (src[key].constructor == Object ||\n          src[key].constructor == Array ||\n          src[key].constructor == null)) {\n        dst[key] = ntils.mix(dst[key], src[key], igonres, 0);\n      } else {\n        dst[key] = src[key];\n      }\n    }, this);\n    return dst;\n  };\n\n  /**\n   * 定义不可遍历的属性\n   **/\n  ntils.defineFreezeProp = function (obj, name, value) {\n    try {\n      Object.defineProperty(obj, name, {\n        value: value,\n        enumerable: false,\n        configurable: true, //能不能重写定义\n        writable: false //能不能用「赋值」运算更改\n      });\n    } catch (err) {\n      obj[name] = value;\n    }\n  };\n\n  /**\n   * 获取所有 key \n   */\n  ntils.keys = function (obj) {\n    if (Object.keys) return Object.keys(obj);\n    var keys = [];\n    this.each(obj, function (key) {\n      keys.push(key);\n    });\n    return keys;\n  };\n\n  /**\n   * 创建一个对象\n   */\n  ntils.create = function (proto, props) {\n    if (Object.create) return Object.create(proto, props);\n    var Cotr = function () { };\n    Cotr.prototype = proto;\n    var obj = new Cotr();\n    if (props) this.copy(props, obj);\n    return obj;\n  };\n\n  /**\n   * 设置 proto\n   * 在不支持 setPrototypeOf 也不支持 __proto__ 的浏览器\n   * 中，会采用 copy 方式\n   */\n  ntils.setPrototypeOf = function (obj, proto) {\n    if (Object.setPrototypeOf) {\n      return Object.setPrototypeOf(obj, proto || this.create(null));\n    } else {\n      if (!('__proto__' in Object)) this.copy(proto, obj);\n      obj.__proto__ = proto;\n    }\n  };\n\n  /**\n   * 获取 proto\n   */\n  ntils.getPrototypeOf = function (obj) {\n    if (obj.__proto__) return obj.__proto__;\n    if (Object.getPrototypeOf) return Object.getPrototypeOf(obj);\n    if (obj.constructor) return obj.constructor.prototype;\n  };\n\n  /**\n   * 是否深度相等\n   */\n  ntils.deepEqual = function (a, b) {\n    if (a === b) return true;\n    if (!this.isObject(a) || !this.isObject(b)) return false;\n    var aKeys = this.keys(a);\n    var bKeys = this.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    var allKeys = aKeys.concat(bKeys);\n    var checkedMap = this.create(null);\n    var result = true;\n    this.each(allKeys, function (i, key) {\n      if (checkedMap[key]) return;\n      if (!this.deepEqual(a[key], b[key])) result = false;\n      checkedMap[key] = true;\n    }, this);\n    return result;\n  };\n\n  /**\n   * 从一个数值循环到别一个数\n   * @param {number} fromNum 开始数值\n   * @param {Number} toNum 结束数值\n   * @param {Number} step 步长值\n   * @param {function} handler 执行函数\n   * @returns {void} 无返回\n   */\n  ntils.fromTo = function (fromNum, toNum, step, handler) {\n    if (!handler) handler = [step, step = handler][0];\n    step = Math.abs(step || 1);\n    if (fromNum < toNum) {\n      for (var i = fromNum; i <= toNum; i += step) handler(i);\n    } else {\n      for (var i = fromNum; i >= toNum; i -= step) handler(i);\n    }\n  };\n\n  /**\n   * 生成一个Guid\n   * @method newGuid\n   * @return {String} GUID字符串\n   * @static\n   */\n  ntils.newGuid = function () {\n    var S4 = function () {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n  };\n\n  /**\n   * 对象变换\n   **/\n  ntils.map = function (list, fn) {\n    var buffer = this.isArray(list) ? [] : {};\n    this.each(list, function (name, value) {\n      buffer[name] = fn(name, value);\n    });\n    return buffer;\n  };\n\n  /**\n   * 通过路径设置属性值\n   */\n  ntils.setByPath = function (obj, path, value) {\n    if (this.isNull(obj) || this.isNull(path) || path === '') {\n      return;\n    }\n    if (!this.isArray(path)) {\n      path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n    }\n    this.each(path, function (index, name) {\n      if (this.isNull(name) || name.length < 1) return;\n      if (index === path.length - 1) {\n        obj[name] = value;\n      } else {\n        obj[name] = obj[name] || {};\n        obj = obj[name];\n      }\n    }, this);\n  };\n\n  /**\n   * 通过路径获取属性值\n   */\n  ntils.getByPath = function (obj, path) {\n    if (this.isNull(obj) || this.isNull(path) || path === '') {\n      return obj;\n    }\n    if (!this.isArray(path)) {\n      path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n    }\n    this.each(path, function (index, name) {\n      if (this.isNull(name) || name.length < 1) return;\n      if (!this.isNull(obj)) obj = obj[name];\n    }, this);\n    return obj;\n  };\n\n  /**\n   * 数组去重\n   **/\n  ntils.unique = function (array) {\n    if (this.isNull(array)) return array;\n    var newArray = [];\n    this.each(array, function (i, value) {\n      if (newArray.indexOf(value) > -1) return;\n      newArray.push(value);\n    });\n    return newArray;\n  };\n\n  /**\n   * 解析 function 的参数列表\n   **/\n  ntils.getFunctionArgumentNames = function (fn) {\n    if (!fn) return [];\n    var src = fn.toString();\n    var parts = src.split(')')[0].split('=>')[0].split('(');\n    return (parts[1] || parts[0]).split(',').map(function (name) {\n      return name.trim();\n    }).filter(function (name) {\n      return name != 'function';\n    });\n  };\n\n  /**\n   * 缩短字符串\n   */\n  ntils.short = function (str, maxLength) {\n    if (!str) return str;\n    maxLength = maxLength || 40;\n    var strLength = str.length;\n    var trimLength = maxLength / 2;\n    return strLength > maxLength ? str.substr(0, trimLength) + '...' + str.substr(strLength - trimLength) : str;\n  };\n\n  /**\n   * 首字母大写\n   */\n  ntils.firstUpper = function (str) {\n    if (this.isNull(str)) return;\n    str[0] = str[0].toLowerCase();\n    return str;\n  };\n\n  /**\n   * 编码正则字符串\n   */\n  ntils.escapeRegExp = function (str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n\n  /**\n   * 解析字符串为 dom \n   * @param {string} str 字符串\n   * @returns {HTMLNode} 解析后的 DOM \n   */\n  ntils.parseDom = function (str) {\n    this._PDD_ = this._PDD_ || document.createElement('div');\n    this._PDD_.innerHTML = ntils.trim(str);\n    var firstNode = this._PDD_.childNodes[0];\n    //先 clone 一份再通过 innerHTML 清空\n    //否则 IE9 下，清空时会导出返回的 DOM 没有子结点\n    if (firstNode) firstNode = firstNode.cloneNode(true);\n    this._PDD_.innerHTML = '';\n    return firstNode;\n  };\n\n})((typeof exports === 'undefined') ? (window.ntils = {}) : exports);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._ntils@2.0.15@ntils/index.js\n// module id = 12\n// module chunks = 0","const utils = require('ntils');\n\nfunction ClassFactory(options) {\n  //处理 options\n  options = options || utils.create(null);\n  options.$name = options.$name || 'Class';\n  options.$extends = options.$extends || ClassFactory;\n  options.$static = options.$static || utils.create(null);\n  //处理父类 prototype\n  var superPrototype = utils.isFunction(options.$extends) ?\n    options.$extends.prototype : options.$extends;\n  //定义新类\n  var Class = function () {\n    //处理 super\n    if (!this.$super) {\n      utils.defineFreezeProp(this, '$super', function () {\n        if (this._super_called_) return this._super_ret_;\n        this._super_called_ = true;\n        if (utils.isFunction(options.$extends)) {\n          this._super_ret_ = options.$extends.apply(this, arguments);\n          //这几行确保可继承于数组\n          if (this._super_ret_) {\n            var proto = utils.getPrototypeOf(this);\n            utils.setPrototypeOf(proto, this._super_ret_);\n          }\n        } else {\n          this._super_ret_ = options.$extends;\n        }\n        return this._super_ret_;\n      });\n      for (var name in superPrototype) {\n        var value = superPrototype[name];\n        if (utils.isFunction(value)) {\n          this.$super[name] = value.bind(this);\n        } else {\n          this.$super[name] = value;\n        }\n      }\n    }\n    //调用构造\n    if (utils.isFunction(options.constructor) &&\n      options.constructor !== Object) {\n      return options.constructor.apply(this, arguments);\n    } else {\n      //如果没有实现 constructor 则调用父类构造\n      this.$super.apply(this, arguments);\n    }\n  };\n  //处理 prototype\n  Class.prototype = utils.create(superPrototype);\n  utils.copy(options, Class.prototype);\n  utils.defineFreezeProp(Class.prototype, '$class', Class);\n  //处理静态成员\n  utils.copy(options.$static, Class);\n  if (utils.isFunction(options.$extends)) {\n    utils.setPrototypeOf(Class, options.$extends);\n  }\n  if (!options.$extends.$extend) {\n    utils.copy(ClassFactory, Class);\n  }\n  utils.defineFreezeProp(Class, '$super', options.$extends);\n  //--\n  return Class;\n}\n\n//定义扩展方法\nClassFactory.$extend = function (options) {\n  options.$extends = this;\n  return new ClassFactory(options);\n};\n\nClassFactory.Class = ClassFactory;\nmodule.exports = ClassFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._cify@2.1.11@cify/index.js\n// module id = 13\n// module chunks = 0","const Class = require('cify');\nconst utils = require('ntils');\n\n/**\n * Watcher 类\n * 通过「计算函数」、「执行函数」可以创建一个 Watcher 实例\n */\nconst Watcher = new Class({\n\n  /**\n   * 通过「计算函数」、「执行函数」构建一个 Watcher 实例\n   * @param {function} calcor 计算函数\n   * @param {function} handler 处理函数\n   * @param {boolean} first 是否自动执行第一次\n   * @returns {void} 无返回\n   */\n  constructor: function (calcor, handler, first) {\n    if (!utils.isFunction(calcor) || !utils.isFunction(handler)) {\n      throw new Error('Invalid parameters');\n    }\n    this.calcor = calcor;\n    this.handler = handler;\n    if (first) this.calc(true);\n  },\n\n  /**\n   * 执行计算\n   * @param {boolean} force 是否强制触发「计算函数」\n   * @returns {Object} 计算后的值\n   */\n  calc: function (force) {\n    let newValue = this.calcor();\n    if (force || !utils.deepEqual(newValue, this.value)) {\n      this.handler(newValue, this.value);\n    }\n    this.value = utils.clone(newValue);\n  }\n\n});\n\nmodule.exports = Watcher;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/watcher/index.js","const Class = require('cify');\nconst utils = require('ntils');\nconst EventEmitter = require('../events');\n\nconst OBSERVER_PROP_NAME = '_observer_';\nconst CHANGE_EVENT_NAME = 'change';\nconst EVENT_MAX_DISPATCH_LAYER = 10;\nconst IGNORE_REGEXPS = [/^\\_(.*)\\_$/i, /^\\_\\_/i];\n\n/**\n * 对象观察类，可以监控对象变化\n * 目前方案问题:\n *   对于父子关系和事件冒泡，目前方案如果用 delete 删除一个属性，无关真实删除关系，\n *   即便调用 clearReference 也无法再清除关系，子对象的 parents 中会一直有一个引用，当前方案最高效\n * 其它方法一:\n *   将「关系」放入全局数组中，然后将 ob.parents 变成一个「属性」从全局数组件中 filter 出来，\n *   基本和目前方法类似，但是关系在外部存领教，所以 clearReference 可清除。\n * 其它方案二: \n *   构造时添加到全局数组，每一个 observer change 时都让放到全局的 observer 遍历自身的，\n *   检果事件源是不是自已的子对象，如果是则触发自身 change 事件，这样 ob 对象本身没有相关引用\n *   clearReference 时只从全局清除掉就行了，并且 delete 操作也不会影响，但效率稍差。\n * 其它方案三: \n *   给构造函数添加一个 deep 属性，只有 deep 的 ob 对象，才放入到全局数组中，检查时逻辑同方案二\n *   但是因为要检查的对象会少很多，效率会更高一点。\n */\nconst Observer = new Class({\n  $extends: EventEmitter,\n\n  /**\n   * 通过目标对象构造一个观察对象\n   * @param {Object} target 目标对象\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function (target, options) {\n    if (utils.isNull(target)) {\n      throw new Error('Invalid target');\n    }\n    options = options || {};\n    let observer = target[OBSERVER_PROP_NAME];\n    if (observer) {\n      utils.copy(options, observer.options);\n      //当时一个组件 A 的为组件 B 的 prop 时，A 更新不会触发 B 更新\n      //所在暂注释这里，另一种方法是更新 prop 指令，重写 excute 方法，而不是现在的 update 方法\n      // if (observer.options.root) {\n      //   observer.parents.length = 0;\n      // }\n      observer.apply();\n      return observer;\n    }\n    EventEmitter.call(this);\n    utils.defineFreezeProp(this, 'options', options);\n    utils.defineFreezeProp(this, 'shadow', {});\n    utils.defineFreezeProp(this, 'target', target);\n    utils.defineFreezeProp(this, 'parents', []);\n    utils.defineFreezeProp(target, OBSERVER_PROP_NAME, this);\n    this.apply();\n  },\n\n  /**\n   * 添加一个属性，动态添中的属性，无法被观察，\n   * 但是通过 set 方法添加的属性可能被观察。\n   * @param {string} name 名称\n   * @param {Object} value 值\n   * @returns {void} 无返回\n   */\n  set: function (name, value) {\n    if (utils.isFunction(value) || Observer.isIgnore(name)) {\n      return;\n    }\n    Object.defineProperty(this.target, name, {\n      get: function () {\n        return this[OBSERVER_PROP_NAME].shadow[name];\n      },\n      set: function (value) {\n        let observer = this[OBSERVER_PROP_NAME];\n        let oldValue = observer.shadow[name];\n        if (oldValue === value) return;\n        if (utils.isObject(value)) {\n          let childObserver = new Observer(value);\n          observer.addChild(childObserver, name);\n        }\n        //移除旧值的父引用\n        //如果用 delete 删除属性将无法移除父子引用\n        if (oldValue && oldValue[OBSERVER_PROP_NAME]) {\n          observer.removeChild(oldValue[OBSERVER_PROP_NAME], name);\n        }\n        observer.shadow[name] = value;\n        observer.emitChange({ path: name, value: value });\n      },\n      configurable: true,\n      enumerable: true\n    });\n    this.target[name] = value;\n  },\n\n  /**\n   * 自动应用所有动态添加的属性\n   * @returns {void} 无返回\n   */\n  apply: function () {\n    if (utils.isArray(this.target)) {\n      this._wrapArray(this.target);\n    }\n    let names = this._getPropertyNames(this.target);\n    names.forEach(function (name) {\n      let desc = Object.getOwnPropertyDescriptor(this.target, name);\n      if (!('value' in desc)) return;\n      this.set(name, this.target[name]);\n    }, this);\n  },\n\n  /**\n   * 清除所有父子引用\n   * @returns {void} 无返回\n   */\n  clearReference: function () {\n    utils.each(this.target, function (name, value) {\n      if (utils.isNull(value)) return;\n      let child = value[OBSERVER_PROP_NAME];\n      if (child) this.removeChild(child);\n    }, this);\n  },\n\n  /**\n   * 派发一个事件，事件会向父级对象冒泡\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   * @returns {void} 无返回\n   */\n  dispatch: function (eventName, event) {\n    if (event._src_ === this) return;\n    event._src_ = event._src_ || this;\n    event._layer_ = event._layer_ || 0;\n    if ((event._layer_++) >= EVENT_MAX_DISPATCH_LAYER) return;\n    this.emit(eventName, event);\n    if (!this.parents || this.parents.length < 1) return;\n    this.parents.forEach(function (item) {\n      if (!(item.name in item.parent.target)) {\n        return item.parent.removeChild(this);\n      }\n      let parentEvent = utils.copy(event);\n      parentEvent.path = item.name + '.' + event.path;\n      item.parent.dispatch(eventName, parentEvent);\n    }, this);\n  },\n\n  /**\n   * 添子观察者对象\n   * @param {Object} child 父对象\n   * @param {String} name 属性名\n   * @returns {void} 无返回\n   */\n  addChild: function (child, name) {\n    if (utils.isNull(child) || utils.isNull(name)) {\n      throw new Error('Invalid paramaters');\n    }\n    if (child.options.root) return;\n    child.parents.push({ parent: this, name: name });\n  },\n\n  /**\n   * 移除子对象\n   * @param {Object} child 父对象\n   * @param {String} name 属性名\n   * @returns {void} 无返回\n   */\n  removeChild: function (child, name) {\n    if (utils.isNull(child)) {\n      throw new Error('Invalid paramaters');\n    }\n    let foundIndex = -1;\n    child.parents.forEach(function (item, index) {\n      if (item.parent === this && item.name === name) {\n        foundIndex = index;\n      }\n    }, this);\n    if (foundIndex > -1) {\n      child.parents.splice(foundIndex, 1);\n    }\n  },\n\n  /**\n   * 触发 change 事件\n   * @param {Object} event 事件对象\n   * @returns {void} 无返回\n   */\n  emitChange: function (event) {\n    this.dispatch(CHANGE_EVENT_NAME, event);\n  },\n\n  /**\n   * 获取所有成员名称列表\n   * @returns {Array} 所有成员名称列表\n   */\n  _getPropertyNames: function () {\n    let names = utils.isArray(this.target) ?\n      this.target.map(function (item, index) {\n        return index;\n      }) : Object.keys(this.target);\n    return names.filter(function (name) {\n      return name !== OBSERVER_PROP_NAME;\n    });\n  },\n\n  /**\n   * 包裹数组\n   * @param {array} array 源数组\n   * @returns {array} 处理后的数组\n   */\n  _wrapArray: function (array) {\n    utils.defineFreezeProp(array, 'push', function () {\n      let items = [].slice.call(arguments);\n      items.forEach(function (item) {\n        //这里也会触发对应 index 的 change 事件\n        this[OBSERVER_PROP_NAME].set(array.length, item);\n      }, this);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n    });\n    utils.defineFreezeProp(array, 'pop', function () {\n      let item = [].pop.apply(this, arguments);\n      this[OBSERVER_PROP_NAME].emitChange({ path: this.length, value: item });\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return item;\n    });\n    utils.defineFreezeProp(array, 'unshift', function () {\n      let items = [].slice.call(arguments);\n      items.forEach(function (item) {\n        //这里也会触发对应 index 的 change 事件\n        this[OBSERVER_PROP_NAME].set(0, item);\n      }, this);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n    });\n    utils.defineFreezeProp(array, 'shift', function () {\n      let item = [].shift.apply(this, arguments);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 0, value: item });\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return item;\n    });\n    utils.defineFreezeProp(array, 'splice', function () {\n      let startIndex = arguments[0];\n      let endIndex = utils.isNull(arguments[1])\n        ? startIndex + arguments[1]\n        : this.length - 1;\n      let items = [].splice.apply(this, arguments);\n      for (let i = startIndex; i <= endIndex; i++) {\n        this[OBSERVER_PROP_NAME].emitChange({ path: i, value: items[i - startIndex] });\n      }\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return items;\n    });\n    utils.defineFreezeProp(array, 'set', function (index, value) {\n      if (index >= this.length) {\n        this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      }\n      this[OBSERVER_PROP_NAME].set(index, value);\n    });\n  }\n\n});\n\n/**\n * 观察一个对象\n * @param {Object} target 目标对象\n * @return {Observer} 观察者对象\n */\nObserver.observe = function (target) {\n  return new Observer(target);\n};\n\n/**\n * 检查是不是忽略的属性名\n * @param {string} word 待检查的字符串\n * @returns {void} 无返回\n */\nObserver.isIgnore = function (word) {\n  return IGNORE_REGEXPS.some(re => re.test(word));\n};\n\nmodule.exports = Observer;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/observer/index.js","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._babel-runtime@6.23.0@babel-runtime/core-js/object/keys.js\n// module id = 16\n// module chunks = 0","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/fn/object/keys.js\n// module id = 17\n// module chunks = 0","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object')\n  , $keys    = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function(){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/es6.object.keys.js\n// module id = 18\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_to-object.js\n// module id = 19\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_defined.js\n// module id = 20\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_object-keys.js\n// module id = 21\n// module chunks = 0","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_object-keys-internal.js\n// module id = 22\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_has.js\n// module id = 23\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_to-iobject.js\n// module id = 24\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_iobject.js\n// module id = 25\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_cof.js\n// module id = 26\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_array-includes.js\n// module id = 27\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_to-length.js\n// module id = 28\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_to-integer.js\n// module id = 29\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_to-index.js\n// module id = 30\n// module chunks = 0","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_shared-key.js\n// module id = 31\n// module chunks = 0","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_shared.js\n// module id = 32\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_global.js\n// module id = 33\n// module chunks = 0","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_uid.js\n// module id = 34\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_enum-bug-keys.js\n// module id = 35\n// module chunks = 0","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_object-sap.js\n// module id = 36\n// module chunks = 0","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_export.js\n// module id = 37\n// module chunks = 0","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_core.js\n// module id = 38\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_ctx.js\n// module id = 39\n// module chunks = 0","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_a-function.js\n// module id = 40\n// module chunks = 0","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_hide.js\n// module id = 41\n// module chunks = 0","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_object-dp.js\n// module id = 42\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_an-object.js\n// module id = 43\n// module chunks = 0","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_is-object.js\n// module id = 44\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_ie8-dom-define.js\n// module id = 45\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_descriptors.js\n// module id = 46\n// module chunks = 0","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_fails.js\n// module id = 47\n// module chunks = 0","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_dom-create.js\n// module id = 48\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_to-primitive.js\n// module id = 49\n// module chunks = 0","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_property-desc.js\n// module id = 50\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-descriptor\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._babel-runtime@6.23.0@babel-runtime/core-js/object/get-own-property-descriptor.js\n// module id = 51\n// module chunks = 0","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key){\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/fn/object/get-own-property-descriptor.js\n// module id = 52\n// module chunks = 0","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject                 = require('./_to-iobject')\n  , $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function(){\n  return function getOwnPropertyDescriptor(it, key){\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/es6.object.get-own-property-descriptor.js\n// module id = 53\n// module chunks = 0","var pIE            = require('./_object-pie')\n  , createDesc     = require('./_property-desc')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , has            = require('./_has')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , gOPD           = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if(IE8_DOM_DEFINE)try {\n    return gOPD(O, P);\n  } catch(e){ /* empty */ }\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_object-gopd.js\n// module id = 54\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/_object-pie.js\n// module id = 55\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._babel-runtime@6.23.0@babel-runtime/core-js/object/define-property.js\n// module id = 56\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/fn/object/define-property.js\n// module id = 57\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/._core-js@2.4.1@core-js/library/modules/es6.object.define-property.js\n// module id = 58\n// module chunks = 0","const utils = require('ntils');\nconst Class = require('cify');\n\n/**\n * 事件触发器基类\n */\nconst EventEmitter = new Class({\n  $extends: Function,\n\n  /**\n   * 构建一个一个事修的触发器对象\n   * @param {object} target 将代理的目标对象可以省略\n   * @returns {void} 无返回\n   */\n  constructor: function (target) {\n    target = target || this;\n    let emitter = target._emitter_;\n    if (emitter) return emitter;\n    utils.defineFreezeProp(this, '_target_', target);\n    utils.defineFreezeProp(target, '_emitter_', this);\n    this._isNative_ = this._isNativeObject(this._target_);\n    this._listeners_ = this._listeners_ || {};\n    this.on = this.$on = this.$addListener = this.addListener;\n    this.off = this.$off = this.$removeListener = this.removeListener;\n    this.$emit = this.emit;\n  },\n\n  /**\n   * 检查是否原生支持事件\n   * @param {object} obj 对象\n   * @returns {void} 检查结果\n   */\n  _isNativeObject: function (obj) {\n    return obj.addEventListener && obj.removeEventListener && obj.dispatchEvent;\n  },\n\n  /**\n   * 添加一个事件监听函数\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  addListener: function (name, listener, capture) {\n    if (this._isNative_) {\n      this._addNativeEventListener(name, listener, capture);\n    }\n    this._listeners_[name] = this._listeners_[name] || [];\n    this._listeners_[name].push(listener);\n    if (this._listeners_[name].length > EventEmitter._maxListeners) {\n      throw new Error('The `' + name + '` event listener is not more than 10');\n    }\n  },\n\n  /**\n   * 移除「一个/一组/所有」事件监听函数\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  removeListener: function (name, listener, capture) {\n    if (name && listener) {\n      if (this._isNative_) {\n        this._removeNativeEventListener(name, listener, capture);\n      }\n      if (!this._listeners_[name]) return;\n      let index = this._listeners_[name].indexOf(listener);\n      this._listeners_[name].splice(index, 1);\n    } else if (name) {\n      if (this._isNative_ && this._listeners_[name]) {\n        this._listeners_[name].forEach(function (_listener) {\n          this.removeListener(name, _listener, capture);\n        }, this);\n      }\n      delete this._listeners_[name];\n    } else {\n      utils.each(this._listeners_, function (name) {\n        this.removeListener(name, null, capture);\n      }, this);\n      this._listeners_ = {};\n    }\n  },\n\n  /**\n   * 触发自身的一个事件\n   * @param {string} name 事件名称\n   * @param {object} data 传递的对象\n   * @param {string} canBubble 能否冒泡(只在代理 dom 对象时有效)\n   * @param {object} cancelAble 能否取消(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  emit: function (name, data, canBubble, cancelAble) {\n    if (this._isNative_) {\n      return this._emitNativeEvent(name, data, canBubble, cancelAble);\n    }\n    if (!this._listeners_[name]) return;\n    let stopPropagation = false;\n    this._listeners_[name].forEach(function (handler) {\n      let rs = handler.call(this._target_, data);\n      if (rs === false) stopPropagation = true;\n    }, this);\n    return stopPropagation;\n  },\n\n  /**\n   * 添加 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件\n   * @returns {void} 无返回\n   */\n  _addNativeEventListener: function (name, listener, capture) {\n    this._target_.addEventListener(name, listener, capture);\n    //如果存在已注册的自定义 “组合事件”\n    let descriptor = EventEmitter._events[name];\n    if (descriptor) {\n      descriptor.addListener = descriptor.addListener || descriptor.on;\n      descriptor.addListener(this, name, listener, capture);\n    }\n  },\n\n  /**\n   * 移除 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件\n   * @returns {void} 无返回\n   */\n  _removeNativeEventListener: function (name, listener, capture) {\n    this._target_.removeEventListener(name, listener, capture);\n    //如果存在已注册的自定义 “组合事件”\n    let descriptor = EventEmitter._events[name];\n    if (descriptor) {\n      descriptor.removeListener = descriptor.removeListener || descriptor.off;\n      descriptor.removeListener(this, name, listener, capture);\n    }\n  },\n\n  /**\n   * 触发 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {object} data 传递的对象\n   * @param {string} canBubble 能否冒泡\n   * @param {object} cancelAble 能否取消\n   * @returns {void} 无返回\n   */\n  _emitNativeEvent: function (name, data, canBubble, cancelAble) {\n    let event = document.createEvent('HTMLEvents');\n    event.initEvent(name, canBubble, cancelAble);\n    utils.copy(data, event, ['data']);\n    event.data = data;\n    return this._target_.dispatchEvent(event);\n  }\n\n});\n\n//最多添加多少个 listener\nEventEmitter._maxListeners = 10;\n\n//所有自定义事件\nEventEmitter._events = [];\n\n/**\n * 注册自定义事件(只在代理 dom 对象时有效)\n * @param {object} descriptor 事件定义\n * @returns {void} 无返回\n */\nEventEmitter.register = function (descriptor) {\n  let names = descriptor.name;\n  if (!names) return;\n  if (!utils.isArray(names)) names = names.split(',');\n  names.forEach(function (name) {\n    this._events[name] = descriptor;\n  }, this);\n};\n\nmodule.exports = EventEmitter;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/events/index.js","const Compiler = require('./compiler');\nconst Directive = require('./directive');\nconst Expression = require('./expression');\nconst Template = require('./template');\nconst directives = require('./directives/');\n\nTemplate.Template = Template;\nTemplate.Compiler = Compiler;\nTemplate.Directive = Directive;\nTemplate.directives = directives;\nTemplate.Expression = Expression;\n\nmodule.exports = Template;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/index.js","const Class = require('cify');\nconst Directive = require('./directive');\nconst utils = require('ntils');\nconst Expression = require('./expression');\nconst commonDirectives = require('./directives');\n\nconst DEFAULT_PREFIX = 'm';\n\n/**\n * 模板编译器\n * 可以通过指定「前缀」或「指令集」构建实例\n */\nconst Compiler = new Class({\n\n  /**\n   * 构造一个编译器\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function (options) {\n    options = options || {};\n    this.prefix = options.prefix || DEFAULT_PREFIX;\n    this.elementDirectives = {};\n    this.attributeDirectives = {};\n    this.registerDirectives(commonDirectives);\n    this.registerDirectives(options.directives);\n  },\n\n  /**\n   * 添加指令\n   * @param {Object} directives 指令集 \n   * @returns {void} 无返回\n   */\n  registerDirectives: function (directives) {\n    utils.each(directives, function (name, directive) {\n      name = name.replace(/([A-Z])/g, '-$1');\n      if (name[0] == '-') name = name.slice(1);\n      let fullName = directive.options.prefix === false ?\n        name : `${this.prefix}:${name}`;\n      if (directive.options.type == Directive.TE) {\n        this.elementDirectives[fullName.toUpperCase()] = directive;\n      } else {\n        this.attributeDirectives[fullName] = directive;\n      }\n    }, this);\n  },\n\n  /**\n   * 解析要 attr 指令信息\n   * @param {string} attrName 要解析的名称字符串\n   * @returns {Object} 解析后的对象\n   */\n  _parseAttrInfo: function (attrName) {\n    let parts = attrName.toLowerCase().split(':');\n    let info = {};\n    if (parts.length > 1) {\n      info.name = `${parts[0]}:${parts[1]}`;\n      info.decorates = parts.slice(2);\n    } else {\n      info.name = parts[0];\n      info.decorates = [];\n    }\n    return info;\n  },\n\n  /**\n   * 创建一个指令实例\n   * @param {Directive} Directive 指令类\n   * @param {Object} options 指令构建选项\n   * @returns {Directive} 指令实例\n   */\n  _createDirectiveInstance: function (Directive, options) {\n    options.compiler = this;\n    options.prefix = this.prefix;\n    return new Directive(options);\n  },\n\n  /**\n   * 初始化一个编译完成的 handler\n   * @param {function} handler 编译后的的模板函数\n   * @returns {void} 无返回\n   */\n  _bindHandler: function (handler) {\n    //排序 directives\n    handler.directives = handler.directives.sort(function (a, b) {\n      return b.level - a.level;\n    });\n    //初始化 directives\n    let boundDirectives = [];\n    utils.each(handler.directives, function (index, directive) {\n      directive.index = index;\n      directive.bind();\n      boundDirectives.push(directive);\n      //移除完成绑定的指令对应的 attribute\n      if (directive.remove !== false && directive.attribute) {\n        directive.node.removeAttribute(directive.attribute.name);\n      }\n      //如果遇到一个「终态」指令，停止向下初始化\n      if (directive.final) {\n        return handler.final = true;\n      }\n    }, this);\n    handler.directives = boundDirectives;\n  },\n\n  /**\n   * 编译一个元素本身\n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileElement: function (handler, node) {\n    let ElementDirective = this.elementDirectives[node.nodeName.toUpperCase()];\n    if (!ElementDirective) return;\n    handler.directives.push(this._createDirectiveInstance(ElementDirective, {\n      handler: handler,\n      node: node\n    }));\n  },\n\n  /**\n   * 编译一个元素所有 attributes \n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileAttributes: function (handler, node) {\n    utils.toArray(node.attributes).forEach(function (attribute) {\n      let attrInfo = this._parseAttrInfo(attribute.name);\n      let AttrDirective = this.attributeDirectives[attrInfo.name] ||\n        this.attributeDirectives['*'];\n      if (!AttrDirective) return;\n      let directiveOptions = AttrDirective.options;\n      handler.directives.push(this._createDirectiveInstance(AttrDirective, {\n        handler: handler,\n        node: node,\n        attribute: attribute,\n        expression: directiveOptions.literal ?\n          attribute.value : new Expression(attribute.value, directiveOptions.mixed),\n        decorates: attrInfo.decorates\n      }));\n    }, this);\n  },\n\n  /**\n   * 编译所有子结点\n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileChildren: function (handler, node) {\n    if (handler.final) return;\n    utils.toArray(node.childNodes).forEach(function (childNode) {\n      if (childNode._compiled_) return;\n      let childHandler = this.compile(childNode);\n      childHandler.parent = this;\n      handler.children.push(childHandler);\n    }, this);\n  },\n\n  /**\n   * 编译一个模板\n   * @param {HTMLNode} node 模板根元素\n   * @param {Object} options 选项\n   * @returns {function} 模板函数\n   */\n  compile: function (node, options) {\n    if (!node) {\n      throw new Error('Invalid node for compile');\n    }\n    node._compiled_ = true;\n    options = options || {};\n    //定义编译结果函数\n    let handler = function (scope) {\n      if (utils.isNull(scope)) scope = {};\n      handler.directives.forEach(function (directive) {\n        directive.scope = scope;\n        directive.execute(scope);\n      }, this);\n      handler.children.forEach(function (childHandler) {\n        childHandler(scope);\n      }, this);\n    };\n    //--\n    handler.dispose = function () {\n      handler.directives.forEach(function (directive) {\n        directive.unbind();\n      }, this);\n      handler.children.forEach(function (childHandler) {\n        childHandler.dispose();\n      }, this);\n    };\n    handler.node = node;\n    //定义 children & directives \n    handler.directives = [];\n    handler.children = [];\n    //编译相关指令\n    if (options.element !== false) this._compileElement(handler, node);\n    if (options.attribute !== false) this._compileAttributes(handler, node);\n    this._bindHandler(handler);\n    if (options.children !== false) this._compileChildren(handler, node);\n    //返回编译后函数\n    return handler;\n  }\n\n});\n\nmodule.exports = Compiler;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/compiler.js","const Class = require('cify');\nconst utils = require('ntils');\nconst Expression = require('./expression');\n\n/**\n * 指令定义工场函数\n * @param {Object} classOptions 选项\n * @returns {Directive} 指令类\n */\nfunction Directive(classOptions) {\n  //处理指令选项\n  classOptions = classOptions || {};\n  classOptions.type = classOptions.type || Directive.TA;\n  classOptions.level = classOptions.level || Directive.LG;\n\n  //生成指令类\n  const DirectiveClass = new Class({\n\n    $extends: classOptions,\n    //指令构建函数\n    constructor: function (instanceOptions) {\n      utils.copy(instanceOptions, this);\n    },\n    //挂载实例上的 options\n    options: classOptions,\n    //挂载实例核心方法\n    bind: classOptions.bind || utils.noop,\n    execute: classOptions.execute || function (scope) {\n      this.scope = scope;\n      if (this.options.type === Directive.TE) {\n        return this.update();\n      }\n      let newValue = this.options.literal ?\n        this.attribute.value : this.expression.execute(scope);\n      if (!utils.deepEqual(this._value_, newValue)) {\n        this.update(newValue, this._value_);\n        this._value_ = newValue;\n      }\n    },\n    update: classOptions.update || utils.noop,\n    unbind: classOptions.unbind || utils.noop,\n    //挂载指令常用的类型\n    utils: utils,\n    Expression: Expression\n  });\n  //向指令类添加「指令定义信息」\n  DirectiveClass.options = classOptions;\n  utils.setPrototypeOf(DirectiveClass, classOptions);\n  return DirectiveClass;\n}\n\n//指令类型\nDirective.TA = 'A';\nDirective.TE = 'E';\n\n//指令级别\nDirective.LP = 3000;  //prevent\nDirective.LS = 2000;  //statement\nDirective.LE = 1000;  //eleemtn\nDirective.LG = 0;     //general\nDirective.LA = -1000; //any attribute\nDirective.LC = -2000; //cloak\n\nmodule.exports = Directive;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directive.js","const Class = require('cify');\nconst utils = require('ntils');\n\n/**\n * 表达式类型，将字符串构析为可执行表达式实例\n */\nconst Expression = new Class({\n\n  /**\n   * 通过字符串构造一个表达式实例\n   * @param {string} code 代码字符串\n   * @param {boolean} mix 是否是混合代码\n   * @returns {void} 无返回\n   */\n  constructor: function (code, mix) {\n    this.func = mix ?\n      this._compileMixedCode(code) :\n      this._compileCode(code);\n  },\n\n  /**\n   * 编译普通表达式代码\n   * @param {string} code 代码字符串\n   * @returns {function} 编辑后的函数\n   */\n  _compileCode: function (code) {\n    code = this._escapeEOL(this._wrapCode(code));\n    return this._createFunction(code);\n  },\n\n  /**\n   * 编辑混合的表达式代码\n   * @param {string} code 代码字符串\n   * @returns {function} 编辑后的函数\n   */\n  _compileMixedCode: function (code) {\n    let statements = this._parseMixedCode(code);\n    code = this._escapeEOL(statements.join('+'));\n    return this._createFunction(code);\n  },\n\n  /**\n   * 通过符串代码创建一个可执行函数\n   * @param {string} code 代码字符串\n   * @returns {function} 创建的函数\n   */\n  _createFunction: function (code) {\n    let func = new Function('utils', 'scope', 'with(scope){return ' + code + '}');\n    return func.bind(null, utils);\n  },\n\n  /**\n   * 解析混合代码字符串\n   * @param {string} code 混合代码字符串\n   * @returns {Array} 解析后的「token」列表\n   */\n  _parseMixedCode: function (code) {\n    let index = 0, length = code.length;\n    let token = '', isExpr = false, tokens = [];\n    while (index <= length) {\n      let char = code[index++];\n      let nextChar = code[index];\n      if (utils.isNull(char)) {\n        if (token.length > 0) {\n          tokens.push('\"' + this._escapeCode(token) + '\"');\n        }\n        token = '';\n        isExpr = false;\n      } else if (!isExpr && char + nextChar == '{{') {\n        if (token.length > 0) {\n          tokens.push('\"' + this._escapeCode(token) + '\"');\n        }\n        token = '';\n        isExpr = true;\n        index++;\n      } else if (isExpr && char + nextChar == '}}') {\n        if (token.length > 0) {\n          tokens.push(this._wrapCode(token));\n        }\n        token = '';\n        isExpr = false;\n        index++;\n      } else {\n        token += char;\n      }\n    }\n    return tokens;\n  },\n\n  /**\n   * 转义处理代码字符串\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _escapeCode: function (code) {\n    return code.replace(/\"/, '\\\\\"').replace('\\r\\n', '\\\\r\\\\n').replace('\\n', '\\\\n');\n  },\n\n  /**\n   * 转义换行符\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _escapeEOL: function (code) {\n    return code.replace(/\\n/gm, '\\\\\\n');\n  },\n\n  /**\n   * 通过闭包和 try/cache 包裹代码\n   * 将模板中错误的代码直接显示在「模板中用到的位置」，更易于定位错误。\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _wrapCode: function (code) {\n    return '((function(){try{return (' + code + ')}catch(err){console.error(err);return err;}})())';\n  },\n\n  /**\n   * 通过 scope 对象执行表达式\n   * @param {Object} scope 上下文对象\n   * @returns {Object} 执行结果\n   */\n  execute: function (scope) {\n    if (utils.isNull(scope)) {\n      scope = {};\n    }\n    return this.func.call(scope, scope);\n  }\n\n});\n\nmodule.exports = Expression;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/expression.js","module.exports = {\n  '#text': require('./text'),\n  'each': require('./each'),\n  'if': require('./if'),\n  'prop': require('./prop'),\n  'attr': require('./attr'),\n  'on': require('./on'),\n  'html': require('./inner-html'),\n  'text': require('./inner-text'),\n  'prevent': require('./prevent'),\n  'id': require('./id'),\n  'cloak': require('./cloak'),\n  'show': require('./show'),\n  'model': require('./model'),\n  '*': require('./attribute') //处理所有未知 attr\n};\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/index.js","const Directive = require('../directive');\nconst Expression = require('../expression');\n\n\nmodule.exports = new Directive({\n  type: Directive.TE,\n  prefix: false,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.expr = new Expression(this.node.nodeValue, true);\n    this.node.nodeValue = '';\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n    let newValue = this.expr.execute(scope);\n    if (this.node.nodeValue !== newValue) {\n      this.node.nodeValue = newValue;\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/text.js","const Directive = require('../directive');\nconst utils = require('ntils');\nconst Scope = require('../scope');\n\nmodule.exports = new Directive({\n  level: Directive.LS + 1, //比 if 要高一个权重\n  final: true,\n  literal: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.mountNode = document.createTextNode('');\n    this.node.parentNode.insertBefore(this.mountNode, this.node);\n    //虽然，bind 完成后，也会进行 attribute 的移除，\n    //但 each 指令必须先移除，否再进行 item 编译时 each 还会生效\n    this.node.removeAttribute(this.attribute.name);\n    this.node.parentNode.removeChild(this.node);\n    this.parseExpr();\n    this.eachItems = {};\n  },\n\n  parseExpr: function () {\n    this.eachType = this.attribute.value.indexOf(' in ') > -1 ? 'in' : 'of';\n    let tokens = this.attribute.value.split(' ' + this.eachType + ' ');\n    let fnText = `with(scope){utils.each(${tokens[1]},fn.bind(this,${tokens[1]}))}`;\n    this.each = new Function('utils', 'scope', 'fn', fnText).bind(null, this.utils);\n    let names = tokens[0].split(',').map(function (name) {\n      return name.trim();\n    });\n    if (this.eachType == 'in') {\n      this.keyName = names[0];\n      this.valueName = names[1];\n    } else {\n      this.keyName = names[1];\n      this.valueName = names[0];\n    }\n  },\n\n  execute: function (scope) {\n    let currentEachKeys = [];\n    let itemsFragment = document.createDocumentFragment();\n    let self = this;\n    this.each(scope, function (eachTarget, key) {\n      //创建新 scope，必须选创建再设置 prototype 或采用定义「属性」的方式\n      //因为指令参数指定的名称有可能和 scope 原有变量冲突\n      //将导致针对 watch 变量的赋值，从引用发循环\n      let newScope = new Scope(this.scope);\n      if (self.keyName) {\n        Object.defineProperty(newScope, self.keyName, {\n          get() { return key; }\n        });\n      }\n      //value 采用「属性」进行代理，否则将会使「双向」绑定无把回设值\n      if (self.valueName) {\n        Object.defineProperty(newScope, self.valueName, {\n          get() { return eachTarget[key]; },\n          set(value) { eachTarget[key] = value; }\n        });\n      }\n      let oldItem = this.eachItems[key];\n      if (oldItem) {\n        oldItem.handler(newScope);\n      } else {\n        let newItem = {};\n        //创建新元素\n        newItem.node = this.node.cloneNode(true);\n        itemsFragment.appendChild(newItem.node);\n        newItem.handler = this.compiler.compile(newItem.node);\n        newItem.handler(newScope);\n        this.eachItems[key] = newItem;\n      }\n      currentEachKeys.push(key);\n    }.bind(this));\n    utils.each(this.eachItems, (key, item) => {\n      if (currentEachKeys.some(k => k == key)) return;\n      if (item.node.parentNode) {\n        item.node.parentNode.removeChild(item.node);\n      }\n      delete this.eachItems[key];\n    }, this);\n    if (itemsFragment.childNodes.length > 0) {\n      this.mountNode.parentNode.insertBefore(itemsFragment, this.mountNode);\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/each.js","const utils = require('ntils');\n\nconst Scope = function (parent, props) {\n  //新的 scope 因为「继承」了 _observer_ \n  //所以在新 scope 上进行双向绑定时，将将值成功回写\n  //如果有天不须用 utils.cteate 继承法，需要注意 _observer_ \n  //或在新 scope 上 defineProperty 代理 parentScope\n  let scope = utils.create(parent);\n  utils.copy(props, scope);\n  //将 func 绑定到原 scope 上;\n  utils.each(parent, (key, value) => {\n    if (!utils.isFunction(value)) return;\n    scope[key] = value.bind(parent);\n  });\n  return scope;\n};\n\nmodule.exports = Scope;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/scope.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  level: Directive.LS,\n  final: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.mountNode = document.createTextNode('');\n    this.node.parentNode.insertBefore(this.mountNode, this.node);\n    //虽然，bind 完成后，也会进行 attribute 的移除，\n    //但 if 指令必须先移除，否再进行 item 编译时 if 还会生效\n    this.node.removeAttribute(this.attribute.name);\n    this.node.parentNode.removeChild(this.node);\n  },\n\n  execute: function (scope) {\n    let newValue = this.expression.execute(scope);\n    if (newValue) {\n      //如果新计算的结果为 true 才执行 \n      this._handler = this._handler || this.compiler.compile(this.node);\n      this._handler(scope);\n      let node = this.node.$substitute || this.node;\n      if (!node.parentNode) {\n        this.mountNode.parentNode.insertBefore(node, this.mountNode);\n      }\n    } else {\n      let node = this.node.$substitute || this.node;\n      if (node.parentNode) node.parentNode.removeChild(node);\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/if.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (value) {\n    let target = this.node.$target || this.node;\n    target[this.decorates[0]] = value;\n  }\n  // execute: function (scope) {\n  //   this.scope = scope;\n  //   let newValue = this.expression.execute(scope);\n  //   let target = this.node.$target || this.node;\n  //   target[this.decorates[0]] = newValue;\n  // }\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/prop.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (value) {\n    let target = this.node.$target || this.node;\n    if (target.setAttribute) {\n      target.setAttribute(this.decorates[0], value);\n    } else {\n      target[this.decorates[0]] = value;\n    }\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/attr.js","const Directive = require('../directive');\nconst EventEmitter = require('../../events');\nconst Scope = require('../scope');\n\nmodule.exports = new Directive({\n  literal: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    let attrValue = this.attribute.value || '';\n    if (attrValue.indexOf('(') < 0 && attrValue.indexOf(')') < 0) {\n      attrValue += '($event)';\n    }\n    this.expr = new this.Expression(attrValue);\n    let eventTarget = this.node.$target || this.node;\n    this.emiter = new EventEmitter(eventTarget);\n    this.emiter.addListener(this.decorates[0], function (event) {\n      if (this.utils.isNull(this.scope)) return;\n      this.expr.execute(new Scope(this.scope, {\n        $event: event\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/on.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (newValue) {\n    this.node.innerHTML = newValue;\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/inner-html.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (newValue) {\n    this.node.innerText = newValue;\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/inner-text.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  level: Directive.LP,\n  final: true\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/prevent.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  literal: true,\n\n  update: function (id) {\n    if (id in this.scope) {\n      throw new Error('Conflicting component id `' + id + '`');\n    }\n    this.scope[id] = this.node.$target || this.node;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/id.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  level: Directive.LC,\n  literal: true,\n  prefix: false,\n\n  bind: function () {\n    this.node.removeAttribute(this.attribute.name);\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/cloak.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (value) {\n    this.node.style.display = value ? '' : 'none';\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/show.js","const SelectDirective = require('./select');\nconst EditableDirective = require('./editable');\nconst InputDirective = require('./input');\nconst RadioDirective = require('./radio');\nconst CheckboxDirective = require('./checkbox');\nconst PropDirective = require('./prop');\n\nconst Directive = function (options) {\n  let node = options.node;\n  let tagName = node.tagName;\n  if (options.decorates[0]) {\n    return new PropDirective(options);\n  } else if (tagName == 'INPUT') {\n    let type = node.getAttribute('type');\n    if (type == 'radio') {\n      return new RadioDirective(options);\n    } else if (type == 'checkbox') {\n      return new CheckboxDirective(options);\n    } else {\n      return new InputDirective(options);\n    }\n  } else if (tagName == 'TEXTAREA') {\n    return new InputDirective(options);\n  } else if (tagName == 'SELECT') {\n    return new SelectDirective(options);\n  } else if (node.isContentEditable) {\n    return new EditableDirective(options);\n  } else {\n    throw new Error(`Directive \\`model\\` cannot be used on \\`${tagName}\\``);\n  }\n};\n\n//手动添加 classOptions\nDirective.options = {\n  level: Directive.LA\n};\n\nmodule.exports = Directive;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/model/index.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n  final: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.node.removeAttribute(this.attribute.name);\n    this._handler = this.compiler.compile(this.node);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      let selectedOptions = this.node.selectedOptions;\n      let value = this.node.multiple\n        ? [].slice.call(selectedOptions).map(function (option) {\n          return option.value;\n        }, this)\n        : selectedOptions[0].value;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n    this._handler(scope);\n    let value = this.expression.execute(scope);\n    if (!this.utils.isArray(value)) value = [value];\n    [].slice.call(this.node.options).forEach(function (option) {\n      option.selected = value.indexOf(option.value) > -1;\n    }, this);\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/model/select.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('input', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.innerHTML\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    let value = this.expression.execute(scope);\n    if (this.node.innerHTML !== value) {\n      this.node.innerHTML = value;\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/model/editable.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('input', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    let value = this.expression.execute(scope);\n    if (this.node.value !== value) {\n      this.node.value = value;\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/model/input.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n    let value = this.expression.execute(scope);\n    this.node.checked = value == this.node.value;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/model/radio.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      let value = this.expression.execute(this.scope);\n      if (this.utils.isArray(value) && this.node.checked) {\n        value.push(this.node.value);\n      } else if (this.utils.isArray(value) && !this.node.checked) {\n        let index = value.indexOf(this.node.value);\n        value.splice(index, 1);\n      } else {\n        this.backExpr.execute(new Scope(this.scope, {\n          _value_: this.node.checked\n        }));\n      }\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n    let value = this.expression.execute(scope);\n    if (this.utils.isArray(value)) {\n      this.node.checked = value.indexOf(this.node.value) > -1;\n    } else {\n      this.node.checked = value;\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/model/checkbox.js","const Directive = require('../../directive');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.target = this.node.$target;\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.bindProp = this.decorates[0];\n    if (!this.target) {\n      throw new Error(`Directive \\`model:${this.bindProp}\\` cannot be used on \\`${this.node.tagName}\\``);\n    }\n    this.watcher = this.target.$watch(this.bindProp, (value) => {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: value\n      }));\n    });\n  },\n\n  unbind: function () {\n    this.target.$unWatch(this.watcher);\n  },\n\n  update: function (value) {\n    this.target[this.bindProp] = value;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/model/prop.js","const Directive = require('../directive');\n\n/**\n * 通用的 attribute 指令\n * 用于所有 attribute 的处理\n * 例如:\n *  <div attr1=\"{{expr1}}\" {{expr2}} {{attr3}}=\"{{expr3}}\">\n *  </div>\n */\nmodule.exports = new Directive({\n  level: Directive.LA,\n  prefix: false,\n  literal: true,\n  remove: false,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.computedName = this.attribute.name;\n    this.computedValue = this.attribute.value;\n    this.nameExpr = new this.Expression(this.attribute.name, true);\n    this.valueExpr = new this.Expression(this.attribute.value, true);\n  },\n\n  execute: function (scope) {\n    let target = this.node.$target || this.node;\n    let newComputedName = this.nameExpr.execute(scope);\n    if (this.computedName !== newComputedName) {\n      //移除旧名称\n      if (target.removeAttribute) {\n        target.removeAttribute(this.computedName);\n      }\n      //设置新名称\n      this.computedName = newComputedName;\n      if (!this.utils.isNull(this.computedName) && this.computedName.length > 0) {\n        if (target.setAttribute) {\n          target.setAttribute(this.computedName, this.computedValue || '');\n        }\n      }\n    }\n    let newComputeValue = this.valueExpr.execute(scope);\n    if (this.computedValue !== newComputeValue) {\n      this.computedValue = newComputeValue;\n      if (target.setAttribute) {\n        target.setAttribute(this.computedName, this.computedValue || '');\n      } else {\n        target[this.computedName] = this.computedValue;\n      }\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/directives/attribute.js","const Class = require('cify');\nconst Observer = require('../observer');\nconst EventEmitter = require('../events');\nconst Compiler = require('./compiler');\n\n/**\n * 模板类\n * 可能通过 element 作为参数，创建一个模板实例\n */\nconst Template = new Class({\n\n  $extends: EventEmitter,\n\n  /**\n   * 构建一个模板板实例\n   * @param {HTMLNode} element HTML 元素\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function (element, options) {\n    options = options || {};\n    EventEmitter.call(this);\n    this.options = options;\n    this.element = element;\n    this.compiler = options.compiler || new Compiler(options);\n    this.render = this.compiler.compile(this.element);\n    this.update = this.update.bind(this);\n    this._update = this._update.bind(this);\n    this._updateTimer = 0;\n  },\n\n  /**\n   * 更新当前模板 (会过滤不必要的更新)\n   * @returns {void} 无返回\n   */\n  update: function () {\n    if (this._updateTimer) {\n      clearTimeout(this._updateTimer);\n      this._updateTimer = null;\n    }\n    this._updateTimer = setTimeout(this._update, 0);\n  },\n\n  /**\n   * 更新当前模板内部方法 \n   * @returns {void} 无返回\n   */\n  _update: function () {\n    if (!this._updateTimer || !this.observer) return;\n    this.emit('update', this);\n    this.render(this.observer.target);\n    this._onBind();\n  },\n\n  /**\n   * 在绑定成功时\n   * @returns {void} 无返回\n   */\n  _onBind: function () {\n    if (this._bound) return;\n    this._bound = true;\n    this.emit('bind', this);\n  },\n\n  /**\n   * 将模板绑定到一个 scope\n   * @param {Object} scope 绑定的上下文对象\n   * @param {boolean} disableFirst 是否禁用第一次的自动渲染\n   * @returns {void} 无返回\n   */\n  bind: function (scope, disableFirst) {\n    if (!scope) return;\n    this.unbind();\n    this.observer = new Observer(scope, {\n      root: this.options.root\n    });\n    scope.$self = scope;\n    this.observer.on('change', this.update);\n    if (disableFirst) {\n      this._onBind();\n    } else {\n      this.update();\n    }\n  },\n\n  /**\n   * 解绑定\n   * @returns {void} 无返回\n   */\n  unbind: function () {\n    if (!this.observer) return;\n    this.observer.removeListener('change', this.update);\n    this.observer.clearReference();\n    this.observer = null;\n  },\n\n  /**\n   * 释放\n   * @returns {void} 无返回\n   */\n  dispose: function () {\n    this.unbind();\n    this.render.dispose();\n  }\n\n});\n\nmodule.exports = Template;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/template/template.js","const Component = require('./component');\nconst components = require('./components');\nconst directives = require('../template').directives;\n\nComponent.components = components;\nComponent.Component = Component;\n\nComponent.component = function (name, component) {\n  if (!component) return components[name];\n  components[name] = component;\n};\n\nComponent.directive = function (name, directive) {\n  if (!directive) return directives[name];\n  directives[name] = directive;\n};\n\nmodule.exports = Component;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/component/index.js","const Class = require('cify');\nconst Template = require('../template');\nconst Watcher = require('../watcher');\nconst utils = require('ntils');\nconst EventEmitter = require('../events');\nconst Observer = require('../observer');\nconst ComponentDirective = require('./component-directive');\n\n/**\n * 组件类\n * 用于定义一个新的组件\n * @param {Object} classOpts 类选项\n * @returns {Component} 组件类\n */\nfunction Component(classOpts) {\n\n  //处理组件选项\n  classOpts = classOpts || {};\n\n  //处理「继承」，目前的机制，只能用「合并类选项」\n  let mixes = classOpts.mixes;\n  delete classOpts.mixes;\n  if (mixes && !utils.isArray(mixes)) {\n    mixes = [mixes];\n  } else {\n    mixes = [];\n  }\n  let extendComponent = classOpts.extend || Component;\n  delete classOpts.extend;\n  //extend 会覆盖 mixes 中的同名成员\n  mixes.push(extendComponent);\n  //classOpts 会覆盖 extend 或 mixes 中的同名成员\n  mixes.push(classOpts);\n  let mixedClassOpts = {};\n  mixes.forEach(function (mixItem) {\n    if (mixItem instanceof Component ||\n      mixItem == Component) {\n      mixItem = mixItem.$options || {};\n    }\n    utils.mix(mixedClassOpts, mixItem);\n  });\n  classOpts = mixedClassOpts;\n\n  /**\n   * 定义组件类\n   * 可以通过 new ComponentClass() 创建组件实例\n   */\n  const ComponentClass = new Class({\n    $extends: extendComponent,\n\n    /**\n     * 组件类构造函数\n     * @param {object} instanceOpts 实例选项\n     * @returns {void} 无返回\n     */\n    constructor: function (instanceOpts) {\n      if (this == window) return new this.$class(instanceOpts);\n      EventEmitter.call(this);\n      instanceOpts = instanceOpts || {};\n      //创建组件实例时可以给实例添加成员\n      utils.each(instanceOpts, (key, value) => {\n        if (key in this) return;\n        this[key] = value;\n      });\n      this._onTemplateUpdate_ = this._onTemplateUpdate_.bind(this);\n      this._createdData_(classOpts.data);\n      this._createProperties_(classOpts.properties || classOpts.props);\n      this._createWatches_(classOpts.watches || classOpts.watch);\n      this.$directives = this.$directives || {};\n      this._importDirectives_(classOpts.directives);\n      this.$components = this.$components || {};\n      this._importComponents_(require('./components'));\n      this._importComponents_({\n        'self': ComponentClass\n      });\n      this._importComponents_(classOpts.components);\n      utils.defineFreezeProp(this, '$children', []);\n      if (instanceOpts.parent) this.$setParent(instanceOpts.parent);\n      this.$callHook('onInit', [instanceOpts]);\n      Observer.observe(this);\n      if (classOpts.element) {\n        this.$mount();\n      } else {\n        this.$compile();\n      }\n    },\n\n    /**\n     * 设定父组件\n     * @param {Object} parent 父组件\n     * @returns {void} 无返回\n     */\n    $setParent: function (parent) {\n      if (this.$parent === parent) return;\n      if (this.$parent) {\n        this.$parent.$removeChild(this);\n      }\n      if (parent) {\n        parent.$addChild(this);\n      }\n    },\n\n    /**\n     * 添加子组件\n     * @param {Object} child 子组件\n     * @returns {void} 无返回\n     */\n    $addChild: function (child) {\n      if (!(child instanceof Component)) return;\n      this.$children.push(child);\n      utils.defineFreezeProp(child, '$parent', this);\n      utils.defineFreezeProp(child, '$root', this.$root || this);\n    },\n\n    /**\n     * 移除子组件\n     * @param {Object} child 子组件\n     * @returns {void} 无返回\n     */\n    $removeChild: function (child) {\n      let index = this.$children.indexOf(child);\n      this.$children.splice(index, 1);\n      utils.defineFreezeProp(child, '$parent', null);\n      //utils.defineFreezeProp(child, '$root', null);\n    },\n\n    /**\n     * 获取根组件, 为了能通过 polyfill 处理 IE8 暂不用这种方式\n     */\n    get $root() {\n      if (this.$parent) {\n        return this.$parent.$root;\n      } else {\n        return this;\n      }\n    },\n\n    /**\n     * 导入用到的子组件类\n     * @param {Object} components 引入的组件\n     * @returns {void} 无返回\n     */\n    _importComponents_: function (components) {\n      utils.each(components, function (name, component) {\n        if (!component) return;\n        this.$components[name] = component;\n        this.$directives[name] = new ComponentDirective({\n          name: name,\n          component: component,\n          parent: this\n        });\n      }, this);\n    },\n\n    /**\n     * 导入一个用到的指令\n     * @param {Object} directives 引入的指令\n     * @returns {void} 无返回\n     */\n    _importDirectives_: function (directives) {\n      utils.each(directives, function (name, directive) {\n        if (!directive) return;\n        this.$directives[name] = directive;\n      }, this);\n    },\n\n    /**\n     * 调用生命周期 hook\n     * @param {string} name 调用的 hook 名称\n     * @param {Array} args 调用 hook 的参数列表\n     * @returns {void} 无反回\n     */\n    $callHook: function (name, args) {\n      if (!utils.isFunction(this[name])) return;\n      this[name].apply(this, args || []);\n    },\n\n    /**\n     * 创建数据对象\n     * @param {Object} data 组件数据对象\n     * @returns {void} 无返回\n     */\n    _createdData_: function (data) {\n      if (utils.isFunction(data)) {\n        this.$data = data.call(this);\n      } else {\n        this.$data = data || {};\n      }\n      utils.each(this.$data, function (name) {\n        Object.defineProperty(this, name, {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            if (!this.$data) return;\n            return this.$data[name];\n          },\n          set: function (value) {\n            if (!this.$data) return;\n            this.$data[name] = value;\n          }\n        });\n      }, this);\n    },\n\n    /**\n     * 创建组件属性\n     * @param {Object} properties 属性定义对象\n     * @returns {void} 无返回\n     */\n    _createProperties_: function (properties) {\n      this.$properties = {};\n      utils.each(properties, function (name, descriptor) {\n        if (utils.isFunction(descriptor)) {\n          descriptor = {\n            get: descriptor\n          };\n        } else if (!utils.isObject(descriptor)) {\n          descriptor = {\n            value: descriptor\n          };\n        } else {\n          //不能直接用 descriptor，\n          //因为为会导到多个组件实例间的影响\n          descriptor = utils.copy(descriptor);\n        }\n        let hasGetterOrSetter = !!descriptor.get || !!descriptor.set;\n        if (!hasGetterOrSetter) {\n          descriptor.value = descriptor.value || null;\n          descriptor.get = function () {\n            return descriptor.value;\n          };\n          descriptor.set = function (value) {\n            descriptor.value = value;\n          };\n        }\n        Object.defineProperty(this, name, {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            if (!descriptor.get) {\n              throw new Error('Property `' + name + '` cannot be read');\n            }\n            return descriptor.get.call(this);\n          },\n          set: function (value) {\n            if (!descriptor.set) {\n              throw new Error('Property `' + name + '` cannot be written');\n            }\n            if (descriptor.test && !descriptor.test(value)) {\n              throw new Error('Invalid value `' + value + '` for property `' + name + '`');\n            }\n            descriptor.set.call(this, value);\n            if (this._observer_) {\n              this._observer_.emitChange({\n                path: name,\n                value: value\n              });\n            }\n          }\n        });\n        this.$properties[name] = descriptor;\n      }, this);\n    },\n\n    /**\n     * 创建监控\n     * 为什么用 watches 而不是 watchers 或其它？\n     * 因为，这里仅是「监控配置」并且是「复数」\n     * @param {Object} watches 监控定义对象\n     * @returns {void} 无返回\n     */\n    _createWatches_: function (watches) {\n      this._watchers_ = this._watchers_ || [];\n      utils.each(watches, function (name, handler) {\n        this.$watch(name, handler);\n      }, this);\n    },\n\n    /**\n     * 在模板发生更新时\n     * @returns {void} 无返回\n     */\n    _onTemplateUpdate_: function () {\n      this._watchers_.forEach(function (watcher) {\n        watcher.calc();\n      }, this);\n    },\n\n    /**\n     * 添加一个监控\n     * @param {string|function} path 计算函数或路径\n     * @param {function} handler 处理函数\n     * @returns {void} 无返回\n     */\n    $watch: function (path, handler) {\n      if (!utils.isFunction(handler)) return;\n      let calcer = path;\n      if (!utils.isFunction(path)) {\n        calcer = function () {\n          return utils.getByPath(this, path);\n        };\n      }\n      let watcher = new Watcher(calcer.bind(this), handler.bind(this));\n      this._watchers_.push(watcher);\n      return watcher;\n    },\n\n    /**\n     * 取消一个 watcher 对象\n     * @param {object} watcher 监控对象实例\n     * @returns {void} 无返回\n     */\n    $unWatch: function (watcher) {\n      let index = this._watchers_.findIndex(w => w === watcher);\n      this._watchers_.splice(index, 1);\n    },\n\n    /**\n     * 创建元素\n     * @returns {void} 无返回\n     */\n    _createElement_: function () {\n      if (this._created_) return;\n      this._created_ = true;\n      this.$callHook('onCreate');\n      utils.defineFreezeProp(this, '$element',\n        this.element || ComponentClass.$template.cloneNode(true));\n      if (!this.$element || this.$element.nodeName === '#text') {\n        throw new Error('Invalid component template');\n      }\n      this.$callHook('onCreated');\n    },\n\n    /**\n     * 编译自身模板并完成绑定\n     * @returns {void} 无返回\n     */\n    $compile: function () {\n      if (this._compiled_) return;\n      this._compiled_ = true;\n      this._createElement_();\n      utils.defineFreezeProp(this, '_template_', new Template(this.$element, {\n        directives: this.$directives,\n        root: true\n      }));\n      this._template_.bind(this);\n      this._template_.on('update', this._onTemplateUpdate_);\n      this._template_.on('bind', function () {\n        if (!this.deferReady) this.$callHook('onReady');\n      }.bind(this));\n    },\n\n    /**\n     * 向 DOM tree 中挂截组件\n     * @param {HTMLNode} mountNode 挂载点元素\n     * @param {append} append 是否 append 到挂载元素内\n     * @returns {void} 无返回 \n     */\n    $mount: function (mountNode, append) {\n      if (this._mounted_) return;\n      this.$compile();\n      this.$callHook('onMount');\n      if (mountNode) {\n        mountNode.$substitute = this.$element;\n        this.$element._mountNode = mountNode;\n        if (append) {\n          mountNode.appendChild(this.$element);\n        } else if (mountNode.parentNode) {\n          mountNode.parentNode.insertBefore(this.$element, mountNode);\n        }\n      }\n      this._mounted_ = true;\n      this._removed_ = false;\n      this.$callHook('onMounted');\n    },\n\n    /**\n     * 将组件添加到指定容器元素内\n     * @param {HTMLNode} node 容器元素\n     * @returns {void} 无返回 \n     */\n    $appendTo: function (node) {\n      this.$mount(node, true);\n    },\n\n    /**\n     * 移除组件\n     * @returns {void} 无返回\n     */\n    $remove: function () {\n      if (this._removed_ || !this._mounted_) return;\n      this.$callHook('onRemove');\n      if (this.$element.parentNode) {\n        this.$element.parentNode.removeChild(this.$element);\n      }\n      this._removed_ = true;\n      this._mounted_ = false;\n      this.$callHook('onRemoved');\n    },\n\n    /**\n     * 触发自身的一个事件并向上冒泡\n     * @param {string} name 事件名称\n     * @param {object} data 传递的对象\n     * @returns {void} 无返回\n     */\n    $dispatch: function (name, data) {\n      let stopPropagation = this.$emit(name, data);\n      if (!stopPropagation && this.$parent) {\n        this.$parent.$dispatch(name, data);\n      }\n    },\n\n    /**\n     * 触发自身的一个事件并向下广播\n     * @param {string} name 事件名称\n     * @param {object} data 传递的对象\n     * @returns {void} 无返回\n     */\n    $broadcast: function (name, data) {\n      let stopPropagation = this.$emit(name, data);\n      if (!stopPropagation && this.$children && this.$children.length > 0) {\n        this.$children.forEach(function (child) {\n          child.$broadcast(name, data);\n        }, this);\n      }\n    },\n\n    /**\n     * 释放组件\n     * @returns {void} 无返回\n     */\n    $dispose: function () {\n      this.$remove();\n      this._emitter_.off();\n      this.$children.forEach(function (child) {\n        child.$dispose();\n      }, this);\n      if (this.$parent) {\n        let index = this.$parent.$children.indexOf(this);\n        this.$parent.$children.splice(index, 1);\n      }\n      this.$callHook('onDispose');\n      if (this._compiled_) {\n        this._template_.unbind();\n      }\n      this.$callHook('onDisposed');\n      for (let key in this) {\n        delete this[key];\n      }\n      ['_observer_', '$element', '$children', '$parent', '_template_']\n      .forEach(function (key) {\n        delete this[key];\n      }, this);\n      utils.setPrototypeOf(this, null);\n    }\n\n  });\n\n  //保存类选项\n  ComponentClass.$options = classOpts;\n  ComponentClass.$template = utils.parseDom(classOpts.template);\n\n  //向 ComponentClass.prototype 上拷贝成员\n  utils.copy(classOpts, ComponentClass.prototype);\n  utils.copy(classOpts.methods, ComponentClass.prototype);\n\n  //使 ComponentClass instanceof Component === true \n  //IE9/10 下为 false，并且动态为 Component.prototype 添加的成员不会在 ComponentClass 上生效\n  utils.setPrototypeOf(ComponentClass, Component.prototype);\n\n  return ComponentClass;\n\n}\n\n//继承自 EventEmitter\nComponent.prototype = utils.create(EventEmitter.prototype);\n\n//组件扩展方法，简单封装 extends\nComponent.extend = function (classOpts) {\n  return new Component(classOpts);\n};\n\n//定义扩展方法\nComponent.prototype.extend = function (classOpts) {\n  classOpts = classOpts || {};\n  classOpts.extend = this;\n  return new Component(classOpts);\n};\n\n//创建实例的方法\nComponent.prototype.create = function (instanceOpts) {\n  return new this(instanceOpts);\n};\n\n//针对包括 element 组件类的启动方法\nComponent.prototype.start = function (instanceOpts) {\n  if (!this.$options || !this.$options.element) {\n    throw new Error('Start method cannot be called');\n  }\n  return this.create(instanceOpts);\n};\n\nmodule.exports = Component;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/component/component.js","const Template = require('../template');\nconst Directive = Template.Directive;\n\n/**\n * 创建一个组件指令\n * @param {object} options 选项\n * @returns {object} 组件指令\n */\nfunction ComponentDirective(options) {\n\n  return new Directive({\n    type: Directive.TE,\n    literal: true,\n    final: true,\n    level: Directive.LE,\n\n    bind: function () {\n      this.component = new options.component({\n        deferReady: true,\n        parent: options.parent || this.scope\n      });\n      this.handleAttrs();\n      this.node.$target = this.component;\n      this.handler = this.compiler.compile(this.node, {\n        element: false,\n        children: false\n      });\n      this.handleContents();\n      this.component.$mount(this.node);\n      if (this.node.parentNode) {\n        this.node.parentNode.removeChild(this.node);\n      }\n    },\n\n    handleAttrs: function () {\n      this.attrs = [].slice.call(this.node.attributes);\n      let directiveRegexp = new RegExp('^' + this.prefix + ':', 'i');\n      this.attrs.forEach(function (attr) {\n        if (directiveRegexp.test(attr.name)) return;\n        if (attr.name in this.component.$properties) return;\n        this.component.$element.setAttribute(attr.name, attr.value);\n        this.node.removeAttribute(attr.name);\n      }, this);\n    },\n\n    handleContents: function () {\n      this.placeHandlers = [];\n      let places = [].slice.call(\n        this.component.$element.querySelectorAll('[' + this.prefix + '\\\\:content]')\n      );\n      places.forEach(function (place) {\n        //将内容插入到指定的「位置」\n        let contents = null;\n        let selector = place.getAttribute(this.prefix + ':content');\n        if (!selector) {\n          contents = [].slice.call(this.node.childNodes);\n        } else {\n          contents = [].slice.call(this.node.querySelectorAll(selector));\n        }\n        if (!contents || contents.length < 1) return;\n        place.innerHTML = '';\n        contents.forEach(function (content) {\n          place.appendChild(content.cloneNode(true));\n        }, this);\n        //编译插入后的子「内容模板」\n        let handler = this.compiler.compile(place);\n        this.placeHandlers.push(handler);\n      }, this);\n    },\n\n    execute: function (scope) {\n      this.handler(scope);\n      if (!this._ready_) {\n        this._ready_ = true;\n        this.component.$callHook('onReady');\n      }\n      this.placeHandlers.forEach(function (handler) {\n        handler(scope);\n      }, this);\n    }\n\n  });\n}\n\nmodule.exports = ComponentDirective;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/component/component-directive.js","module.exports = {\n  View: require('./view')\n};\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/component/components/index.js","const Component = require('../component');\nconst utils = require('ntils');\n\n/**\n * 内置视图组件\n * 可以加载并显示其它组件，并可以指定「转场效果」\n */\nconst View = new Component({\n\n  template: '<div></div>',\n\n  properties: {\n\n    /**\n     * 显示到视图中的组件\n     */\n    component: {\n      test: function (value) {\n        if (!value) return false;\n        return value instanceof Component || utils.isString(value);\n      },\n      set: function (component) {\n        if (this._transitioning) return;\n        this._transitioning = true;\n        //如果 value 是字符串则尝试从 $parent.components 中获取组件类 \n        if (utils.isString(component)) {\n          if (this.$parent && this.$parent.$components) {\n            this.component = this.$parent.$components[component];\n          } else {\n            this.component = null;\n          }\n          return;\n        }\n        //声明新旧组件变量\n        let newComponentInstance = null;\n        let oldComponentInstance = this.componentInstance;\n        //创建新组件实例\n        if (utils.isFunction(component)) {\n          newComponentInstance = new component({\n            parent: this\n          });\n        } else {\n          component.$setParent(this);\n          newComponentInstance = component;\n        }\n        //通过转场控制器进行转场准备\n        this.transition.prep(newComponentInstance, oldComponentInstance);\n        //挂载新组件实例\n        newComponentInstance.$appendTo(this.$element);\n        //通过转场控制器进行转场\n        this.transition.go(newComponentInstance, oldComponentInstance, function () {\n          //触发相关事件\n          this.$emit('enter', newComponentInstance);\n          this.$emit('leave', oldComponentInstance);\n          //销毁旧组件实例\n          if (oldComponentInstance) {\n            oldComponentInstance.$dispose();\n          }\n          this._transitioning = false;\n        }.bind(this));\n        //暂存当前组件实例\n        this.componentInstance = newComponentInstance;\n      },\n      get: function () {\n        return this._Component;\n      }\n    },\n\n    /**\n     * 视图的转场控制对象\n     */\n    transition: {\n      get: function () {\n        return this._transition || View.transition;\n      },\n      set: function (transition) {\n        if (this._transitioning) return;\n        if (!transition || (\n          utils.isFunction(transition.prep) &&\n          utils.isFunction(transition.go)\n        )) {\n          if (this._transition && utils.isFunction(this._transition.clean)) {\n            this._transition.clean(this);\n          }\n          if (transition && utils.isFunction(transition.init)) {\n            transition.init(this);\n          }\n          this._transition = transition;\n        } else {\n          throw new Error('Invalid transition');\n        }\n      }\n    }\n  },\n\n  /**\n   * 切换到指定的组件\n   * @param {Component} component 组件\n   * @param {transition} transition 转场控制组件\n   * @returns {void} 无返回\n   */\n  switchTo: function (component, transition) {\n    if (transition) {\n      this.transition = transition;\n    }\n    this.component = component;\n  }\n\n});\n\n/**\n * 默认转场设置\n */\nView.transition = {\n  //init: function () { },\n  //clean: function () { },\n\n  /**\n   * 转场开始前的准备\n   * @param {Component} newComponent 新组件\n   * @param {Component} oldComponent 旧组件\n   * @returns {void} 无返回\n   */\n  prep: function (newComponent, oldComponent) {\n    if (oldComponent) oldComponent.$element.style.display = 'none';\n  },\n\n  /**\n   * 执行转场动画\n   * @param {Component} newComponent 新组件\n   * @param {Component} oldComponent 旧组件\n   * @param {Function} done 完成后的回调\n   * @returns {void} 无返回\n   */\n  go: function (newComponent, oldComponent, done) {\n    done();\n  }\n};\n\nmodule.exports = View;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit@3.0.15@mokit/lib/component/components/view.js","const Plugin = require('mokit-plugin');\nmodule.exports = new Plugin(function () {\n  return require('./router');\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-router@1.0.7@mokit-router/lib/index.js","const factory = function (thunk) {\n  function Plugin(opts) {\n    return typeof Plugin.entity === 'function' ?\n      new Plugin.entity(opts) : Plugin.entity;\n  }\n  Plugin.install = function (mokit) {\n    factory.mokit = mokit;\n    this.entity = thunk();\n    this.entity.install(mokit);\n  };\n  if (typeof mokit !== 'undefined') {\n    mokit.use(Plugin);\n  }\n  return Plugin;\n};\n\nmodule.exports = factory;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-plugin@1.0.5@mokit-plugin/index.js","const mokit = require('mokit-plugin').mokit;\nconst utils = mokit.utils;\nconst Class = mokit.Class;\nconst EventEmitter = mokit.EventEmitter;\nconst Component = mokit.Component;\nconst RouterBase = require('general-router');\nconst HashDirver = require('./drivers/hash');\nconst RouterView = require('./components/router-view');\nconst LinkDirective = require('./directives/link');\n\nconst ROOT_PATH = '/';\n\nconst Router = new Class({\n  $name: 'Router',\n  $extends: RouterBase,\n\n  /**\n   * 路由类构造函数\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function (options) {\n    this.$super();\n    options = options || utils.create(null);\n    if (options.view) this.view = options.view;\n    this.emitter = new EventEmitter(this);\n    this.dirvier = options.dirvier || new HashDirver(this);\n    this.dirvier.on('changed', this._onChanged.bind(this));\n  },\n\n  /**\n   *「路由视组」访问器\n   * @returns {RouterView} 路由视图组件实例\n   */\n  get view() {\n    return this._view;\n  },\n\n  /**\n   *「路由视组」设置器\n   * @param {RouterView} view 路由视图组件实例\n   * @returns {void} 无返回\n   */\n  set view(view) {\n    if (!(view instanceof RouterView)) {\n      throw new Error('Invalid RouterView');\n    }\n    this._view = view;\n    this._view._router = this;\n    this._onChanged(this.dirvier.get());\n  },\n\n  /**\n   * 路由发生变化时的处理函数\n   * @param {string} path 将要转到的路径\n   * @returns {void} 无返回\n   */\n  _onChanged: function (path) {\n    path = path || '/';\n    let fromPath = this.dirvier.get();\n    let toPath = this.resolveUri(path, fromPath);\n    toPath = path.split('?')[0].split('!')[0];\n    let routes = this.get(toPath);\n    if (!routes || routes.length < 1) return;\n    this.route = routes[0];\n    this.route.path = toPath;\n    this.route.query = this.parseQuery();\n    if (this.view) {\n      setTimeout(function () {\n        this.view.switchTo(this.route.component, this._transition);\n        this._transition = null;\n      }.bind(this), 0);\n    }\n    this.emitter.$emit('enter', toPath);\n    this.emitter.$emit('leave', fromPath);\n  },\n\n  /**\n   * 转到一个路径\n   * @param {string} path 将要转到的路径\n   * @param {Object} transition 转场动画\n   * @returns {void} 无返回\n   */\n  go: function (path, transition) {\n    this._transition = transition;\n    this.dirvier.set(path);\n  },\n\n  /**\n   * 映射路由配置\n   * @param {Object} map 路由配置\n   * @returns {void} 无返回\n   */\n  map: function (map) {\n    utils.each(map, function (pattern, item) {\n      if (utils.isString(item)) {\n        item = map[item];\n      }\n      if (item instanceof Component) {\n        item = {\n          component: item\n        };\n      }\n      if (!item) throw new Error('Invalid route `' + pattern + '`');\n      item.pattern = pattern;\n      this.addOne(item);\n    }, this);\n  },\n\n  /**\n   * 解析相对路径\n   * @param {string} toUri 原始路径\n   * @param {string} fromUri 参数路径\n   * @returns {string} 解析后的相关路径\n   */\n  resolveUri: function (toUri, fromUri) {\n    toUri = toUri || ROOT_PATH;\n    if (toUri[0] == ROOT_PATH) return toUri;\n    fromUri = fromUri || ROOT_PATH;\n    fromUri = fromUri.split('?')[0].split('#')[0];\n    let baseDir = fromUri.substring(0, fromUri.lastIndexOf(ROOT_PATH));\n    let uriParts = toUri.split('#')[0].split(ROOT_PATH);\n    let uriHash = toUri.split('#')[1];\n    let newUriParts = baseDir.length > 0 ? baseDir.split(ROOT_PATH) : [];\n    uriParts.forEach(function (part) {\n      if (part == '..') {\n        newUriParts.pop();\n      } else if (part && part != '.') {\n        newUriParts.push(part);\n      }\n    }, this);\n    return ROOT_PATH + newUriParts.join(ROOT_PATH) + (uriHash ? '#' + uriHash : '');\n  },\n\n  /**\n   * 解析查询字符串并生成查询参数对象\n   * @returns {Object} 查询参数对象\n   */\n  parseQuery: function () {\n    let queryString = (location.href.split('#')[1] || '').split('?')[1] || '';\n    let pairs = queryString.split('&');\n    let query = utils.create(null);\n    pairs.forEach(function (pair) {\n      let strs = pair.split('=');\n      query[strs[0]] = strs[1];\n    }, this);\n    return query;\n  },\n\n  /**\n   * 启动应用\n   * @param {Component} root 应用根组件类\n   * @param {element} element 挂载元素\n   * @returns {Component} 应用根件实例\n   */\n  start: function (root, element) {\n    this.app = new root({\n      _router: this\n    });\n    this.app.$appendTo(element);\n    return this.app;\n  }\n\n});\n\nRouter.HashDirver = HashDirver;\n\n/**\n * 路由插件安装方法\n * @param {Component} owner 组件类\n * @returns {void} 无返回\n */\nRouter.install = function (owner) {\n\n  owner.Router = this;\n\n  //为组件实例扩展 $router 属性\n  Object.defineProperty(owner.prototype, '$router', {\n    get: function () {\n      if (this instanceof RouterView) {\n        return this._router || (this.$parent && this.$parent.$router);\n      } else if (this.$parent) {\n        return this.$parent.$router;\n      } else if (!this.$parent) {\n        return this._router || this.router;\n      } else {\n        return null;\n      }\n    }\n  });\n\n  //为组件实例扩展 $route 属性\n  Object.defineProperty(owner.prototype, '$route', {\n    get: function () {\n      return this.$router && this.$router.route;\n    }\n  });\n\n  //添加全局组件 RouterView\n  owner.component('RouterView', RouterView);\n\n  //添加 link 指令\n  owner.directive('link', LinkDirective);\n\n};\n\nmodule.exports = Router;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-router@1.0.7@mokit-router/lib/router.js","const utils = require('ntils');\n\n/**\n * 定义正则表达式常量\n */\nconst PLACE_HOLDER_EXPR = /\\{.+?\\}/gim;\nconst COLLECT_EXPR_STR = '([^\\\\/]+)';\nconst GREEDY_COLLECT_EXPR_STR = '(.+)';\n\n/**\n * 定义路由实例扩展 __proto__\n **/\nconst routeInstanceProto = {};\n\n/**\n * 生成 action URL\n * @param {String} action action 名称\n * @return {String} 对应的 path\n **/\nrouteInstanceProto.actionUrl = function (action) {\n  let self = this;\n  let actionUrl = self.withoutActionUrl + '/' + action;\n  actionUrl = actionUrl.replace(/\\/\\//igm, '/');\n  return actionUrl;\n};\n\n/**\n * 定义路由对象\n * @param {Object} routes 路由眏射表\n * @param {Object} options 选项\n * @returns {void} 无返回\n */\nfunction Router(routes, options) {\n  let self = this;\n  options = options || {};\n  self.options = options;\n  self.table = [];\n  if (routes) {\n    self.add(routes);\n  }\n}\n\n/**\n * 解析占位符 key 定义\n * @param {String} _keyDefStr 占位符定义\n * @returns {Object} 占符符信息对象\n **/\nRouter.prototype._parseKeyDef = function (_keyDefStr) {\n  let keyDefStr = _keyDefStr.substring(1, _keyDefStr.length - 1);\n  let keyDefParts = keyDefStr.split(':');\n  let keyDef = {};\n  keyDef.name = keyDefParts[0];\n  if (keyDef.name[0] == '*') {\n    keyDef.greedy = true;\n    keyDef.name = keyDef.name.substring(1);\n  }\n  if (keyDefParts[1]) {\n    keyDef.expr = new RegExp(keyDefParts[1], 'igm');\n  }\n  return keyDef;\n};\n\n/**\n * 添加一个路由配置\n * @param {Object} route 路由项\n * @returns {void} 无返回\n */\nRouter.prototype.addOne = function (route) {\n  let self = this;\n  if (!route || !route.pattern) return;\n  //取到所有路由key\n  PLACE_HOLDER_EXPR.lastIndex = 0;\n  let keyDefs = route.pattern.match(PLACE_HOLDER_EXPR) || [];\n  route.keys = {};\n  //初始化 url 匹配测试表达式字符串\n  let exprStr = '^' + route.pattern + '$';\n  utils.each(keyDefs, function (i) {\n    //处理 key 定义\n    let keyDef = self._parseKeyDef(keyDefs[i]);\n    route.keys[keyDef.name] = {\n      index: i,\n      expr: keyDef.expr\n    };\n    //将 'key 占位符' 的表达式，替换为 '提交值的正则表达式'\n    let collectExprStr = keyDef.greedy ? GREEDY_COLLECT_EXPR_STR : COLLECT_EXPR_STR;\n    exprStr = exprStr.replace(keyDefs[i], collectExprStr);\n  });\n  //生成 url 匹配测试表达式\n  route.expr = new RegExp(exprStr, 'igm');\n  //处理所有 route 的 method \n  route.methods = route.methods || self.options.defaultMethods;\n  if (route.methods && route.methods.length > 0) {\n    route.methods = route.methods.map(function (method) {\n      return method.toUpperCase();\n    });\n  }\n  //继承原型\n  route.__proto__ = routeInstanceProto;\n  self.table.push(route);\n};\n\n/**\n * 添加一组路由配置表\n * @param {Route} routes 一个路由实体,格式:{pattern:'',target:object}\n * @returns {void} 无返回\n */\nRouter.prototype.add = function (routes) {\n  let self = this;\n  utils.each(routes, function (_name, _route) {\n    //判断是字符串还是一个对象，并都将 _route 转为对象\n    let route = utils.isString(_route) ? {\n      'target': _route\n    } : _route;\n    //尝试从名称中解析出 method 和 pattern\n    let name = (_name || '/').toString();\n    let nameParts = name.split(' ');\n    if (nameParts.length > 1) {\n      route.methods = nameParts[0].split(',');\n      route.pattern = route.pattern || nameParts[1];\n    } else {\n      route.pattern = route.pattern || nameParts[0];\n    }\n    //解析 controller 和 action\n    //target 和 controller 不可同时配置，target 可以为 'controller action' 这样的格式\n    if (route.target) {\n      let targetParts = route.target.split(' ');\n      route.controller = route.controller || targetParts[0];\n      route.action = route.action || targetParts[1];\n    }\n    route.target = route.controller;\n    //添加 route\n    self.addOne(route);\n  });\n};\n\n/**\n * 解析路由动态 action\n * @param {Object} route 路由项\n * @returns {Object} 解析后路由项\n **/\nRouter.prototype._parseDynamicAction = function (route) {\n  if (route &&\n    route.action &&\n    route.action.indexOf('{') > -1) {\n    utils.each(route.params, function (key, val) {\n      route.action = utils.replace(route.action, '{' + key + '}', val);\n    });\n  }\n  return route;\n};\n\n/**\n * 创建一个路由实例\n * @param {object} srcRoute 路由项原型 proto\n * @param {String} url URL\n * @param {Object} params 参数\n * @returns {Object} 路由实例\n **/\nRouter.prototype._createRouteInstance = function (srcRoute, url, params) {\n  let self = this;\n  let routeInstance = {\n    __proto__: srcRoute\n  };\n  routeInstance.params = params;\n  if (routeInstance.action) {\n    let urlParts = url.split('/');\n    routeInstance.withoutActionUrl = urlParts.slice(0, urlParts.length - 1);\n  } else {\n    routeInstance.withoutActionUrl = url;\n  }\n  routeInstance = self._parseDynamicAction(routeInstance);\n  return routeInstance;\n};\n\n/**\n * 通过请求路径获取第一个匹配的路由\n * @param {String} url 请求路径\n * @param {Boolean} handleActionFromUrl 是否从 URL 中分析 action\n * @returns {Route} 路由实体\n */\nRouter.prototype.get = function (url, handleActionFromUrl) {\n  let self = this;\n  let routeArray = [];\n  if (utils.isNull(url)) {\n    return routeArray;\n  }\n  //url = url.replace(/\\/\\//igm, '/');\n  utils.each(self.table, function (i, route) {\n    route.expr.lastIndex = 0;\n    if (!route.expr.test(url)) return;\n    //通过子表达式 '正则的()' 取值\n    route.expr.lastIndex = 0;\n    let values = route.expr.exec(url);\n    //生成 params\n    let params = {};\n    let failed = utils.each(route.keys, function (key, keyDef) {\n      params[key] = values[keyDef.index + 1];\n      if (!keyDef.expr) return;\n      keyDef.expr.lastIndex = 0;\n      if (!keyDef.expr.test(params[key])) {\n        return true;\n      }\n    });\n    if (failed) return;\n    routeArray.push(self._createRouteInstance(route, url, params));\n  });\n  //确定 parseActionFromUrl 的值\n  handleActionFromUrl = utils.isNull(handleActionFromUrl) ?\n    self.options.parseActionFromUrl : handleActionFromUrl;\n  //如果需要 parseActionFromUrl\n  if (handleActionFromUrl) {\n    let _routeArray = self._getForActionFromUrl(url);\n    routeArray.push.apply(routeArray, _routeArray);\n  }\n  return routeArray;\n};\n\n/**\n * 从 url 中分解出来 action ，然后获取 route array\n * @param {String} url 路径\n * @returns {Object} 路由实例\n **/\nRouter.prototype._getForActionFromUrl = function (url) {\n  let self = this;\n  /*\n  一是在如果直接匹配不成功时，才将 “/” 分隔的最后一个 “字串” 当作 action 进行再一次匹配\n  */\n  let urlParts = url.split('/');\n  let lastIndex = urlParts.length - 1;\n  let action = urlParts[lastIndex];\n  //检查分解出来的 action 是否合法\n  if (action === '' || action.indexOf('.') > -1) {\n    return null;\n  }\n  let ctrlRouteUrl = urlParts.slice(0, lastIndex).join('/');\n  if (ctrlRouteUrl === '') ctrlRouteUrl = '/';\n  let ctrlRouteArray = self.get(ctrlRouteUrl, false) || [];\n  let routeArray = ctrlRouteArray.filter(function (route) {\n    /**\n     * 从 URL 分解出来的 action 不可能是动态的 action\n     * route.action 没有指定时才能作为 parseAction 的合法 route\n     **/\n    if (route.action) return false;\n    //设定 action 作为指向 action 的 route\n    route.action = action;\n    //标记一下 action 在 url 中\n    route.actionFromUrl = true;\n    return true;\n  });\n  return routeArray;\n};\n\n/**\n * 过滤出包含指定 method 的 route\n * @param {array} routeArray 路由实例数组\n * @param {String} method HTTP method\n * @returns {Object} 匹配的路由实例\n **/\nRouter.prototype.matchByMethod = function (routeArray, method) {\n  if (!routeArray || routeArray.length < 1) {\n    return routeArray;\n  }\n  return routeArray.filter(function (route) {\n    if (!route || !route.methods || route.methods.length < 1) {\n      return false;\n    }\n    return route.methods.indexOf(method) > -1;\n  })[0];\n};\n\nmodule.exports = Router;\n\n/*end*/\n\n\n// WEBPACK FOOTER //\n// ./~/._general-router@0.0.3@general-router/lib/index.js","const mokit = require('mokit-plugin').mokit;\nconst Class = mokit.Class;\nconst EventEmitter = mokit.EventEmitter;\n\nconst SEPARATOR = '#!';\nconst ROOT_PATH = '/';\n\n/**\n * 基于 has 的路由驱动\n */\nconst HashDriver = new Class({\n  $name: 'HashDriver',\n  $extends: EventEmitter,\n\n  /**\n   * 路由驱动构造函数\n   * @param {Object} router 路径实例\n   * @returns {void} 无返回\n   */\n  constructor: function (router) {\n    this.$super();\n    this.router = router;\n    window.addEventListener('hashchange', function () {\n      this._onChange();\n    }.bind(this));\n  },\n\n  /**\n   * 获取当前路径\n   * @returns {string} 当前路径\n   */\n  get: function () {\n    return location.hash.split(SEPARATOR)[1] || ROOT_PATH;\n  },\n\n  /**\n   * 设置当前路径\n   * @param {string} path 要转到的路径\n   * @returns {void} 无返回\n   */\n  set: function (path) {\n    path = path || ROOT_PATH;\n    location.hash = SEPARATOR + path;\n  },\n\n  /**\n   * 路由发生变化时的处理函数\n   * @param {string} path 将要转到的路径\n   * @returns {void} 无返回\n   */\n  _onChange: function (path) {\n    path = path || this.get() || '';\n    if (path[0] != ROOT_PATH) path = ROOT_PATH + path;\n    this.emit('changed', path);\n  }\n\n});\n\nmodule.exports = HashDriver;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-router@1.0.7@mokit-router/lib/drivers/hash.js","const mokit = require('mokit-plugin').mokit;\nconst View = mokit.components.View;\n\nconst RouterView = View.extend({\n  properties: {\n    router: {\n      test: function (router) {\n        return !!router;\n      },\n      get: function () {\n        return this._router;\n      },\n      set: function (router) {\n        this._router = router;\n        this._router.view = this;\n      }\n    }\n  },\n  onCreated: function () {\n    if (!this.router && this.$router) {\n      this.router = this.$router;\n    }\n  }\n});\n\nmodule.exports = RouterView;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-router@1.0.7@mokit-router/lib/components/router-view.js","const mokit = require('mokit-plugin').mokit;\nconst Directive = mokit.Directive;\nconst EventEmitter = mokit.EventEmitter;\n\nmodule.exports = new Directive({\n  literal: true,\n\n  bind: function () {\n    let eventTarget = this.node.$target || this.node;\n    this.emiter = new EventEmitter(eventTarget);\n    this.emiter.addListener(this.decorates[0] || 'click', function () {\n      if (!this.scope || !this.scope.$router) return;\n      this.scope.$router.go(this.path, eventTarget.transition);\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  update: function (path) {\n    this.path = path;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-router@1.0.7@mokit-router/lib/directives/link.js","const Plugin = require('mokit-plugin');\nmodule.exports = new Plugin(function () {\n  return require('./touch');\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-touch@1.0.1@mokit-touch/lib/index.js","const mokit = require('mokit-plugin').mokit;\nconst utils = mokit.utils;\n\nconst SUPPORT_TOUCH = ('ontouchstart' in document);\nconst START_EVENT_NAME = SUPPORT_TOUCH ? 'touchstart' : 'mousedown';\nconst MOVE_EVENT_NAME = SUPPORT_TOUCH ? 'touchmove' : 'mousemove';\nconst END_EVENT_NAME = SUPPORT_TOUCH ? 'touchend' : 'mouseup';\nconst CUSTOM_EVENT_NAMES = `tap,taphold,dbltap,swipe,swipeup,swiperight,\nswipedown,swipeleft,pointdown,pointmove,pointup`;\n\nmodule.exports = {\n  name: CUSTOM_EVENT_NAMES,\n\n  option: {\n    swipeDurationThreshold: 1000,\n    swipeHorizontalDistanceThreshold: 25,\n    swipeVerticalDistanceThreshold: 45,\n    holdDurationThreshold: 1000,\n    dblDurationThreshold: 450,\n    scrollSupressionThreshold: 25\n  },\n\n  addListener: function (emitter, name, listener, capture) {\n    if (!utils.isFunction(listener)) return;\n\n    let self = this;\n\n    //处理 touchstart 事件\n    listener.touchstart = listener.touchstart || function (event) {\n      let point = event.changedTouches ? event.changedTouches[0] : event;\n      listener.startPoint = listener.endPoint = {\n        'x': point.pageX,\n        'y': point.pageY,\n        'timeStamp': event.timeStamp,\n        'point': point\n      };\n      if (name == 'taphold') {\n        listener.createHoldHandler(event);\n      }\n      //模拟鼠标事件\n      if (name == 'pointdown') {\n        utils.copy(listener.startPoint, event);\n        emitter.emit('pointdown', event);\n        emitter.isPointDown = true;\n      }\n    };\n\n    //创建 hold 处理器\n    listener.createHoldHandler = listener.createHoldHandler || function (event) {\n      // 处理 taphold 事件\n      if (!listener.holdTimer && !listener.holdHandler) {\n        let option = self.option;\n        listener.holdHandler = function () {\n          event.taphold = true;\n          emitter.emit('taphold', event);\n        };\n        listener.holdTimer = setTimeout(function () {\n          if (listener.holdHandler) listener.holdHandler();\n        }, option.holdDurationThreshold);\n      }\n    };\n\n    //清除 hold 处理器\n    listener.clearHoldHandler = listener.clearHoldHandler || function () {\n      if (listener.holdTimer) {\n        clearTimeout(listener.holdTimer);\n        listener.holdTimer = null;\n        listener.holdHandler = null;\n      }\n    };\n\n    //获取划动信息\n    listener.getTouchInfo = function (event) {\n      let point = event.changedTouches ? event.changedTouches[0] : event;\n      listener.endPoint = {\n        'x': point.pageX,\n        'y': point.pageY,\n        'timeStamp': event.timeStamp,\n        'point': point\n      };\n      //\n      let option = self.option;\n      // 一些计算结果\n      let info = {};\n      info.timeStamp = listener.endPoint ? listener.endPoint.timeStamp : null;\n      info.existStartAndStop = listener.endPoint && listener.startPoint;\n      info.horizontalDistance = info.existStartAndStop ? listener.endPoint.x - listener.startPoint.x : 0;\n      info.verticalDistance = info.existStartAndStop ? listener.endPoint.y - listener.startPoint.y : 0;\n      info.horizontalDistanceValue = Math.abs(info.horizontalDistance);\n      info.verticalDistanceVlaue = Math.abs(info.verticalDistance);\n      info.isHorizontal = info.horizontalDistanceValue >= info.verticalDistanceVlaue;\n      info.isVertical = !info.sHorizontal;\n      info.isSwipeMove = info.horizontalDistanceValue >= option.swipeHorizontalDistanceThreshold ||\n        info.verticalDistanceVlaue >= option.swipeVerticalDistanceThreshold;\n      info.isSwipeTime = info.existStartAndStop ?\n        listener.endPoint.timeStamp - listener.startPoint.timeStamp <= option.swipeDurationThreshold : true;\n      info.isHoldTime = info.existStartAndStop ?\n        listener.endPoint.timeStamp - listener.startPoint.timeStamp >= option.holdDurationThreshold : false;\n      //这里的 direction 仅是指划动方法，不代表 swipe 动作，swipe 动作还有时间或划动距离等因素\n      if (info.isHorizontal && info.horizontalDistance > 0) {\n        info.direction = 'right';\n      } else if (info.isHorizontal && info.horizontalDistance < 0) {\n        info.direction = 'left';\n      } else if (info.isVertical && info.verticalDistance > 0) {\n        info.direction = 'down';\n      } else if (info.isVertical && info.verticalDistance < 0) {\n        info.direction = 'up';\n      }\n      return info;\n    };\n\n    //处理 touchmove 事件\n    listener.touchmove = listener.touchmove || function (event) {\n      let info = listener.getTouchInfo(event);\n      if (info.isSwipeMove) {\n        listener.clearHoldHandler();\n      }\n      let stopBubble = false;\n      //模拟鼠标事件\n      if (emitter.isPointDown && name == 'pointmove') {\n        utils.copy(listener.endPoint, event);\n        emitter.emit('pointmove', event);\n        stopBubble = true;\n      }\n      //在绑定划动的方向上禁止滚动，因为 Android 4.x 不如此处理，touchend 事件将不触发\n      if ((name == 'swipe') || (name == 'swipe' + info.direction)) {\n        stopBubble = true;\n      }\n      //如果需要阻止冒泡\n      if (stopBubble) {\n        return false;\n      }\n    };\n\n    //完成事件\n    listener.done = listener.done || function (event) {\n      listener.clearHoldHandler();\n      let info = listener.getTouchInfo(event);\n      //模拟鼠标事件\n      if (name == 'pointup') {\n        utils.copy(listener.endPoint, event);\n        emitter.emit('pointup', event);\n        emitter.isPointDown = false;\n      }\n      // 根据计算结果判断\n      if (info.isSwipeTime && info.isSwipeMove) {\n        event.swipe = true;\n        event.direction = info.direction;\n        if (name == 'swipe') {\n          emitter.emit('swipe', event);\n        }\n        if (name == 'swipe' + event.direction) {\n          emitter.emit('swipe' + event.direction, event);\n        }\n      } else if (info.isSwipeTime && !info.isSwipeMove && !info.isHoldTime) {\n        if (name == 'tap') {\n          emitter.emit('tap', event);\n        }\n        if (name == 'dbltap') {\n          //处理 “双击”\n          let option = self.option;\n          event.dbltap = listener.PreTapTime && info.timeStamp - listener.PreTapTime <= option.dblDurationThreshold;\n          if (event.dbltap) {\n            emitter.emit('dbltap', event);\n            listener.PreTapTime = null;\n          } else {\n            listener.PreTapTime = listener.endPoint.timeStamp;\n          }\n        }\n      }\n    };\n\n    //绑定组合事件\n    emitter.on(START_EVENT_NAME, listener.touchstart, capture);\n    emitter.on(MOVE_EVENT_NAME, listener.touchmove, capture);\n    emitter.on(END_EVENT_NAME, listener.done, capture);\n\n  },\n\n  removeListener: function (emitter, name, listener, capture) {\n    //只有指定了 handler 才能取消构成组合事件的 “原事件”\n    //否则会直接移除会将其他 touchstart 等事件也移除\n    if (utils.isFunction(listener)) {\n      if (utils.isFunction(listener.touchstart)) {\n        emitter.off(START_EVENT_NAME, listener.touchstart, capture);\n      }\n      if (utils.isFunction(listener.touchmove)) {\n        emitter.off(MOVE_EVENT_NAME, listener.touchmove, capture);\n      }\n      if (utils.isFunction(listener.done)) {\n        emitter.off(END_EVENT_NAME, listener.done, capture);\n      }\n    }\n  },\n\n  install: function (mokit) {\n    mokit.EventEmitter.register(this);\n    mokit.Touch = this;\n  }\n\n};\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-touch@1.0.1@mokit-touch/lib/touch.js","const Plugin = require('mokit-plugin');\nmodule.exports = new Plugin(function () {\n  return require('./transition');\n});\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-transition@1.0.1@mokit-transition/lib/index.js","require('./transition.css');\nconst classes = require('./classes');\nconst utils = require('./utils');\nconst mokit = require('mokit-plugin').mokit;\nconst EventEmitter = mokit.EventEmitter;\nconst Class = mokit.Class;\n\nconst Transition = new Class({\n\n  constructor: function (id) {\n    this.classes = classes.get(id);\n  },\n\n  init: function (view) {\n    utils.addClass(view.$element, 'ts-container');\n  },\n\n  clean: function (view) {\n    utils.removeClass(view.$element, 'ts-container');\n  },\n\n  prep: function (newComponent, oldComponent) {\n    if (!newComponent || !oldComponent) return;\n    utils.addClass(newComponent.$element, 'ts-item');\n    utils.addClass(oldComponent.$element, 'ts-item');\n  },\n\n  go: function (newComponent, oldComponent, done) {\n    if (!newComponent || !oldComponent) return done();\n    let doneCount = 0;\n    let newEmitter = new EventEmitter(newComponent.$element);\n    let oldEmitter = new EventEmitter(oldComponent.$element);\n    let checkDone = function () {\n      if (++doneCount > 1) {\n        newEmitter.off(utils.ANIMATION_END_EVENT_NAME, checkDone);\n        oldEmitter.off(utils.ANIMATION_END_EVENT_NAME, checkDone);\n        utils.removeClass(oldComponent.$element, this.classes.leave);\n        utils.removeClass(oldComponent.$element, 'ts-item');\n        utils.removeClass(newComponent.$element, this.classes.enter);\n        utils.removeClass(newComponent.$element, 'ts-item');\n        done();\n      }\n    }.bind(this);\n    newEmitter.on(utils.ANIMATION_END_EVENT_NAME, checkDone);\n    oldEmitter.on(utils.ANIMATION_END_EVENT_NAME, checkDone);\n    utils.addClass(newComponent.$element, this.classes.enter);\n    utils.addClass(oldComponent.$element, this.classes.leave);\n  }\n\n});\n\nTransition.install = function (mokit) {\n  mokit.Transition = this;\n};\n\nmodule.exports = Transition;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-transition@1.0.1@mokit-transition/lib/transition.js","/**\n * 获取动画样式\n * @param {int} num 编号\n * @returns {Object} 包含一组样式名的对象\n */\nexports.get = function (num) {\n  let leave, enter;\n  /* eslint-disable */\n  switch (num) {\n    case 1:\n      leave = 'ts-moveToLeft';\n      enter = 'ts-moveFromRight';\n      break;\n    case 2:\n      leave = 'ts-moveToRight';\n      enter = 'ts-moveFromLeft';\n      break;\n    case 3:\n      leave = 'ts-moveToTop';\n      enter = 'ts-moveFromBottom';\n      break;\n    case 4:\n      leave = 'ts-moveToBottom';\n      enter = 'ts-moveFromTop';\n      break;\n    case 5:\n      leave = 'ts-fade';\n      enter = 'ts-moveFromRight ts-ontop';\n      break;\n    case 6:\n      leave = 'ts-fade';\n      enter = 'ts-moveFromLeft ts-ontop';\n      break;\n    case 7:\n      leave = 'ts-fade';\n      enter = 'ts-moveFromBottom ts-ontop';\n      break;\n    case 8:\n      leave = 'ts-fade';\n      enter = 'ts-moveFromTop ts-ontop';\n      break;\n    case 9:\n      leave = 'ts-moveToLeftFade';\n      enter = 'ts-moveFromRightFade';\n      break;\n    case 10:\n      leave = 'ts-moveToRightFade';\n      enter = 'ts-moveFromLeftFade';\n      break;\n    case 11:\n      leave = 'ts-moveToTopFade';\n      enter = 'ts-moveFromBottomFade';\n      break;\n    case 12:\n      leave = 'ts-moveToBottomFade';\n      enter = 'ts-moveFromTopFade';\n      break;\n    case 13:\n      leave = 'ts-moveToLeftEasing ts-ontop';\n      enter = 'ts-moveFromRight';\n      break;\n    case 14:\n      leave = 'ts-moveToRightEasing ts-ontop';\n      enter = 'ts-moveFromLeft';\n      break;\n    case 15:\n      leave = 'ts-moveToTopEasing ts-ontop';\n      enter = 'ts-moveFromBottom';\n      break;\n    case 16:\n      leave = 'ts-moveToBottomEasing ts-ontop';\n      enter = 'ts-moveFromTop';\n      break;\n    case 17:\n      leave = 'ts-scaleDown';\n      enter = 'ts-moveFromRight ts-ontop';\n      break;\n    case 18:\n      leave = 'ts-scaleDown';\n      enter = 'ts-moveFromLeft ts-ontop';\n      break;\n    case 19:\n      leave = 'ts-scaleDown';\n      enter = 'ts-moveFromBottom ts-ontop';\n      break;\n    case 20:\n      leave = 'ts-scaleDown';\n      enter = 'ts-moveFromTop ts-ontop';\n      break;\n    case 21:\n      leave = 'ts-scaleDown';\n      enter = 'ts-scaleUpDown ts-delay300';\n      break;\n    case 22:\n      leave = 'ts-scaleDownUp';\n      enter = 'ts-scaleUp ts-delay300';\n      break;\n    case 23:\n      leave = 'ts-moveToLeft ts-ontop';\n      enter = 'ts-scaleUp';\n      break;\n    case 24:\n      leave = 'ts-moveToRight ts-ontop';\n      enter = 'ts-scaleUp';\n      break;\n    case 25:\n      leave = 'ts-moveToTop ts-ontop';\n      enter = 'ts-scaleUp';\n      break;\n    case 26:\n      leave = 'ts-moveToBottom ts-ontop';\n      enter = 'ts-scaleUp';\n      break;\n    case 27:\n      leave = 'ts-scaleDownCenter';\n      enter = 'ts-scaleUpCenter ts-delay400';\n      break;\n    case 28:\n      leave = 'ts-rotateRightSideFirst';\n      enter = 'ts-moveFromRight ts-delay200 ts-ontop';\n      break;\n    case 29:\n      leave = 'ts-rotateLeftSideFirst';\n      enter = 'ts-moveFromLeft ts-delay200 ts-ontop';\n      break;\n    case 30:\n      leave = 'ts-rotateTopSideFirst';\n      enter = 'ts-moveFromTop ts-delay200 ts-ontop';\n      break;\n    case 31:\n      leave = 'ts-rotateBottomSideFirst';\n      enter = 'ts-moveFromBottom ts-delay200 ts-ontop';\n      break;\n    case 32:\n      leave = 'ts-flipOutRight';\n      enter = 'ts-flipInLeft ts-delay500';\n      break;\n    case 33:\n      leave = 'ts-flipOutLeft';\n      enter = 'ts-flipInRight ts-delay500';\n      break;\n    case 34:\n      leave = 'ts-flipOutTop';\n      enter = 'ts-flipInBottom ts-delay500';\n      break;\n    case 35:\n      leave = 'ts-flipOutBottom';\n      enter = 'ts-flipInTop ts-delay500';\n      break;\n    case 36:\n      leave = 'ts-rotateFall ts-ontop';\n      enter = 'ts-scaleUp';\n      break;\n    case 37:\n      leave = 'ts-rotateOutNewspaper';\n      enter = 'ts-rotateInNewspaper ts-delay500';\n      break;\n    case 38:\n      leave = 'ts-rotatePushLeft';\n      enter = 'ts-moveFromRight';\n      break;\n    case 39:\n      leave = 'ts-rotatePushRight';\n      enter = 'ts-moveFromLeft';\n      break;\n    case 40:\n      leave = 'ts-rotatePushTop';\n      enter = 'ts-moveFromBottom';\n      break;\n    case 41:\n      leave = 'ts-rotatePushBottom';\n      enter = 'ts-moveFromTop';\n      break;\n    case 42:\n      leave = 'ts-rotatePushLeft';\n      enter = 'ts-rotatePullRight ts-delay180';\n      break;\n    case 43:\n      leave = 'ts-rotatePushRight';\n      enter = 'ts-rotatePullLeft ts-delay180';\n      break;\n    case 44:\n      leave = 'ts-rotatePushTop';\n      enter = 'ts-rotatePullBottom ts-delay180';\n      break;\n    case 45:\n      leave = 'ts-rotatePushBottom';\n      enter = 'ts-rotatePullTop ts-delay180';\n      break;\n    case 46:\n      leave = 'ts-rotateFoldLeft';\n      enter = 'ts-moveFromRightFade';\n      break;\n    case 47:\n      leave = 'ts-rotateFoldRight';\n      enter = 'ts-moveFromLeftFade';\n      break;\n    case 48:\n      leave = 'ts-rotateFoldTop';\n      enter = 'ts-moveFromBottomFade';\n      break;\n    case 49:\n      leave = 'ts-rotateFoldBottom';\n      enter = 'ts-moveFromTopFade';\n      break;\n    case 50:\n      leave = 'ts-moveToRightFade';\n      enter = 'ts-rotateUnfoldLeft';\n      break;\n    case 51:\n      leave = 'ts-moveToLeftFade';\n      enter = 'ts-rotateUnfoldRight';\n      break;\n    case 52:\n      leave = 'ts-moveToBottomFade';\n      enter = 'ts-rotateUnfoldTop';\n      break;\n    case 53:\n      leave = 'ts-moveToTopFade';\n      enter = 'ts-rotateUnfoldBottom';\n      break;\n    case 54:\n      leave = 'ts-rotateRoomLeftOut ts-ontop';\n      enter = 'ts-rotateRoomLeftIn';\n      break;\n    case 55:\n      leave = 'ts-rotateRoomRightOut ts-ontop';\n      enter = 'ts-rotateRoomRightIn';\n      break;\n    case 56:\n      leave = 'ts-rotateRoomTopOut ts-ontop';\n      enter = 'ts-rotateRoomTopIn';\n      break;\n    case 57:\n      leave = 'ts-rotateRoomBottomOut ts-ontop';\n      enter = 'ts-rotateRoomBottomIn';\n      break;\n    case 58:\n      leave = 'ts-rotateCubeLeftOut ts-ontop';\n      enter = 'ts-rotateCubeLeftIn';\n      break;\n    case 59:\n      leave = 'ts-rotateCubeRightOut ts-ontop';\n      enter = 'ts-rotateCubeRightIn';\n      break;\n    case 60:\n      leave = 'ts-rotateCubeTopOut ts-ontop';\n      enter = 'ts-rotateCubeTopIn';\n      break;\n    case 61:\n      leave = 'ts-rotateCubeBottomOut ts-ontop';\n      enter = 'ts-rotateCubeBottomIn';\n      break;\n    case 62:\n      leave = 'ts-rotateCarouselLeftOut ts-ontop';\n      enter = 'ts-rotateCarouselLeftIn';\n      break;\n    case 63:\n      leave = 'ts-rotateCarouselRightOut ts-ontop';\n      enter = 'ts-rotateCarouselRightIn';\n      break;\n    case 64:\n      leave = 'ts-rotateCarouselTopOut ts-ontop';\n      enter = 'ts-rotateCarouselTopIn';\n      break;\n    case 65:\n      leave = 'ts-rotateCarouselBottomOut ts-ontop';\n      enter = 'ts-rotateCarouselBottomIn';\n      break;\n    case 66:\n      leave = 'ts-rotateSidesOut';\n      enter = 'ts-rotateSidesIn ts-delay200';\n      break;\n    case 67:\n      leave = 'ts-rotateSlideOut';\n      enter = 'ts-rotateSlideIn';\n      break;\n    case 68:\n      leave = 'ts-fade ts-ontop';\n      enter = 'ts-fade ts-delay200';\n      break;\n  }\n  /* eslint-enable */\n\n  return { enter: enter, leave: leave };\n};\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-transition@1.0.1@mokit-transition/lib/classes.js","/**\n * 添加或删除 className\n * @param {element} element 元素\n * @param {string} classNames 样式名称\n * @param {boolean} state 添加或删除\n * @returns {void} 无返回\n */\nexports.setClassNames = function (element, classNames, state) {\n  if (!element || !classNames) return;\n  if (!(classNames instanceof Array)) {\n    classNames = classNames.split(' ');\n  }\n  classNames.forEach(function (className) {\n    element.classList[state ? 'add' : 'remove'](className);\n  }, this);\n};\n\n/**\n * 添加 className\n * @param {element} element 元素\n * @param {string} classNames 样式名称\n * @returns {void} 无返回\n */\nexports.addClass = function (element, classNames) {\n  this.setClassNames(element, classNames, true);\n};\n\n/**\n * 删除 className\n * @param {element} element 元素\n * @param {string} classNames 样式名称\n * @returns {void} 无返回\n */\nexports.removeClass = function (element, classNames) {\n  this.setClassNames(element, classNames, false);\n};\n\n// 取浏览器的 CSS 前缀\nexports.BROWSER_PREFIX = (function () {\n  let styles = window.getComputedStyle(document.documentElement, '');\n  return (Array.prototype.slice\n    .call(styles)\n    .join('')\n    .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\n  )[1];\n})();\n\n// css 动画解束时的事件\nexports.ANIMATION_END_EVENT_NAME = `${exports.BROWSER_PREFIX}AnimationEnd`;\n\n\n// WEBPACK FOOTER //\n// ./~/._mokit-transition@1.0.1@mokit-transition/lib/utils.js","const mokit = require('mokit');\nconst Toolbar = require('../toolbar');\n\nconst slides = [].slice.call(document.querySelectorAll('script[type=\"text/slide\"]'));\n\nmodule.exports = new mokit.Component({\n  template: require('./index.html'),\n  components: {\n    Toolbar\n  },\n  data() {\n    return {\n      slides\n    };\n  },\n  onReady() {\n    document.addEventListener('keydown', event => {\n      let keyCode = event.keyCode;\n      switch (keyCode) {\n        case 37:\n        case 38:\n          this.toolbar.prev();\n          break;\n        case 39:\n        case 40:\n        case 32:\n          this.toolbar.next();\n          break;\n        case 13:\n          this.toolbar.togglePlay();\n          break;\n      }\n    });\n  },\n  onSwipeLeft() {\n    this.toolbar.next(17);\n  },\n  onSwipeRight() {\n    this.toolbar.next(18);\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/components/frame/index.js","const mokit = require('mokit');\nconst random = require('../../common/random');\n\ndocument.body.requestFullscreen = document.body.requestFullscreen ||\n  document.body.webkitRequestFullScreen ||\n  document.body.mozRequestFullScreen;\n\ndocument.exitFullscreen = document.exitFullscreen ||\n  document.webkitCancelFullScreen ||\n  document.webkitExitFullScreen ||\n  document.mozCancelFullScreen;\n\nmodule.exports = new mokit.Component({\n  template: require('./index.html'),\n  data() {\n    return {\n      index: 0,\n      total: 0,\n      isPlay: false\n    };\n  },\n  onReady() {\n    this.total = this.$parent.slides.length;\n    let index = this.$route.params.index || 1;\n    this.index = parseInt(index);\n  },\n  go(index, effect) {\n    this.index = index;\n    if (this.index > this.total) this.index = 1;\n    if (this.index < 1) this.index = this.total;\n    let slide = this.$root.slides[this.index - 1];\n    effect = effect || parseInt(slide.getAttribute('effect') || random(1, 68));\n    this.$router.go(`/slide/${this.index}`, new mokit.Transition(effect));\n  },\n  next(effect) {\n    this.go(++this.index, effect);\n  },\n  prev(effect) {\n    this.go(--this.index, effect);\n  },\n  play() {\n    document.body.requestFullscreen();\n    this.isPlay = true;\n  },\n  stop() {\n    document.exitFullscreen();\n    this.isPlay = false;\n  },\n  togglePlay() {\n    if (this.isPlay) {\n      this.stop();\n    } else {\n      this.play();\n    }\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/components/toolbar/index.js","module.exports = function random(min, max) {\n  return parseInt(Math.random() * (max - min + 1) + min);\n};\n\n\n// WEBPACK FOOTER //\n// ./src/common/random.js","module.exports = \"<div class=\\\"toolbar\\\">\\n  <i class=\\\"fa fa-undo\\\" m:on:click=\\\"go(1)\\\"></i>\\n  <i class=\\\"fa fa-chevron-circle-left\\\" m:on:click=\\\"prev()\\\"></i>\\n  <span class=\\\"pager\\\">{{index}}/{{total}}</span>\\n  <i class=\\\"fa fa-chevron-circle-right\\\" m:on:click=\\\"next()\\\"></i>\\n  <i class=\\\"fa fa-{{isPlay?'stop':'play'}}\\\" m:on:click=\\\"togglePlay()\\\"></i>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/toolbar/index.html\n// module id = 109\n// module chunks = 0","module.exports = \"<div class=\\\"ppt\\\" m:on:swipeleft=\\\"onSwipeLeft\\\" m:on:swiperight=\\\"onSwipeRight\\\">\\n  <m:toolbar m:id=\\\"toolbar\\\"></m:toolbar>\\n  <m:router-view class=\\\"stage\\\"></m:router-view>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/frame/index.html\n// module id = 110\n// module chunks = 0","const mokit = require('mokit');\nconst random = require('../../common/random');\n\nmodule.exports = new mokit.Component({\n  template: require('./index.html'),\n  data() {\n    return {\n      bgcolor: '#000',\n      bgimage: 'none',\n      content: '',\n      align: 'left',\n      style: ''\n    };\n  },\n  onCreate() {\n    let index = this.$route.params.index || 1;\n    index = parseInt(index) - 1;\n    let slide = this.$root.slides[index];\n    this.content = slide.innerHTML;\n    this.bgcolor = slide.getAttribute('bgcolor') || 'rgb(' + random(20, 150) + ',' +\n      random(20, 180) + ',' +\n      random(20, 180) + ')';\n    this.align = slide.getAttribute('align') || 'left';\n    this.bgimage = slide.getAttribute('bgimage');\n    this.bgimage = this.bgimage ? this.bgimage = `url('${this.bgimage}')` : 'none';\n    this.style = slide.getAttribute('style') || '';\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/components/slide/index.js","module.exports = \"<div class=\\\"slide-container\\\">\\n  <div class=\\\"slide markdown-body\\\" \\n  style=\\\"background-color:{{bgcolor}};background-image:{{bgimage}};text-align:{{align}};{{style}}\\\" \\n  m:html=\\\"content\\\">\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/slide/index.html\n// module id = 112\n// module chunks = 0"],"sourceRoot":""}