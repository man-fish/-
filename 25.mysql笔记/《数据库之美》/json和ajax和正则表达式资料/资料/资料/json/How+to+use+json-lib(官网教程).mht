From: <ÓÉ Microsoft Internet Explorer 5 ±£´æ>
Subject: Maven - Json-lib::Getting Started
Date: Mon, 19 Jan 2009 11:58:26 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_00C7_01C97A2D.3CD57970"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3350

This is a multi-part message in MIME format.

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/usage.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML><HEAD><TITLE>Maven - Json-lib::Getting Started</TITLE>
<STYLE type=3Dtext/css media=3Dall>@import url( ./css/maven-base2.css );
@import url( ./css/maven-theme.css );
@import url( ./css/site.css );
@import url( ./css/SyntaxHighlighter.css );
</STYLE>
<LINK media=3Dprint href=3D"./css/print.css" type=3Dtext/css =
rel=3Dstylesheet>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3DISO-8859-1">
<SCRIPT language=3DjavaScript=20
src=3D"http://json-lib.sourceforge.net/scripts/shCore.js"></SCRIPT>

<SCRIPT language=3DjavaScript=20
src=3D"http://json-lib.sourceforge.net/scripts/shBrushGroovy.js"></SCRIPT=
>

<SCRIPT language=3DjavaScript=20
src=3D"http://json-lib.sourceforge.net/scripts/shBrushJava.js"></SCRIPT>

<SCRIPT language=3DjavaScript=20
src=3D"http://json-lib.sourceforge.net/scripts/shBrushJScript.js"></SCRIP=
T>

<SCRIPT language=3DjavaScript=20
src=3D"http://json-lib.sourceforge.net/scripts/shBrushRuby.js"></SCRIPT>

<SCRIPT language=3DjavaScript=20
src=3D"http://json-lib.sourceforge.net/scripts/shBrushXml.js"></SCRIPT>

<META content=3D"MSHTML 6.00.2900.3492" name=3DGENERATOR></HEAD>
<BODY class=3Dcomposite>
<DIV id=3Dbanner><A id=3DbannerLeft =
href=3D"http://json-lib.sourceforge.net/"><IMG=20
alt=3D"" src=3D"http://json-lib.sourceforge.net/images/json-lib.png"> =
</A>
<DIV class=3Dclear>
<HR>
</DIV></DIV>
<DIV id=3Dbreadcrumbs>
<DIV class=3Dxleft>Last Published: 12/08/2008 </DIV>
<DIV class=3Dxright><A href=3D"http://www.json.org/">Json.org</A> | <A=20
href=3D"http://maven.apache.org/maven2/">Maven 2</A> </DIV>
<DIV class=3Dclear>
<HR>
</DIV></DIV>
<DIV id=3DleftColumn>
<DIV id=3Dnavcolumn>
<H5>Json-lib</H5>
<UL>
  <LI class=3Dnone><A=20
  href=3D"http://json-lib.sourceforge.net/index.html">Introduction</A>=20
  <LI class=3Dnone><A=20
  =
href=3D"https://sourceforge.net/project/showfiles.php?group_id=3D171425">=
Download</A>=20

  <LI class=3Dnone><A =
href=3D"http://json-lib.sourceforge.net/features.html">Feature=20
  List</A>=20
  <LI class=3Dnone><STRONG>Getting Started</STRONG>=20
  <LI class=3Dnone><A=20
  href=3D"http://json-lib.sourceforge.net/advanced.html">Advanced =
features</A>=20
  <LI class=3Dnone><A=20
  href=3D"http://json-lib.sourceforge.net/snippets.html">Snippets</A>=20
  <LI class=3Dnone><A =
href=3D"http://json-lib.sourceforge.net/groovy.html">Groovy=20
  integration</A>=20
  <LI class=3Dnone><A =
href=3D"http://json-lib.sourceforge.net/jruby.html">JRuby=20
  integration</A>=20
  <LI class=3Dnone><A =
href=3D"http://json-lib.sourceforge.net/package.html">Build=20
  instructions</A>=20
  <LI class=3Dnone><A =
href=3D"http://json-lib.sourceforge.net/users.html">Who is=20
  using it?</A>=20
  <LI class=3Dnone><A =
href=3D"http://json-lib.sourceforge.net/faq.html">FAQ</A>=20
  <LI class=3Dnone><A=20
  =
href=3D"http://json-lib.sourceforge.net/changes-report.html">Changes</A> =

  <LI class=3Dnone><A=20
  href=3D"http://json-lib.sourceforge.net/apidocs/index.html">Javadoc =
(jdk13)</A>=20
  <LI class=3Dnone><A=20
  =
href=3D"http://json-lib.sourceforge.net/apidocs/jdk15/index.html">Javadoc=
=20
  (jdk15)</A> </LI></UL>
<H5>Project Documentation</H5>
<UL>
  <LI class=3Dcollapsed><A=20
  href=3D"http://json-lib.sourceforge.net/project-info.html">Project=20
  Information</A>=20
  <LI class=3Dcollapsed><A=20
  href=3D"http://json-lib.sourceforge.net/project-reports.html">Project=20
  Reports</A> </LI></UL><A id=3DpoweredBy title=3D"Hosted on =
SourceForge.net"=20
href=3D"http://sourceforge.net/"><IMG alt=3D"Hosted on SourceForge.net"=20
src=3D"http://sflogo.sourceforge.net/sflogo.php?group_id=3D171425&amp;typ=
e=3D2">=20
</A><A id=3DpoweredBy title=3DDonations=20
href=3D"https://sourceforge.net/donate/index.php?group_id=3D171425"><IMG =

alt=3DDonations =
src=3D"https://sourceforge.net/images/project-support.jpg"> </A><A=20
id=3DpoweredBy title=3D"Build with Maven 2" =
href=3D"http://maven.apache.org/"><IMG=20
alt=3D"Build with Maven 2"=20
src=3D"http://json-lib.sourceforge.net/images/logos/maven-feather.png"> =
</A><A=20
id=3DpoweredBy title=3D"Listed at JavaToolbox" =
href=3D"http://javatoolbox.org/"><IMG=20
alt=3D"Listed at JavaToolbox"=20
src=3D"http://json-lib.sourceforge.net/images/javatoolbox.png"> </A><A=20
id=3DpoweredBy title=3D"Listed at LinuxLinks" =
href=3D"http://www.linuxlinks.com/"><IMG=20
alt=3D"Listed at LinuxLinks"=20
src=3D"http://www.linuxlinks.com/portal/content/logos/newlogo2.gif">=20
</A></DIV></DIV>
<DIV id=3DbodyColumn>
<DIV id=3DcontentBox>
<DIV class=3Dsection>
<H2><A name=3DHow_to_use_json-lib></A>How to use json-lib</H2><A=20
href=3D"http://json-lib.sourceforge.net/usage.html#serializer">Using the =

JSONSerializer</A> <BR><A=20
href=3D"http://json-lib.sourceforge.net/usage.html#arrays">Working with =
arrays and=20
collections</A> <BR><A=20
href=3D"http://json-lib.sourceforge.net/usage.html#objects">Working with =

objects</A> <BR><A =
href=3D"http://json-lib.sourceforge.net/usage.html#xml">Working=20
with XML</A> <BR><A name=3Dserializer></A>
<DIV class=3Dsection>
<H3><A name=3DUsing_the_JSONSerializer></A>Using the JSONSerializer</H3>
<P>JSONSerializer can transform any java object to JSON notation and =
back with a=20
simple and clean interface, leveraging all the builders in JSONObject =
and=20
JSONArray. To transform a java obect into JSON use=20
<CODE>JSONSerializer.toJSON()</CODE>. To transform a valid JSON value =
(by JSON,=20
I mean an Object implementing that interface), use =
<CODE>toJava()</CODE>. The=20
last method is an instance method because the serializer needs special=20
configuration to transform a JSON value to a bean class, array, List or=20
DynaBean.</P></DIV><A name=3Darrays></A>
<DIV class=3Dsection>
<H3><A name=3DWorking_with_arrays_and_collections></A>Working with =
arrays and=20
collections</H3>
<P>The simplest way to create a <CODE>JSONArray</CODE> from a java array =
or=20
collection is through the static factory methods from =
<CODE>JSONArray</CODE>.=20
<CODE>JSONArray.fromObject()</CODE> will inspect its parameter and call =
the=20
correct factory or constructor.</P>
<P>Examples:</P><TEXTAREA class=3Djava:nocontrols:nogutter =
name=3Dsrccode rows=3D4 cols=3D70>   boolean[] boolArray =3D new =
boolean[]{true,false,true};
   JSONArray jsonArray =3D JSONArray.fromObject( boolArray );
   System.out.println( jsonArray );
   // prints [true,false,true]</TEXTAREA><TEXTAREA =
class=3Djava:nocontrols:nogutter name=3Dsrccode rows=3D6 cols=3D70>   =
List list =3D new ArrayList();
   list.add( "first" );
   list.add( "second" );
   JSONArray jsonArray =3D JSONArray.fromObject( list );
   System.out.println( jsonArray );
   // prints ["first","second"]</TEXTAREA><TEXTAREA =
class=3Djava:nocontrols:nogutter name=3Dsrccode rows=3D3 cols=3D70>   =
JSONArray jsonArray =3D JSONArray.fromObject( "['json','is','easy']" );
   System.out.println( jsonArray );
   // prints ["json","is","easy"]</TEXTAREA></DIV><A name=3Dobjects></A>
<DIV class=3Dsection>
<H3><A name=3DWorking_with_objects></A>Working with objects</H3>
<DIV class=3Dsection>
<H3><A name=3DFrom_Beans__Maps_to_JSON></A>From Beans &amp; Maps to =
JSON</H3>
<P>The simplest way to create a <CODE>JSONObject</CODE> from a bean or=20
<CODE>Map</CODE> is through the static factory methods from=20
<CODE>JSONObject</CODE>. <CODE>JSONObject.fromObject()</CODE> will =
inspect its=20
parameter and call the correct factory or constructor.</P>
<P>Examples:</P><TEXTAREA class=3Djava:nocontrols:nogutter =
name=3Dsrccode rows=3D10 cols=3D70>   Map map =3D new HashMap();
   map.put( "name", "json" );
   map.put( "bool", Boolean.TRUE );
   map.put( "int", new Integer(1) );
   map.put( "arr", new String[]{"a","b"} );
   map.put( "func", "function(i){ return this.arr[i]; }" );

   JSONObject jsonObject =3D JSONObject.fromObject( map );
   System.out.println( jsonObject );
   // prints =
["name":"json","bool":true,"int":1,"arr":["a","b"],"func":function(i){ =
return this.arr[i]; }]</TEXTAREA><TEXTAREA =
class=3Djava:nocontrols:nogutter name=3Dsrccode rows=3D16 cols=3D70>   =
class MyBean{
      private String name =3D "json";
      private int pojoId =3D 1;
      private char[] options =3D new char[]{'a','f'};
      private String func1 =3D "function(i){ return this.options[i]; }";
      private JSONFunction func2 =3D new JSONFunction(new =
String[]{"i"},"return this.options[i];");

      // getters &amp; setters
      ...
   }

   JSONObject jsonObject =3D JSONObject.fromObject( new MyBean() );
   System.out.println( jsonObject );
   /* prints
     {"name":"json","pojoId":1,"options":["a","f"],
     "func1":function(i){ return this.options[i];},
     "func2":function(i){ return this.options[i];}}
   */</TEXTAREA>
<P>
<CENTER>
<TABLE class=3DbodyTable>
  <TBODY>
  <TR>
    <TD><IMG=20
    =
src=3D"http://json-lib.sourceforge.net/images/icon_warning_sml.gif"></TD>=

    <TD><STRONG><FONT color=3D#ff0000>CAUTION:</FONT></STRONG> when =
parsing,=20
      JSONObject and JSONArray will check for cycles in the hierarchy, =
throwing=20
      an exception if one is found. You can change this behavior by =
registering=20
      a CycleDetectionStrategy.</TD>
    <TD><IMG=20
    =
src=3D"http://json-lib.sourceforge.net/images/icon_warning_sml.gif"></TD>=
</TR></TBODY></TABLE></CENTER>
<P></P></DIV>
<DIV class=3Dsection>
<H3><A name=3DFrom_JSON_to_Beans></A>From JSON to Beans</H3>
<P>Json-lib can transform JSONObjects to either a DynaBean or an =
specific bean=20
class.<BR>When using DynaBean all arrays are converted to Lists, when =
using an=20
specific bean class the transformation will use type conversion if =
necessary on=20
array properties.</P>
<P>Convert to DynaBean:</P><TEXTAREA class=3Djava:nocontrols:nogutter =
name=3Dsrccode rows=3D10 cols=3D70>   String json =3D =
"{name=3D\"json\",bool:true,int:1,double:2.2,func:function(a){ return a; =
},array:[1,2]}";
   JSONObject jsonObject =3D JSONObject.fromObject( json );
   Object bean =3D JSONObject.toBean( jsonObject );
   assertEquals( jsonObject.get( "name" ), PropertyUtils.getProperty( =
bean, "name" ) );
   assertEquals( jsonObject.get( "bool" ), PropertyUtils.getProperty( =
bean, "bool" ) );
   assertEquals( jsonObject.get( "int" ), PropertyUtils.getProperty( =
bean, "int" ) );
   assertEquals( jsonObject.get( "double" ), PropertyUtils.getProperty( =
bean, "double" ) );
   assertEquals( jsonObject.get( "func" ), PropertyUtils.getProperty( =
bean, "func" ) );
   List expected =3D JSONArray.toList( jsonObject.getJSONArray( "array" =
) );
   Assertions.assertListEquals( expected, (List) =
PropertyUtils.getProperty( bean, "array" ) );</TEXTAREA>
<P>Convert to Bean:</P><TEXTAREA class=3Djava:nocontrols:nogutter =
name=3Dsrccode rows=3D6 cols=3D70>   String json =3D =
"{bool:true,integer:1,string:\"json\"}";
   JSONObject jsonObject =3D JSONObject.fromObject( json );
   BeanA bean =3D (BeanA) JSONObject.toBean( jsonObject, BeanA.class );
   assertEquals( jsonObject.get( "bool" ), Boolean.valueOf( =
bean.isBool() ) );
   assertEquals( jsonObject.get( "integer" ), new Integer( =
bean.getInteger() ) );
   assertEquals( jsonObject.get( "string" ), bean.getString() =
);</TEXTAREA>
<P>There are two special cases when converting to an specific bean, if =
the=20
target bean has a Map property and it must contain other beans,=20
<CODE>JSONObject.toBean()</CODE> will transform the nested beans into =
DynaBeans.=20
If you need those nested beans transformed into an specific class, you =
can=20
either postprocess the Map attribute or provide hints on JSONObject's =
attributes=20
for conversion. <CODE>JSONObject.toBean()</CODE> may be passed a third =
argument,=20
a Map, that will provide thos hints. Every key must be either the name =
of a=20
property or a regular expression matching the object's properties, and =
the value=20
must be a <CODE>Class</CODE>. </P>
<P>The second case is similar and it happens when the target bean has a=20
Collection (List) as a property and it must contain other beans. In this =
case=20
there is no way to provide hints for class conversion. The only possible =

solution is to postprocess the collection transforming each DynaBean =
into an=20
specific bean. </P>
<P>To ease the postprocessing scenarios, EZMorph provides a Morpher =
capable of=20
transforming a DynaBean into an specific bean, <A class=3DexternalLink=20
href=3D"http://ezmorph.sourceforge.net/apidocs/net/sf/ezmorph/bean/BeanMo=
rpher.html"><CODE>BeanMorpher</CODE></A>=20
<BR>Example:</P><TEXTAREA class=3Djava:nocontrols:nogutter =
name=3Dsrccode rows=3D16 cols=3D70>   class MyBean{
      private List data;
      // getters &amp; setters
   }

   class Person{
      private String name;
      // getters &amp; setters
   }

   ...

   String json =3D "{'data':[{'name':'Wallace'},{'name':'Grommit'}]}";
   Map classMap =3D new HashMap();
   classMap.put( "data", Person.class );
   MyBean bean =3D JSONObject.toBean( JSONObject.fromObject(json), =
MyBean.class, classMap );</TEXTAREA>
<P>This yields a MyBean instance that has DynaBeans inside the 'data'=20
attribute', so now comes the part of postprocessing, this can be done =
with an=20
Iterator<BR>Example:</P><TEXTAREA class=3Djava:nocontrols:nogutter =
name=3Dsrccode rows=3D7 cols=3D70>   Morpher dynaMorpher =3D new =
BeanMorpher( Person.class, JSONUtils.getMorpherRegistry() );
   morpherRegistry.registerMorpher( dynaMorpher );
   List output =3D new ArrayList();
   for( Iterator i =3D bean.getData().iterator(); i.hasNext(); ){
      output.add( morpherRegistry.morph( Person.class, i.next() ) );
   }
   bean.setData( output );</TEXTAREA>
<P>To learn more about Morphers, please visit <A class=3DexternalLink=20
href=3D"http://ezmorph.sourceforge.net/">EZMorph's project site</A> .=20
</P></DIV></DIV><A name=3Dxml></A>
<DIV class=3Dsection>
<H3><A name=3DWorking_with_XML></A>Working with XML</H3>
<P>Working with XML has become easier since version 1.1. Transforming=20
JSONObjects and JSONArrays from and to XML is done through the=20
XMLSerializer.</P>
<DIV class=3Dsection>
<H3><A name=3DFrom_JSON_to_XML></A>From JSON to XML</H3>
<P>Writing to JSON to XML is as simple as calling=20
<CODE>XMLSerializer.write()</CODE>, but there are a lot of options that =
you may=20
configure to get better control of the XML output. For example you may =
change=20
the default names for the root element ('o' if object, 'a' if array), =
the=20
default name for object (an object inside an array is "anonymous"), the =
default=20
name for array (for the same reason as object), the default name for =
element=20
(array items have no name). If you'd like to output namescape =
information but=20
your JSON does not includes it, no problem, you have 8 methods that will =
let you=20
register and manage namespaces; namespaces defined this way have =
precedence on=20
any namespace declaration that may be inside the JSON. By default =
XMLSerializer=20
will append special attributes to each xml element for easing the =
transformation=20
back to JSON but you may configure it to skip appending those =
attributes. Any=20
property on a JSONObject that begins with '@' will be treated as an =
attribute,=20
any property named '#text' will be treated as a Text node.</P>
<P>Please review the javadoc for XMLSerializer to know more about the=20
configurable options.</P>
<TABLE class=3DbodyTable>
  <TBODY>
  <TR class=3Da>
    <TH>Code</TH>
    <TH>XML output</TH></TR>
  <TR class=3Db>
    <TD><TEXTAREA class=3Djava:nocontrols:nogutter name=3Dsrccode =
cols=3D70>   JSONObject json =3D new JSONObject( true );
   String xml =3D XMLSerializer.write( json );</TEXTAREA></TD>
    <TD><TEXTAREA class=3Dxml:nocontrols:nogutter name=3Dsrccode =
rows=3D1 cols=3D70>   &lt;o class=3D"object" null=3D"true"&gt;
       </TEXTAREA></TD></TR>
  <TR class=3Da>
    <TD><TEXTAREA class=3Djava:nocontrols:nogutter name=3Dsrccode =
cols=3D70>   JSONObject json =3D =
JSONObject.fromObject("{\"name\":\"json\",\"bool\":true,\"int\":1}");
   String xml =3D XMLSerializer.write( json );</TEXTAREA></TD>
    <TD><TEXTAREA class=3Dxml:nocontrols:nogutter name=3Dsrccode =
rows=3D5 cols=3D70>   &lt;o class=3D"object"&gt;
      &lt;name type=3D"string"&gt;json&lt;/name&gt;
      &lt;bool type=3D"boolean"&gt;true&lt;/bool&gt;
      &lt;int type=3D"number"&gt;1&lt;/int&gt;
   &lt;/o&gt;
   </TEXTAREA></TD></TR>
  <TR class=3Db>
    <TD><TEXTAREA class=3Djava:nocontrols:nogutter name=3Dsrccode =
cols=3D70>   JSONArray json =3D JSONArray.fromObject("[1,2,3]");
   String xml =3D XMLSerializer.write( json );</TEXTAREA></TD>
    <TD><TEXTAREA class=3Dxml:nocontrols:nogutter name=3Dsrccode =
rows=3D5 cols=3D70>   &lt;a class=3D"array"&lt;
      &lt;e type=3D"number"&gt;1&lt;/e&gt;
      &lt;e type=3D"number"&gt;2&lt;/e&gt;
      &lt;e type=3D"number"&gt;3&lt;/e&gt;
   &lt;/a&gt;
   </TEXTAREA></TD></TR></TBODY></TABLE></DIV>
<DIV class=3Dsection>
<H3><A name=3DFrom_XML_to_JSON></A>From XML to JSON</H3>
<P>XMLSerializer treats each element as a <CODE>string</CODE> unless a =
type=20
parameter is specified.<BR>JSONFunction needs an additional parameter =
that=20
specifies that function's params.<BR>All xml attributes will have the =
prefix '@'=20
and text nodes will have the property name '#text'. XMLSerializer =
supports the=20
rules outlined at <A class=3DexternalLink=20
href=3D"http://www.xml.com/pub/a/2006/05/31/converting-between-xml-and-js=
on.html">Converting=20
Between XML and JSON</A> </P>
<TABLE class=3DbodyTable>
  <TBODY>
  <TR class=3Da>
    <TH>XML input</TH>
    <TH>Code</TH></TR>
  <TR class=3Db>
    <TD><TEXTAREA class=3Dxml:nocontrols:nogutter name=3Dsrccode =
rows=3D5 cols=3D70>   &lt;a class=3D"array"&gt;
     &lt;e type=3D"function" params=3D"i,j"&gt;
         return matrix[i][j];
     &lt;/e&gt;
   &lt;/a&gt;
   </TEXTAREA></TD>
    <TD><TEXTAREA class=3Djava:nocontrols:nogutter name=3Dsrccode =
rows=3D3 cols=3D70>   JSONArray json =3D (JSONArray) XMLSerializer.read( =
xml );
   System.out.println( json );
   // prints [function(i,j){ return matrix[i][j]; }]
   </TEXTAREA></TD></TR></TBODY></TABLE></DIV>
<P>
<CENTER>
<TABLE class=3DbodyTable>
  <TBODY>
  <TR>
    <TD><IMG=20
    =
src=3D"http://json-lib.sourceforge.net/images/icon_warning_sml.gif"></TD>=

    <TD><STRONG><FONT color=3D#ff0000>CAUTION:</FONT></STRONG> when =
parsing,=20
      JSONObject and JSONArray will check for cycles in the hierarchy, =
throwing=20
      an exception if one is found. You can change this behavior by =
registering=20
      a CycleDetectionStrategy.</TD>
    <TD><IMG=20
    =
src=3D"http://json-lib.sourceforge.net/images/icon_warning_sml.gif"></TD>=
</TR></TBODY></TABLE></CENTER>
<P></P></DIV></DIV></DIV></DIV>
<DIV class=3Dclear>
<HR>
</DIV>
<DIV id=3Dfooter>
<DIV class=3Dxright>=A9 2006-2008 Json-lib </DIV>
<DIV class=3Dclear>
<HR>
</DIV></DIV>
<SCRIPT language=3Djavascript>=0A=
      dp.SyntaxHighlighter.HighlightAll('srccode');=0A=
    </SCRIPT>
</BODY></HTML>

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://json-lib.sourceforge.net/images/json-lib.png

iVBORw0KGgoAAAANSUhEUgAAAOEAAAA1CAYAAAC3HIxDAAAABmJLR0QAAAAAAAD5Q7t/AAAACXBI
WXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH1gcCFTs4Hsd3NAAAAB10RVh0Q29tbWVudABDcmVhdGVk
IHdpdGggVGhlIEdJTVDvZCVuAAAeq0lEQVR42u1deZxUxZ3/Vr2jr5keGIQBlEtOI4eKY2QTo/HC
rKzgSTQRBYPHihGjbDaCStZo3MRN2LCKiTcIxHggiLpRcmpUGGO45D6WQ+QcmJ6j+11V+0dX9VS/
6e7pnumBAac+n/rMTM/revWqft/fXb8HdLSO1tE6WkfraB2to3W0jnbMGulYgo7WHpoRrSIAqKBJ
AoCLzpxYJT+R70+Ow83JNWd+tDevo7V6fykAHYABICB+EgAeAEt0x4lVshPx/m0GwizAKQggyuKY
ohsAtDxA6AFwANiiu8VYwDyYQdEYQFtx5WLsS5HpRBN7WwKgk+gRMcc4gMMADgGIAbDzoBn/8yHX
sxX7/u0GhAI8kqsEBJAoAAbAbY67iIXUAATF4pSJHhHj0Ry3Z2LsegA1AI6I3xMAvEIXUZmLJp4p
FzPwMwBH/F3QfTOsnybGtsWz2S18llbtSxsx6oAg/B4AenPunsLdD4Zw96M+zFvTA2xHHyP6t28A
2AOg3olVes3skynGNMXfEHvQZO2Kef/WNr0NFtYAEAXQBUC5AI8mFqMeQLXkLka0Ko27KN+PiO93
B9CT8/qezH75HO6uHMjZ9lPA6yJAIgRwApgWiGkDpXWEnryP0D67iTH671QfvgHA5wC+EPdrEMRW
iIpiCmYQFgyhVMzNzMAMmNjkegC1AOrEPRNGtCoviZxh/ToDCIm1qxWc+TCABiNa5eQLxNbuSxs1
KkBQ7tbfcR/nhyrBvugDJEzfdeXK/mVrmtijTuL5omLfIBhwTIxxRKGDYt6//YBQebAuTqxyfQ6i
OE1wJlcQgUoopQAqAPTjPD6YJWaNY86ys4FYKPNo8TB4PAzUdOLe7lO4t3wknN9d4dFTd1Hjsje0
wMRFktsb0aqcEkQBX0CALiqAUA6gy+DeE+euXbsWhmHANE1ompbqnHM88MADGDhwIMZd322C2Lhq
AZoaAHVGtKo5iZx1/Ygx7gU9NP23AHYA2CdA6bb1vrSxP8IE0Jl7n9yQ47qI2BOSg8GYAoB9mPPe
1z3rmRvBdvYHCEB7b9ECk+dS46IPxVdcI1rlFev+7RGEUsSXN3NdJu6iiQeuADCIuSvP8xIP3wS2
s0uL5sG29WbWk99nzrIzjZL5dwtuaGUirgwqcGcA3QD0cGKVCzVNAyEEmzdrCIfD0LSkpiMBKAE5
a9YsaJqGR2bcNvfUU09FTU0Nbr9n+HihzuwVoGwQkoYVsn7cWfpdpn+jmhrnLROqrmNEqxryVB1b
sy9tCUJd7HlzNEpzgCDFYJjz3te9+MyHADvQqJ9s/YoXf+jHAB6ixkV1gnlZRbx/uwRhPg+Wxl2E
BAoKVaIfc6vO9xqm3QHUB1o/pXiFAJaRaSGzqMC9nFjlAkIIdF1PA1ymTimFYRipv1988UVwznH/
/ffjmdnrXq6pqcG9M0aNBbATwH6h8mWSijnWz9W9xGO3EO30fYSW1wvHgWtEq6w8VMcW7ctRACHN
gwZJHv83AUQ965kb0wCYalbAs56eQI2LPhbXkiLevyjq47FYWD930QVQunNv2wgvPv17xQEgQLVR
a7M9p08F7glg8H13vv6+E6tcoGkadF3PCT7TNFPd/3c4HMbs2bPheR5M08Ssn65YDGAEgAEC6KUA
DDGH/NaP7y/z4tMnAeifY4xi7svx0Bq1GLazf3aX3c4BgtFr7e35aBsuTF7/V3T6MgA9vcQvrgc/
XFKkx2PUvK5KSg3hZcwKQCdWufSxxx4DIQSEEFBK09RNXdeh6zoCgQACgUDqb13XU5JQBaJpmpg/
fz5c14XjOHjsob++8NMH//IXAIOFRy4biLKuH/c+Gewl/ucaAcRuioOlqPty4rX2GzLW2wkjMAGU
MffDodxbcXqO6TJiXLqB6peuJdrpe0EI497OEs7WVXB3xSDuftoXqGuUoLT/LqL12SnsAFs4aDIB
cJATq3wVQAp40u6jlKZ95nfI+D9T1VIJ0LfffhsXXnghXNeFbdu4919fW/pfT159peJVLcTJAmYv
GE30s7ZR/Z8aZFihAPvwRESXByAB2nsr2LbTMlNZny3CU+qJ75AOEKZzXwNAhNlvjUqGHTI1k2mh
/1hEjYveF06OBgCM6MMoMCwAc3yUs8OnMOs3FzPnrXOAeIBqIz4U19YiGf/iPidQdwADnVjlq9L5
ogIwG9BUkPk/V0Go/q+2thaGYcBxHBBCcPtNcxc99eKEMYI5OEa0qgBniKN58UduJJF5uwgtr5Vu
9zztwxMRhDaAmBb43rwmjhkAQMDSApPnCuec3d7EYnsBoQYgwL11Q7KKS2PMWgHA1cLb2KBwNANA
CaGdt2mhH24gxujeXnzmjdQc97oAYZ2UND4nUF8nVvmaBIoKwlx2YD6g8/9v48aNGDhwIDzPg+M4
0HUdN4//zdIXXr71fDTGrvInDmEf6pE5B8TzOQBYIfHDE6TJBI1D1LjkA4D92LOenQC2qz8ADtpH
DVEcEteyAlT4VFqbEa3KJkFblXXUXkCYdBzwI2VZLzLGrEEyPibd/QmFaGVGywEAe6h+xiZa+sYf
BHEeEdcyvxPovjtfX/rznyeXIBcApYPGD7JMoMvkzJHXHT58GKFQCLZtw/NSkZJ+gkMnRM9bTZL2
oRacUofG+F5Bqu3x2pQUNenXaACwlxqj/0iN0X9HMmwB4Q84AuAgkvFaW2TM5HuriPBXcLGuJIdK
7ACw803OaE8gVFo8nBWE2oBqhVATTqzS8m2KhcbsCBmOcKW6JxZexpQ6A+j1+OOPp8CngkeGJVR1
U9d1WJaFYDAIQkjq/83Zieq4lmVB0zQwxuA4Dhhj+PbYX73w28XfHysYRnWhzrIvo32YIQXPVPZc
ahWaIiVrFUZXaBJCD0FD8RzOTH+6ZL7JGe0RhLoDeFpmrr+lM9GHyWRu3Z9aJYjONqJVjrJQHABX
rpNSsJsTq1ygqovSASM/U8EzefJkDBkyBIwxeJ6nSjEAwPPPP99s7FB2x3HgeV5KGrqui3+5+KeL
31z2o/PEZhcYp/ty2Yc5UvAMRTLK9XMFc2MCRC1xxgzh3oYBnv3b07i3rh/Yvq6AJbK3TAukLEZo
z31EG7qZmtesILTHDkVbOwSgvjkToX2BkETqwa1gZo4//2yqP/axWPhaAF6mzBPxsNmyYkyxeT2C
wWCa1zMTeGzbTsX6OOdgjIExhrq6Otx+z/CbhIpDgYe7X3rezKezOWtUyXjw4EGYppmShgqgewoO
6hRMLF8u+zCvFLwM+3+aAKJTiDR0G/59HHf/1A1gJKPmxuNh7u3tzr1PRzB7wZVEq/xMC975KtEG
fwrg/6RjMNde0HawqCmDlpDuB7Je5P5hsGe/fCGS8bFTBAcMG9EqPY9gtbQbgwA6e3VfXegHiz/w
zhjDnDlzUuBzXReu60oAXgdgDYDPRF/17vszbzBNs4mjRh1T13VUVFTAtu2UOuo4DmzbxsVfe/Bl
YXuYLdmXVsYPj6eWbwqev5WL7xXE4Lj7h4rMAMwIWY17Hw136yc94CVmTUIyHtwTzSRVtBcQegAs
op+5Ltfis8SscZ71wrUAhgEYKPT1KICAsBOaA2EYQHlJSQkopU0C74ZhwDAMEEIwe/ZsAIDneSkJ
yBjDbVOHfRvARgC7kExB24tkOtrm19+57xY1oK+OaRgGAoEAysrKUiqtZVlwXRee56G+vh7yWVq6
L8xeMJq5H34DQF+hMQTzWJfjEYS62MtC2lFMybMNZs+/ym2Yeh+AQc0Bsb2A0AFQT82rVwBBJwen
ocx6YqzbMG0q57FzAJwGoI8guBIjWmVmIjrFjigB0CWTM0XNfnnyySfBOU9JP5nxMuG2AXcA2C6A
p3o0a5A8MrUDQMY0NvV+ruvCsqyUTWhZlnT2lKIxtaoFLWkfclZ9utj4KBpzJb/s7ain5HH3b6Pc
hulThMDonk07aQ8glOfwagjttZ0Yl65o/uH+PNytu+5Bz3rpO0jmYw4WKmoXAJEMYJRZOaVnDrlz
rl9dDAQCkKrkgAEDEI/HU5JPSi3GGJA8n7gfSvBf6Pm2+Gz/wjfumqhK10xqqXTK2Lad1oU6GhYM
I7so0EfHm7MP4csvbSd7XSym7aLwkx7HhBFx993zPWvelbm0k2O+MQoR1wDYowW/vwi098Hmn+5Q
CbP++zqn7ppHPfu18QDOEKI/k70oXdqRVatWpamLfqBMnjw5BTwZWHccB5xzCG9XHdKzb6Rn1hLP
cMC27bQxJegl2KUa6jhOmrT95rnTfy2ktZlTrw5NXw/aK94C+5CcICC0kAznHA0/ECfaqG1acPoS
vWTRk3rp3/5LL3lzthZ+6nkauG0Z0c7aARCe04yynr6Ws/3DFO0kTS1tL95R6Ur+gpCydXroZ0+5
Df86Fby6+URutqMHSzx2K7Nf+ZZm3riYmpd/KOy1lIsYjVk5Znl5ec6guwpAACm19PZ7hk9EjjOJ
4rMGAIfLy5M+g2yeUhXgarhiw4YNUNzt2XeVhNZpwR/v9hruuBywtGz2oRI/5ELjOBGkYSpDRng8
KwTjHezEKh8o9s204EOLqfnPf4aSKgnSHYR2p9BHhhD4Xlfmrj7DS/z4WrCdWZJN4gHP+vU4PfTA
bsE86oUJxtsNCJ1YJROBzWoA24nWH3r4yYQbn3Eb2JZe+W3N1l5eYuYU5iy+WAveu8DnIrYECGkg
EEgDnxoPnDZtWpojRjpNhCqaisFlcTXL6lyxn80eN2nGvW8/509dU21CaQ+qP0WSQD423CaqD0vw
wCSDWXO+lcs+FPFDWzAQsyX7U2DFO9XjXfTiUSLpwkFjHmitIGqjTeRgEoBqqiRTtMgggHKqDz9E
Ii8ecutvuj0bELmz7CwenNqPkNLdSGZ2pcZqT5xR1jrZB2AT0fq/b5QsfICa31kKRKz8XfX/GOLW
T57uWc98R6inPVS7SPVWypig7NIb6ldFHccB0os3ZVOrXSRjUfV+VVQ9Z6iOq6qkQuXNx3nwOYDN
WmDSEqJ/bW2e9mEPYXMWCkBpT0eQzDQ6CUDXZvpJ4toIALPYHlqZmCG0J1kR7Ugb0eVeNAbf9wsA
HRC/7xGOuvWElKzUgjNeza6aNhjcWXYGkmU4gir22k2wXuFwtYLY4wBiWnDqYWpe9zcvMeta7r4/
AnDz8BzGA8z69fWc7emihx58SgDQBaDlSriWEkl2+bdwmhTmisuS0kYpTR1pkuNLtVSAPZ8mvbH1
WujhF936m34Etqs8u3045yoteMd7aCx+VIgEzJSdksvVL5lRmxaPkkkZRrTKVRhkW7QG0TOlSqr3
DVL9zH8wbcQu7q3snVFZc1cMoOaVYf/6tRUISSsW1hXHelzh/q8jtGe1Hv7ZDuatG8oST43l3vKv
5BNA5c6bl3qkvEYLTlkoOGbQr4KqQPGDkDGmJlvLwrBaDoLVkayOFsmkhmqahiVLlqQkn4wVSqAn
Eglp8zT3bNKRVUtIqakFH5rrNUy5E0gYme3DeRcSfVSC6mfUFKqNoQXZKb51OVrFo9oqM4iJznMI
DslwDhDt7M3ZQMjZ1gppFql73BbqKG3tuIq3MSbUgC0AVlLtK+/qkV89qoVn/4Jow7bltYL2S1cz
d8VXhQEfknZapi7BJ0MGPnU0KjyXRhb1ShMEG533m63PSQ+sP1a4devWtLCECnoBQluxO3IRRkJI
mf+j+ogPaeDWJTlWVPPiMy/hvOErLWCmLclOUVuLMlXamTe2WcEh9iNO9JE7s49UG8q0DsUGoVok
t9XqhhOrlPGgagC7AWwCsJLq57ytR557hAanvQJS3ky8yKPMmnOtAGHYsqw04AWDwVSWjAScTCdT
7bV/v3vJsz51LNOzhwF0PnjwIHRdTyWFyx4IBNJCElItlWC84IILoHjOmiMMaUPvB7BVC9z4FtEv
Wpn9G58Hvfgjp7UAhC3JTlFbGEeveNSxBCoDwAjtWZf9qrpgNqlVlOZTx0qLaYQ7sUpZVPeQAONG
AKs087pX9ciLTxBt6N7czpq1pzJ3xUAA+mWXXZY1hieBIeN4/p9Ixnk6wxdwVY5IlQHoKiWgvxbN
/fffD9u2U+PJWKHMH333/Zm3CWdDPkYoE2CtFdrCVi00cx5ovxz5t++G0NHaFozkpBxORFtvUxCi
MSBewnntSTmEpddKMNYJMO4EsIHQ7iu08FPPEu2MnEBkzv8OB8D/+zfjf5gtrcwvpfxezMnffX4+
GrNQTCNaRZTTGaUAus3+2d+fl+PLglG6rmP9+vUpp4zf8aOEQWqE5HcK4MAy/LCHkOBGPfQfcwvx
JucxfkuyU/yOjcKqBhzXMIzl8LOE7LYGYWP9Tl6bo2Cv3iovli875XMAmwgJrNFCj74CUmZll4Zr
+onvHclWLc2yrDTppwbSFQ9pX+Hu7yRULVl+vQeAPqFQKA3ghmEgGo1iwYIFTSSgCvja2loIqVbQ
wVOxHin7kGhDltPglDeKRPTFyE6pFmN8GUBIwKuze6BJOCN96j6VUnptqAKsfAOvqawUzvaU55hI
vBj2ohLO2AsgRGjXk6hx+WfMXnBWZnI6UiqIoV4tZQg0ZrYASIUL/ACUIYTrx81+duEbd31XrN1h
MXpnAP2fe2LDs5qWdFBKOzASieDuu+9OC/6rY8pOKQUaM3IKPRWv2ocBzbzm99xb2587b51dBM+g
mp3S0hBFS56pVZ72ow4+4ZDk3vrsAoiUJDIxIyrtOSNapSMZR4qKxfYHXkuQPDKk5VBHNQAG9zZ3
zT6RaG1ztqURrdKUTnJ4pdLdw/rF2Y9C8fqIkBiH3/rj9AlqsF5KxW3btjVRQf2dc46xl/7nSwBG
AjhL9JHPP7nxJVX9lMCeOnVqE9Cpv8txtZLl44V0twslWGUtGu3D4IwFoIP2tpbZiXFjSAamNwNY
i2QGyaosfbW4ZrP4Tgy+XNuj7W0vAsDy8YUEAYS4t/7krAPRPgcEw0wLeejKjUwBNvk2IHmkRnK1
I4Kr1YjSCSz7RNb0zjoR0v2gMgl/MV75eiv5aiuGZM2UjIVzhESUwVqbaAMO52E/1QDgnPMmGS0y
r1OVfGrAXv5OCME/f/Mn/9O3b18MHToUUgWVPRKJ4K677korZ6HGHFWbUKbIaUmCrRHryFsCGLFO
wj7US/XQT+a6Dd/7Pngs2AogMrn+wr472mlr6uvojkXzl8zwA1C+QqEcQFfmVQ3OSvvasO2ZbGTd
516vcGKj/gq4Td5ZoIV+cjc1Rn8kJhQT6iBX3Ngyq6Ir91YNyD6RATsFGDwfsamvt+okvKwysTsG
UavDZy8RAfxkZ/tKc6gCdcp48dfevnfsLTc8u9gftPcnVavZLOphXM/zsHHjRqxevTr1mXqNDHn4
AexPBnAcB0a0aiwaSzOWtNR+UnJwhX3YL6wF7nnNSzx8Q/6nw7NKRO8YgaBU0IJuRKvIMSjXIe3+
oKjQxhXak+/36AGgH3PeG5XjBUac6uetRtPqfykQymTUbiDlR8D3NwEhs9+aQI3RRwRnOoBkWhlX
gNAFwADPeulS8P3ZSxcmJ5KWRe6rBdrbrZ/4I9BetVrwwT8Roh9CMp+0Gkr9FGXeYRE6qGDOO0Oz
g7DbATSmw1kAjGcX3HLznZPmv6CWLKyurm4iEf2qpF+qyc9Uj6cEoJR2arI2gJQENKJVNwtPr6wm
F24l0aTZh9Qc8wfurenPnNfPPS6djTxRTkhQHu+ix4AZdBf0JT29TRK4AfTj7OBZXuJXY7MLn9N3
EK3fJsEg05xvug/VYUJPPcS9/Sc39S5+dJZnPfdtLTDpHbHBckJUcKquzP3kbGY9c1l2IJx8gOoj
t8BXll7lKNzbPpJ7Gy6Ct1Z33TUXUvPaj6j57Q8JoXszOC4kCLsz54OvMfvlM7LqFPqoVeLhLYVI
t5eVlcGyrJQ62rNnT+zevTsNSCro5E+1UJNfbfX/Xy0UxTlP+0xLJgDL9eSt9SJmcFqV0OAPf8fZ
pl7cW3vycYdCtr87tN6lxwqEzF5yITWvAJLnMv0gFHS//Gwv/sjV4HuzHr2jxlXvIHnETjLbJuqo
jPi7xPjmBu59PDwThJg151vcXX46MS5dTbXKXaDdG8Crg9zb2I25fzydO+8NARyafSLfXI5khbLU
yXTfSx5P9uwFVwBucl58dzmzfnk5s+ddQLSR26leuYVogw+A9qoFOAHbE2He6p7c/eA07n58KuBl
UbkicWpe9wEa300nXeZ7Hv3lmDH33fn6UtUurKiowM6dO9Okl//YkQpK9TMVfH4gqrYgIQRayfIx
ivPCRpFyeZvah7RUCz0y162feDd4dfi4koRsYx+i9U5VHDCiVe7RVEm9xKP/wtwPhlDj8lVEG/EF
iOGCHQhytrOUeyt7c+/TAdz7LDdzowN2UvOK99H4ctc0R5WuuKITAA5TY0wVs579Fvj+0szxtk97
c+/T3gX7m8lJNTQw+X8FCBsUjiaPykQ5d7tz968jm970YIS7vx/qub8f2iLL2rz+LUK7bhMhBZlM
zIRqsP3xJ666cvoP3lokgRgKhfDZZ5+l1FJpA/qlXqZYoqqiZrIDk84pAq1k+ZVISsFDSGboswKq
QhduH9KeAS1430Iv/sBEwGtnh3t1N8V4/VvvfjoQxiXdhLPwiGBWR7HCuEe4+6dBnvunQS37fklC
D818RpWCfgcjVeyIOID9hJibqXnDkiI7mLgWuO13hIS3CRDGFRCm0t2Y/dLIvE7TF4J97ZzVWvC2
RWIRjiBZBp3Bd37xkV9cPqZTp04pJ80ll1ySFlxX09dk6lk2AKpV1PyOGMaYlICbxL3r21DFks+4
F8AWalzyLjWu+mP7i7JFsuZbMvfPQzhv6C1sszKITKXjQ45TToO3LxQHzNPeiZIJhFxIwoMAtmmB
7ywi+gXvF2kijJo3vkHNce8gWY1MAoE30TycpV8tOgDDv/olkqcw9qsE74utfQFg4533nXn+D6af
e7PMqLnmmmtQX1/fJI1NrReqSj1Vbc3UtZLlN2sly89HMvf1i0yqibIfzYUA8vVqqs+4VQv92wKi
jdjamnGLpWmK7hHSI3s8kx8MeQ3/dhXn8e5orB5HWzB3fnSfWWc0cOsrmjn+TSQrPBzKJAVTIFSO
Y9SJzdqkh38+i+jn/6V1kwzaNPiDuVpwyjwkg7eZOH+KUAjtuxIIJlq/ACGbmhMW65En/pMQbR2S
6W1NgsYZgtxbAKy6/Z7hY6V9OGnSJDQ0NKQkX6YT8ervlmWlVeuWXS9dMRbJYPYWZH5dW5pt3swD
SnWatwyIjzwNclKsNeMWCYQegATRv/b3nBd6ywe59ROmIHPVuJauWTPf01u+BqRrTAs9/GstcMtv
Bd3vzaXx6FmMeQ6A6eHHf+5ZC9cwe+G14F9UFAA+h+gXfKoFb11MaK/VUMqBZyA8mRpVrYcfn8O9
HR941tNXc++Ts8APFViOoSRB9HPXaIGJbxJt0Erh+t8nvaqZuFC2g8Q33T7wPAA9l75S/fK0adPA
GMOMGTNSOab+mKG/W1YyTVArWT5eayyPUC3sYTvLC1vUlK9crR4FJEX79vZzQitWa8Fpz3nx6VN8
tlhB4xYBhDaAGA1MXsbcP38dbGufzJdGa7TArS8hc/pbS9cs+/fISfV65Jn3POupIdxZNjC/ag4A
SKcGql9SRYN3LSEktLEZum/8mv8DXxZAFxkn8ezfjeLuxyO5t71f8hVmiSDAKBBIgIQSIKX1hJ66
m2hnbqHG6NWElu+C78UY2SYiUuZkoD5Vq4TZS0cw75Nh8Lb34nxfV/B4CJDvqjATIEELpPwIof0/
J9rQ7dQc+w9CwnuQTvTyvs36kpSsnSCSQfMy0aNIBo3L+ve88XkAOHw4mZzjui4SiQQ8z0Pfvn2x
dc+8iRCn3gXRp97SI+ND2TZDpARGAPTMdZJd5HHuAVDvxCrztifFOpciebayjxt/eDx3lkxs7bgt
aWKtQ0imRfbh7MAQL/Ho9dxdfSZQVwoEbJBOh4k2bLUWvGsRod3XC3PmIIC4XMOWrln27xGmBWfM
puYVG5M20q5yZs0fxb11AzjfUwHeEAYcI+lMCjeAdjlCaN89RD93PTWuWEWIvjdfus8KwmaIMYLc
ZdozviIqD+JTU9aC4j6lokfQ/PsZWnTfHBsmXwwpU+gCYl5hsR7+OcnCQ/Xivg1ojEna0qPXHCPw
vbRGremiKU6WVN2WLLZ1c+Mb4jk6o/EkiCts9eqWjNsKIKrMt4t4brUCuYfG193JYk4N4rB3q9Ys
w/c6C6bAlb2D2PtQMzTYKvojBRKjzOEjzej5TiHElwGM6gn95u7Z6vs2Mx+ZOyjnZGSYk3p/2WWi
LisQKP5378ny7dJ+kXFOpyXP52N4cnypGrZ43FasrzoXM8u62gpDa0LULV2zDN/TFDVVagKaGK/N
6J4USIzN1Z0sWuJugbUu26zOZZ5zKur9s9ynLe+Btl67tl7Xlq5Zhu+p34FvPHIs6a+jdbSO1tE6
Wkc7Mdv/A+9L78yuHDVQAAAAAElFTkSuQmCC

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://sflogo.sourceforge.net/sflogo.php?group_id=171425&type=2

iVBORw0KGgoAAAANSUhEUgAAAH0AAAAlCAMAAABYgxaNAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAD9QTFRF////7vDzanR8j5edtLm92tzex8vO4+Xmoqit7O7vho6VmaCl
fYWM9vb3c32Eq7G2vsLF0NPW624f9baP86Vz0ytcbwAAAfJJREFUWMPt1Mty5SgQRdFT+2TyEOhx
XfX/39oD5GtHVI/bgxYDFEEAi0wS6ddPNv3Sz7VHf/RHf/RH/z/odYBf2mODkdJ5SpJLte1LUtnA
r2rb1mnbriqG2bqqbY8q9TbBl2zbpyRVu0jFpdi2V2+X/Yx46/OIcNs3HDEpsiWJSFoMQg1H+Exa
RMgAZAMmHD0BOPQCgCkALEkJR1cQAcDqIa7hVj91TkkKLkn7Rv/SU8KF0NorJcmEpArbrgIjQQl5
sKVUUqx5S2fc+ntEUpzzyk99Y1Rpm5KkF9d3PRnjvfLK7DKOyIBdUoOEPOGCvuZBi+ifOq+lR5S3
XufY9k99b9D2lSwl8aUDR/X8ioQ78xHMdVZW5r327REr83mvODnOO/N+69rze833QbtjL99jv0xq
3EG9M98ye6xQV+wbhxJea3e4Mvdb3+c6K5n1S/9e8ylpOmiS9nl0z11KIsl+bCqMv++9w9Z1QUtI
KJoc5dZTkv58/LlL4q97/65XHI3QxhbnQVGwRRz0JHURasyIVlbN96WrrPrd9gQ1jr0ea0T35+Pj
I0E6edf8v+l7eDokFU+3ut73MaqqqzQsvYa3cb/3erqsMMZ2OHZVW91+qZ9mc6z3bv3++F1tSeP9
3qU18vxpH/3RH/3RH/2/0H+y/QPGHBF3QvAJ5gAAAABJRU5ErkJggg==

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://sourceforge.net/images/project-support.jpg

/9j/4AAQSkZJRgABAQEBLAEsAAD//gAXQ3JlYXRlZCB3aXRoIFRoZSBHSU1Q/9sAQwABAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
/9sAQwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQEBAQEB/8AAEQgAIABYAwEiAAIRAQMRAf/EABwAAAICAwEBAAAAAAAAAAAAAAYIBwkA
AgoFBP/EACsQAAEFAQEAAQIGAgIDAAAAAAYCAwQFBwEIEgkRABMUFRYhFyIYIyYxOP/EABgBAAMB
AQAAAAAAAAAAAAAAAAMEBgUB/8QALBEAAwACAQQBAwALAAAAAAAAAQIDBBESAAUTIQYUIjEVIzIz
QUNRYWJxkf/aAAwDAQACEQMRAD8Au28N/SW+l36X+ln4Xf2Xwv5nvSPRfE/l4kONBGsrG871m/Jr
/Ewe2ISufqub14xpEgnuLZ+Ra3N84Srs7udIkPXMqaqRNdlUj/Ua+kwFfTmtB0tost8/a15UOiOK
HjRuY+YvN7uiY+a28lyOM55qt9By2upyykJXG26QG039LW2M66YjjxrGdvrOARkNz3m/1mZYR9Nb
6PoblkYev9L0Ty55ObfDCIF1gpZu8rocLygcNbVgoziG9SZRDHTPRcpUX6poj8+hAM+sS8upgDWC
+nGc0Klee9N6x6QwWy827vsNHu+Q+iqtWaX2z3HnzZ6MjHNN0Dzdgb2UC1S4JefcGHsfjP8AqnTc
+0/zmd6OBFYnr+FmMldvp+eGWVVFZqsn3D5n2PtveZdkyshly3fGlR1EzDGa8pma5NXqolRyToHQ
RQWooHEmJ7r8++Pdn77D47l3qM+rY0bOqxGNh0zERsVcijVTg9FfynlxQRUN7czTI57uBmLd79v+
PPmDnef33i/MXnpHeJ5zveq6lecpVxP9fZPep/7Fd+DfzXxSUyJYeeAirGFFczzn4+5Hj1FISW45
GxvyDP0YXEiZ2taGTc0yiAOSdNCgMm7ei6xo5KxKnEyFs2z9dLcTuaCE/v6rAmh9JgcPJlrbaXfC
Q/eLQhCmm/laUkSY51hCVtJV2KuV1SFocdfWhlrv5qWVOOPtkC+qxHOpOUliQw31jQMhMcQLB0WP
c9w8VWGWeKnYKQy7Gp9tCUWd6G1uiIc7C7bIgzENQzdADjue6WNUdXblnfNuezDWjyK2RYtBEpzs
y1Xx1crNdD7WVlVS37SO+0C7DBi0+qrMtkyWTYk0uXpQMpnRwJleUyjrWSbGxqhfx7Vw4ZmmOoyU
GYsjvUueevL7feK6nvF+Y/PX9dT3nFdV3mc9S2jny535u9QnvO/fne/ZXObpDMXT3/548w/2lSep
X5e8+85zvec/63UKzX5pd/2SpDH2RI471tKko/35xoMo9O4oAY8e5wD7t6+y5VBm+sX6dSp85zfJ
dotSXT9/+mVSVIZhwyO+w5nCq2mjWCaZdHD7uoBUuqz4gLbFqhJ6yhuY0ohie2QusC88J39P9GR3
qj0WekBL58DXBl6v9YC4P5/8JB1hc+6K9e41SRSk9Yk2f6iQlsi9E/T8dBFqO+V8uRqs0NIHz9Qd
wuHK/RPxDrJWc3DMzKaBiJY1FAEwCdhCp91nGWqFI9zyTQrPttios018ouXJIZp/bPDdSeKhgeO9
svkSc/1vSeqD8Y6nrffPfmJziuJR1pvzH58+PX1c5xTKEs5yp1C1/djnOcU24t1fGo6nFcea/BBK
yzMmBqmM3/OPl1I4QkxQK1FpzzZ5vU49fhVWD3hVD/bkgarSN2rqtIDrHtlZw41ZLRas9gzpKYF0
zDmLL/cNIDWGO299/wAhL+IBTfJ7ZBgzcYYf87ZTJwHRsQLNP3nAlz9SRX2mz7pW5DpKCSkcx3G0
qsfU2st22v30ceIbrWohIvThvonn4JynVtj9P6SeB+u6KezZemHFzoQBdiBzmuRidH2UXEekTSmv
L86Is/0JQ0PfwKTS11TsBleQDGjmzryoIypkZj1mv0YnPyKtWdqMeJlZthQiHYdZAleaHkODspJB
5ZedW+PM9uWKCgWz1Lu3iaNiWWaTRpMLiU3oC8WLFUcgll9a6wQJoKiffXPmXytBqqvuPfr5DXnf
y7LVFRvOb2mw5O5yNDB3JczpbnVHckSOtxFdqWYX7Xc8prqTGqpgjIAsXjs1r/cH8lP/ALtAdsGW
a3z15knyIDKLe3pVQruvgAk2wGrNMymmu8qCBqqu+1MqpJE16h4hG7a1mHSfduiEQyR9z/bvZIpq
hUKeHaq8PZmg2QVPhz/MHnbc8r1gXhGgxr5SUkYPo+tHottlW5Y1o+gpJyA7vTQbqiSobvjAgsfa
edd2qo0cRrNbyMDExfdxUYHxDJqeaRwKzRvXXpPcM/oRtvKfWPmU0yepHss2cPo7UiyvfRAgctRw
pyR2vL8PNDGMSiXKzgitTDLNs/amwTxhJipDe1LUZyD+CBoetbXTN7msi1O3mjFQwM2dCpXDg7Iy
mdnUvlNVUbxPoKV1oA9Ih6GEciZwTapVdhXnilsI+T6DKgWtB52xAfuK6cwL3S4djT29KCw7ekms
OtNciWVVYsSY7zCrKqlJeTGlcz8bexNWRp4d6QMUT9FsmCcBPlwp+qmRIbnEmDGBX6aEuzsjAw0Q
nq63jEFpI2I32lapfAouimCbrW9ZsB13QyPPxpTZmkjOvB2G2TZPElVJB3+CP4j+vWxNmeU3ZDNm
UM0yeTIxVSVZgFBIOwSFUf4jrqp87+eqn0z9NL6WMF69oAy5y/z/AOQjSGbyM1EzY8rqGmxUJs5l
LmpNfdbl5iSySepDSuMWVzV3VyJgRXUeghWkAtuTCNsmelef7bwvgU703vhF5yZLMeZKkZzk+e5I
BXYsSaGX5PnIQBkmd2EnP8hcz/XCX0ULU2o3xBXhZqQ0tGLg4QAFAiHRtHrjcH89fWe8JeWvBnkg
KL9nqSbRwHy1gIjfZsFdVekcIsoMrEKS4GrFUdxqBR2tPZxZUeci6sKxiPIiOxX3+OcW12hX2x9V
if7mM6m3LyweCcxFHX5YDlzJDEmqgzZbbzP8qMpbLvYtuWdiPqRCjc69XUSH50ZhU7rqJLU5n/Ee
x9w7vDveXhu3ccUY7o4tkSTnFce0C8pb08nQHaoHqKUnkeZGKiS7h8E+Md377h/JszAN+6Y307zu
uVkLKrY5x3xXtGdUSngpIUAXx+YVtK5rB1mjCsiuEDvhPHiLOBIwMNIpSM0BtPPu6rUjiM2SC0Pn
COxHKsFlZzbTyUFq3zmxoBI+zfR/2dqYWZ+U6voMIj1QZ84ZMrfSNSP9O9WnqPi31C1I6phbXeNO
sdT1DKk9QlClLj8QhDDzq1qbR+pShtebr1fJKBcbBC30VdlgCGWTlyHBJIdSrofFrNVLXjcVdRHs
Jb77cGlo6xiELU7j66cRbsCVsZgVKSwjVZC3+bc459uJOBrnOJRznOWkf7c7z5fLnE9cVzieq71a
eJ+CUdW5ziP7+/418GWVNMhsugq9MvJaQQ0YLB8h2jvySkVImw9LNVAICgDrf7ZDPlLIPcKyraub
lvLxWrZVxnyqPjhmtj4vFliyjxziJSXjObOqh2ss8wB1VtO0VWf2wodHrT2e72YVgNmVjErNCNyT
KfPura2LBInZTA7RW4VqakwLSiaHGgYqlcYuZH6CnlTv0yfxN2sZhk+R5Ro2jlmW7yMaTEcwwabw
Es1YUpdF83GevxPby48Xe583AYl7o85VH5Qzrah0GjguB3d7l27DcWNbSa9FHoBbT9Q+khsUmzrI
X1AdpbGzE9BBZ8tt0fsVSRHVc+Kcr0Gl7Hu4VpCbSRgBqTD65yIn7jWIs1WNRJg2sWHNjiELUchr
ksphk4gxyO2603xFlG538p7vVOtcWtTnUNuL4jvUuckc4lKOfbvW+9e7XHyK2LrktGXCKhFSjMeN
PJQjX2KXXihJ3sAKfR11zJw8m2RzTJMZcIDigdqHjflYL/LDUmVA57RtBagoSOuguJ5tCR3csEGO
0mogtOQe3vP+BZ7pR9OADkM9r5gcHpBT33qbzKKmGNQglrJhmEHBBHNHZr3qcCnUvpDIohYbTKl6
HJ1X4qfyfjd3hGNabK04tG6M6Y8x2RN6MeC9yKsJoJm7mOVCWg0JOQyPLYF5gzVfnqRo93WHWhSP
fh6mYcYnaZ1f55muhGtqNYvRlnfpUbyG7nE+X6KBiBVPrnKtBSmhAyQiHOdl18+ESZ1dGVIR2eWa
MPz6qBZh2qZ3MG9ICrVhNiKFVRLcmuzgVvRcZbf/AFnCQP7L+Ckdd5ZR0fNCm+tuN94lf2+LyVOJ
V1xL/wCX1XF9S8hKo7gDh5rceOY01R9qeLM1AxBJfX3KE9BdbLbH40B0D9HZ7Mu+4vJE/dmatRnB
cOBVnbmApI/Bb2zBOM1mo6CqfLB6gzj1QyReLvVmY6gz5RvD8SzDY9CArk+BKQE9KeU6u33ODWPe
dwvUoge5XaEQ/wAgt5WR54Gws8x3fwGk2k3s9AO7PzBWJ/Ju96rvVdQrqlKc5zq+K4txx13nO/fr
aFISlfFMPKS65IQ6txT63v1KnEwb0TF2EtoZIg5KGJKpbPxnRW1tSFc6hx5pxLilsPOI71TCo3WW
oS3Oo/Ilx20sq97/ADbnX9f+dDP9c7z7JsYjaf7Wtzvfy0L43znycV1KUpTxvneoT92/y0NN48KR
NWerWNWmV3zPAogQ+mGwGBGvet+/7dO4eLbHaxpdri1FcMxbYCwWIBDHa7Yhyp2AfXrXU1bAQdfy
PUGPl37O56aN/HiU9+/5g3ZI4pS+r+X/ALVz785zvPt3vf77znO5+FuN9VCyIKMKGnLKSztbkWv6
quroU5mRMnTrGqlwocSLHbUp19+TKfZZbaaQtfVL+/x+KVd5n4fljXuCZSdwG2So/HILre9fnR/5
0WuTjQKpa8ZMQWC0qiMVOgDpmB0T6/31/9k=

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://json-lib.sourceforge.net/images/logos/maven-feather.png

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

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://json-lib.sourceforge.net/images/javatoolbox.png

iVBORw0KGgoAAAANSUhEUgAAAEoAAAAeCAMAAAC8EXiiAAAAB3RJTUUH1gwSEhQpRO0foAAAAAlw
SFlzAAAewQAAHsEBw2lUUwAAAARnQU1BAACxjwv8YQUAAAFHUExURUREPywsLjEwL3BwZaamlZ+f
kKCgkP394fLy2PX12pycjOfnzujozu7u1Ovr13V1aoqKe76+qd7dxtPUvaiolsLCrc3NuOHhycbG
sdraxbi4pJiYj7W1ocnJtKysmZeXh1paUhUVFzU1MkpKRBwcHSAgIH5+cfDw1kFBPCQkIzs7Nmxs
YVNTS7GxnmJjWT4+OSgoJ9fXwHY/OLeIebW1rZBKQqOjmbRwZz4zMD0mJLKZiaRYULetpJg/OM5R
SONWTdzc1NTUyOTk0ZublMvMxOliWeDh0tDPxefn3MXFutzcztfY0Lu8tMmShOx2beptZbFiWZmC
d6+yp+7v5vPz6OPj2dSqme1+dfByaZ6OhtLItOG8rvGEfM9xaebq0eHGt+yPhfaLg+fpz+bXxOub
j/eTivOjmfack/i0q/fOxfi+tfv79OqyqHMCNIUAAANlSURBVHjarZbre9o2FIdtQxywbGEsDBhD
4oMtgonBkGxtCVsCNCEUlstKSLo1TS9ZLk37/3+ebLyN7Uk/xOvvAUtH9vOeI+nIxxzHfydxnJBI
rsSUKJmSGPWTCYHjk6upuMJfzpSou5rkOV5KoZiSjf35GMlhPyX9PxTJ6v1BAcdFycuG0alMF6xY
UQ2H4/l8NBgMJpPJ4XR2/fXrNY6DktFk9oXpbMY0Hvf339/f395eX8WKSusMJqP5fN6fBnp79/D5
4eboSo41wYLWyb8qVpjylfO7u/vPD5enBRx3B8fjDrteabc3TLcfets4XlRI1mYzgpFy/cdHppuL
3nbh09PXSg5+2OiPCFbef7hk+viud4Q+xdnB4UhjqOkhUd5eXjBdvuudXwWp9hfKaL56PIhQ/56a
MRpOzubk/OL4+PjNyelvv4fJ/jfqJdSVR0jKQnhpyBgzt5PpL0fHJycHB3unv76eLPI/Qsnr4BP5
P+EwUs32AmUxUzAaNBpzu1+H3sHe3t5ub39UORyGKxiiVlbRGnAEa0RTkEYKCBGNZSKzLIdSxwEz
jYjBYttgN5QN5vanF/Tn3V1G2unnUXYwxFhZQjWIJfDVDMqBiprsH1qklHF4NUnW7HY1Y2wkuXa1
JjO3z7u02+5u9XY2Bd4rPfO5puhbqhCiggnanMXDOqJVZAGJrLQEgp4quo4tQC3LGh5U5vb5C9rt
UrrTgoYPfsmGdhu8ACWlkQr1kuRxbSeBWs4a2CiyAlQ2rYJHRMe3wOpIYDO3YpVu/SjQVtt9VvRB
0huU2sVwgqizDo2mS1sNSKAsBZBQZC1QNWildKfhwWa65PjMre7TrW3bsVz3B9wCVfEotbAYoJI1
D7gKCLUAhQRKCyiy0ibw2VQOeNUCrwZV1YMWc1vxwUu0XcmHVqbtllW2O6CGKAugahZsh/J8DSGT
muz0L6yNHF/XMcq44DRy2iYFp14u817eElxwM0azCsxLqcFnEjwXrlVGlbKaTMScrudZJuh68NYO
LblQ1A0Zo5K5orPXbtkUiwhVihrRy+YaQbgoSWWtUNGJpufXv3kGF9kvYyyH16CNGpanGC+yFivB
SGikV5ZRsoy+pejW0hOL7j8nNEzRx0pqOv3U6hqU1EcLvSiKTyr5i0L//T4//gQtnKvC1VVOeQAA
AABJRU5ErkJggg==

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.linuxlinks.com/portal/content/logos/newlogo2.gif

R0lGODlhVgAYAOYAAP////Ly9Obm5v//AN7e4NLW3tDU2MzMzOXmCejNSMTGyunNNujOHe7RD9LU
GOLFGvHED729vvW9DdzFDs7PFbW1ta20v9i1Rb/CGcGtjK+vr+ivDeC0GamstbWtnrumZ8CyIaKl
rd+lCa2xPcqsBsyZAKWtJJmZmaGlMZSYpdOTC7uQOpmZM4mTo8CPDZScKZScJYyMjbeOBYqQY72D
CauQHJCUHIuVMrGEBoOIT3p/iX+JOHN7nIyQGHt7fHF3ipR2OGt7lHJyc2t3iqZuB3Z2WGNzjJlm
AG91Q2Vrd1prjFprhGVxPYZpBWFoV2ZmZlJjhFJje2ZmM4VcCFVddFxcXkpae1llMVhePEpac1RU
VEpSa0JSY0tTVERSQWZHB0JKY0pKSj9HWjlKYz5FVTlCYzlCWkFBQTFCUjFCWjk8VDE5Ukg4AzE5
SjExSikxSjMzMykxQiExQiEpQicnKTUpDCEpOSEhOSEhIhghMS4hARYbJBoaGhAQEQsKCAAAACH5
BAQUAP8ALAAAAABWABgAAAf/gFBKSkZGSlCIUFGIg0uKWWtvb2trbWtqamZqbWppYJ9bYmaiZmBi
n2l3eat2dquveXt9f7S1tre1frq2jEZBh4tRVsOJi1lplGiWbW7LbmuloFxipFyfYGZvr3aqd96v
s7S6fnx8uLa6dHB+tFaD78LDi4r0UVljZsjPzG5ucc1qwHDZQvCTmDECwYwRg0bVqm+t5nAL90dX
nz508ODyQ0dLlTDq4LQblAgKMUGIhC0RtgUfGklv3MR8E+dNm1MEt3CZNsYaNjFp4rzq1qpZnD21
6AiJ8YQPHYoVtcQ4EULDCTp8ZlmJN8xKlixWSnZ91HJNTTtz4sSxoxYaqILW/065NOuKVZ47cuJY
QvoHj48KCjQI4cNOnJYQFSIoMBDBRx92YAkQ+Op1rKKwURzZ44Imjhxud7ixVQOgA84tBheaQVMp
zh2JodGqpZKkDa0uGgwIEGBAiy06IQgEGB7AwIkztL4WKPAVrBULAJa0KA1lupIoks2YARAiSekf
AHTEAZAi0ycqpcF0AJBETogCdrwnAR8iTocABwJo+OOjQAwfBwCgAUVPCHeAD0+EsFsM7BC03BbN
ZbFeFjwAQN50wiyHDQAt5AFeAOKNl8Il2oGRXggABLBFCgfM4Z0FASTRSmm0neHHCT78ccYTuq0z
ixC7ibSjDgAYoNEYWxhgQP9CBK23RRAcAqAAAPYouWEMe+QRAABiqEVeJmqsYWIHW4RgAIwKHNCG
dwIE0EUrSSigQHE3hqFjFQqewQccfAgRQAXs+HFGGG36VsYYBhAwxKI8jIHiGOCNMR2VVuSnQwrh
7RGCAsv9A4AFPyw6xJgSGmAGdAasyV4IAYAxRws6UMHqjb7xEUaB6/jRRxgEhGBLH/kZOkYESiqp
wIoGbDFEsmN0UIBKixmQQhxxEnRACmQUq2QISaZQpgJgkKGABW8kcUAScxwQARo6RHBABSIJkeMf
fWDxQRP44ptBDL8G+0c+ACMExhb5gFGGGWXsNFBzXJjhyh5Z5sFWM9SUclD/QQRxMQYaaugVh0Rs
pdWMHbTAcQByehAhggQsk+ACCTWwIc4Tw9m5BjJplIJPGQcZrB3PAzeHzVqwtKKWG2qccspXORWk
jBxytPFGWmm10YYctPQRQQVf4CDCBhJAAMEEIDzQAAdNfDGDAAAw+McarN1sBj45l6Ld3NfkJArR
RavFySimZJFTcy29FLXf/tjURmFVfKAC2GFD0EADC1TOwAQTcHDBB3XQAvcLoN/QRRqdIAzUKGUY
LJBOTzvESk1rnIIECiw8kUUOOWTBwgi873CGDTAEL4XUNMUxix9f0PA1y2I3wMACCSzwAOaYc0AE
O5QMwAQTL2Bgxg4UgKCF/xk3UEABBk6AT4EDO4hxAwyu9NBDUZyIwYIDReTgwBO8R5HDDAPA3RgG
IAUpXAELlWiDWmaRvMexLGyTg94CLke9CTyAA52LxACChwETgI8MSEDAGl4AAiRQgAVdAMMAxjA6
DCAADnmQH1v0kjQnIMABDhhBFHiHiCUMYAlLyMIAQOcFOVDCanPQxRFo4ECWTY4BCUgABTFHAhmo
QAV6+IMkBnCFA47QBGsgwwBGeD4KpLAMA2ANEzCAARvEcH41sYQYFvYEBMyAd0A0wgAKEYUBIAEJ
YZCDGtBgBgXqYgrKg5wEIjhB6lWxBCIQgQuy+AY5DEAScniDFxxgAgrAwP8NwQuDA5yAjzSugQIF
dAAcbEABG9gAC5YwAxIcgIIRIGCHIwCiEvY4BD3yDgVIqNhLZqGHL7gAcpJjgDKpiAOvRVIFTWCH
Ta5wBkxKQgpekAQWEIgEJ5ihC0joAhmYQJMreMELXaSmJAhZBSQU4StFEAIQhzADHfBABzPI5wyc
YJBCzqIPX+jaBiDwvMuRAAf4Ut4zV1CEWWByDpmkSfHSAhNo8ExgZqhE8dRSk0kQcm4QyoIwMjOI
QgQhCIUAouAWggakhMEDQJjCEWRQRRnggAhEcMEVr7iCDCQGOTCRKEzkMAeKSoIS0TDFGKwm0bYM
8m5pQIhIVwKFJTTCFyijNQIQo0AFa6AhD3/QggJgegQikIAEJdjpFV1Qgw+4S10+8ENEKxnUqRW1
o5NImCm0Qwm1xARppzDIwLawFSUA0aol5QEPgrDVKGzGDEjRQgQiQFYm7pQGmF2BBxRDAN5E4Axz
oOtcaVLU0FYUDZ9YDTIi4VdOXOMTXKACFabqiEQswQiK5cEQVpKF2YJhcWGdLGWBUFac4rStiVFA
m4YjgBgEAgA7

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://json-lib.sourceforge.net/images/icon_warning_sml.gif

R0lGODlhDwAPAOYAAAAAAP///7icp7qhq2JgYXdyfZOOpJiguqGov6yyxn6OsISSsmp8oKOvx2Zz
ioSZuqe3zrfE18TP38vU4qO0zNzj7FtNQI9LFIM/CuBrEq5UDqNODZRHDEokBvl3FfFzFO9yFOpw
FNtpEtdmEtZmEtRlEs5jEc1iEcdfEb9bELxaELBUD6lRDqRPDppKDZBFDI9EDI9FDIM/C2kyCedu
FORtFMNdEblYELdXELVWEJVIDYlBDIA9C2gyCV0tCMtiFPl6Hfl7Hux6JqtaHb9pJtdpGfl/KMtq
JvmDMfmDMvqGN8xtLUQyJcxwNPqKQvqOSdh8RMx1QPqUWfqYYeaNXMx9UteIW6Z2W/qdbUk6Ms2D
YPuhdvukf/ung9mRcz0uKCkbFvuqiysdGCodGPutkeeghS4hHNOXgTwsJumkjTUmIToqJbKHeSoc
GIp2cOusnCocGSweGy0dGqiHgpp+esefnv///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEAAHYALAAAAAAPAA8AAAedgHaCg4SFhgkCCIaFEW9hZRSLgwNkXVtzknYNaQGdVAqLFXVenQFQ
VxOGB1xapU1JDoUSZ1hVpUdBRBCEBlNSUaU/HzQEgxRWT05LpSkZI0MPgm5KSEZFMD0YNyc2KhZ2
C0JAHh8lpSs4GiwXDGwgITUiOaUcGy46L0x0IiQmKC0zOviQEWOHDB5Z7BT4gmaNGjNj4MSRI6YN
GDuBAAA7

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/css/maven-base2.css

BODY {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
IMG {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
TABLE {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; =
MARGIN-LEFT: -2px; WIDTH: 100%; MARGIN-RIGHT: -2px; PADDING-TOP: 0px
}
ACRONYM {
	CURSOR: help; BORDER-BOTTOM: #feb 1px dotted
}
TABLE.bodyTable TH {
	PADDING-RIGHT: 4px; PADDING-LEFT: 4px; PADDING-BOTTOM: 2px; =
VERTICAL-ALIGN: top; PADDING-TOP: 2px
}
TABLE.bodyTable TD {
	PADDING-RIGHT: 4px; PADDING-LEFT: 4px; PADDING-BOTTOM: 2px; =
VERTICAL-ALIGN: top; PADDING-TOP: 2px
}
DIV.clear {
	CLEAR: both; VISIBILITY: hidden
}
DIV.clear HR {
	DISPLAY: none
}
#bannerLeft {
	FONT-WEIGHT: bold; FONT-SIZE: xx-large
}
#bannerRight {
	FONT-WEIGHT: bold; FONT-SIZE: xx-large
}
#bannerLeft IMG {
	MARGIN: 0px
}
#bannerRight IMG {
	MARGIN: 0px
}
.xleft {
	FLOAT: left; text-shadow: #7CFC00
}
#bannerLeft IMG {
	FLOAT: left; text-shadow: #7CFC00
}
.xright {
	FLOAT: right; text-shadow: #7CFC00
}
#bannerRight IMG {
	FLOAT: right; text-shadow: #7CFC00
}
#banner {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#banner IMG {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
#breadcrumbs {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 3px; =
PADDING-TOP: 3px
}
#leftColumn {
	FLOAT: left; OVERFLOW: auto; WIDTH: 170px
}
#bodyColumn {
	MARGIN-LEFT: 197px; MARGIN-RIGHT: 1.5em
}
#legend {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 8px; =
PADDING-TOP: 8px
}
#navcolumn {
	PADDING-RIGHT: 4px; PADDING-LEFT: 8px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 8px
}
#navcolumn H5 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-SIZE: small; =
PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-TOP: 0px
}
#navcolumn UL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-SIZE: small; =
PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-TOP: 0px
}
#navcolumn LI {
	BACKGROUND-POSITION: 0px 0.4em; PADDING-LEFT: 16px; =
LIST-STYLE-POSITION: outside; FONT-SIZE: smaller; BACKGROUND-IMAGE: =
none; LINE-HEIGHT: 1.2em; BACKGROUND-REPEAT: no-repeat; LIST-STYLE-TYPE: =
none
}
#navcolumn LI.expanded {
	BACKGROUND-IMAGE: url(../images/expanded.gif)
}
#navcolumn LI.collapsed {
	BACKGROUND-IMAGE: url(../images/collapsed.gif)
}
#poweredBy {
	TEXT-ALIGN: center
}
#navcolumn IMG {
	MARGIN-TOP: 10px; MARGIN-BOTTOM: 3px
}
#poweredBy IMG {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; DISPLAY: =
block; MARGIN: 20px 0px 20px 17px; BORDER-LEFT: black 1px solid; WIDTH: =
90px; BORDER-BOTTOM: black 1px solid; HEIGHT: 30px
}
#search IMG {
	DISPLAY: block; MARGIN: 0px
}
#search #q {
	BORDER-RIGHT: #999 1px solid; BORDER-TOP: #999 1px solid; =
MARGIN-BOTTOM: 10px; BORDER-LEFT: #999 1px solid; BORDER-BOTTOM: #999 =
1px solid
}
#search #btnG {
	BORDER-RIGHT: #999 1px solid; BORDER-TOP: #999 1px solid; =
MARGIN-BOTTOM: 10px; BORDER-LEFT: #999 1px solid; BORDER-BOTTOM: #999 =
1px solid
}
#search FORM {
	MARGIN: 0px
}
#lastPublished {
	FONT-SIZE: x-small
}
.navSection {
	PADDING-RIGHT: 8px; PADDING-LEFT: 8px; MARGIN-BOTTOM: 2px; =
PADDING-BOTTOM: 8px; PADDING-TOP: 8px
}
.navSectionHead {
	FONT-WEIGHT: bold; FONT-SIZE: x-small
}
.section {
	PADDING-RIGHT: 4px; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; =
PADDING-TOP: 4px
}
#footer {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; FONT-SIZE: x-small; =
PADDING-BOTTOM: 3px; PADDING-TOP: 3px
}
#breadcrumbs {
	FONT-SIZE: x-small; MARGIN: 0pt
}
.source {
	PADDING-RIGHT: 12px; PADDING-LEFT: 12px; PADDING-BOTTOM: 12px; MARGIN: =
1em 7px; PADDING-TOP: 12px
}
.source PRE {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/css/maven-theme.css

BODY {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 10px; =
PADDING-TOP: 0px
}
BODY {
	FONT-SIZE: 13px; FONT-FAMILY: Verdana, Helvetica, Arial, sans-serif
}
TD {
	FONT-SIZE: 13px; FONT-FAMILY: Verdana, Helvetica, Arial, sans-serif
}
SELECT {
	FONT-SIZE: 13px; FONT-FAMILY: Verdana, Helvetica, Arial, sans-serif
}
INPUT {
	FONT-SIZE: 13px; FONT-FAMILY: Verdana, Helvetica, Arial, sans-serif
}
LI {
	FONT-SIZE: 13px; FONT-FAMILY: Verdana, Helvetica, Arial, sans-serif
}
CODE {
	FONT-SIZE: 13px; FONT-FAMILY: Courier, monospace
}
A {
	TEXT-DECORATION: none
}
A:link {
	COLOR: #36a
}
A:visited {
	COLOR: #47a
}
A:active {
	COLOR: #69c
}
A:hover {
	COLOR: #69c
}
#legend LI.externalLink {
	PADDING-LEFT: 18px; BACKGROUND: url(../images/external.png) no-repeat =
left top
}
A.externalLink {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/external.png) no-repeat =
right center
}
A.externalLink:link {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/external.png) no-repeat =
right center
}
A.externalLink:visited {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/external.png) no-repeat =
right center
}
A.externalLink:active {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/external.png) no-repeat =
right center
}
A.externalLink:hover {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/external.png) no-repeat =
right center
}
#legend LI.newWindow {
	PADDING-LEFT: 18px; BACKGROUND: url(../images/newwindow.png) no-repeat =
left top
}
A.newWindow {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/newwindow.png) no-repeat =
right center
}
A.newWindow:link {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/newwindow.png) no-repeat =
right center
}
A.newWindow:visited {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/newwindow.png) no-repeat =
right center
}
A.newWindow:active {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/newwindow.png) no-repeat =
right center
}
A.newWindow:hover {
	PADDING-RIGHT: 18px; BACKGROUND: url(../images/newwindow.png) no-repeat =
right center
}
H2 {
	BORDER-RIGHT: #999 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: #999 1px =
solid; PADDING-LEFT: 6px; FONT-WEIGHT: 900; FONT-SIZE: x-large; =
PADDING-BOTTOM: 4px; BORDER-LEFT: #999 1px solid; COLOR: #900; =
PADDING-TOP: 4px; BORDER-BOTTOM: #999 1px solid; BACKGROUND-COLOR: #ddd
}
H3 {
	BORDER-RIGHT: #aaa 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: #aaa 1px =
solid; PADDING-LEFT: 6px; FONT-WEIGHT: normal; FONT-SIZE: large; =
PADDING-BOTTOM: 4px; BORDER-LEFT: #aaa 1px solid; COLOR: #900; =
PADDING-TOP: 4px; BORDER-BOTTOM: #aaa 1px solid; BACKGROUND-COLOR: #eee
}
H4 {
	BORDER-RIGHT: #bbb 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: #bbb 1px =
solid; PADDING-LEFT: 6px; FONT-WEIGHT: normal; FONT-SIZE: large; =
PADDING-BOTTOM: 4px; BORDER-LEFT: #bbb 1px solid; COLOR: #900; =
PADDING-TOP: 4px; BORDER-BOTTOM: #bbb 1px solid; BACKGROUND-COLOR: #fff
}
H5 {
	PADDING-RIGHT: 4px; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; COLOR: =
#900; PADDING-TOP: 4px
}
P {
	FONT-SIZE: small; LINE-HEIGHT: 1.3em
}
#breadcrumbs {
	BORDER-TOP: #aaa 1px solid; BORDER-BOTTOM: #aaa 1px solid; =
BACKGROUND-COLOR: #ccc
}
#leftColumn {
	BORDER-RIGHT: #999 1px solid; BORDER-TOP: #999 1px solid; MARGIN: 10px =
0px 0px 5px; BORDER-LEFT: #999 1px solid; BORDER-BOTTOM: #999 1px solid; =
BACKGROUND-COLOR: #eee
}
#navcolumn H5 {
	FONT-SIZE: smaller; COLOR: #000; PADDING-TOP: 2px; BORDER-BOTTOM: =
#aaaaaa 1px solid
}
TABLE.bodyTable TH {
	FONT-WEIGHT: bold; COLOR: white; BACKGROUND-COLOR: #bbb; TEXT-ALIGN: =
left
}
TABLE.bodyTable TH {
	FONT-SIZE: 1em
}
TABLE.bodyTable TD {
	FONT-SIZE: 1em
}
TABLE.bodyTable TR.a {
	BACKGROUND-COLOR: #ddd
}
TABLE.bodyTable TR.b {
	BACKGROUND-COLOR: #eee
}
.source {
	BORDER-RIGHT: #999 1px solid; BORDER-TOP: #999 1px solid; BORDER-LEFT: =
#999 1px solid; BORDER-BOTTOM: #999 1px solid
}
DL {
	BORDER-RIGHT: #aaa 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: #aaa 1px =
solid; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; BORDER-LEFT: #aaa 1px =
solid; PADDING-TOP: 4px; BORDER-BOTTOM: #aaa 1px solid; =
BACKGROUND-COLOR: #ffc
}
DT {
	COLOR: #900
}
#organizationLogo IMG {
	MARGIN: 8px
}
#projectLogo IMG {
	MARGIN: 8px
}
#projectLogo SPAN {
	MARGIN: 8px
}
#banner {
	BORDER-BOTTOM: #fff 1px solid
}
.errormark {
	BACKGROUND: url(../images/icon_error_sml.gif) no-repeat
}
.warningmark {
	BACKGROUND: url(../images/icon_error_sml.gif) no-repeat
}
.donemark {
	BACKGROUND: url(../images/icon_error_sml.gif) no-repeat
}
.infomark {
	BACKGROUND: url(../images/icon_error_sml.gif) no-repeat
}
.warningmark {
	BACKGROUND-IMAGE: url(../images/icon_warning_sml.gif)
}
.donemark {
	BACKGROUND-IMAGE: url(../images/icon_success_sml.gif)
}
.infomark {
	BACKGROUND-IMAGE: url(../images/icon_info_sml.gif)
}

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/css/SyntaxHighlighter.css

.dp-highlighter {
	BORDER-RIGHT: #2b91af 1px solid; BORDER-TOP: #2b91af 1px solid; =
FONT-SIZE: 12px; MARGIN: 18px 0px; OVERFLOW: auto; BORDER-LEFT: #2b91af =
1px solid; WIDTH: 99%; BORDER-BOTTOM: #2b91af 1px solid; FONT-FAMILY: =
"Courier New" , Courier, mono; BACKGROUND-COLOR: #fff
}
.dp-highlighter .bar {
	PADDING-LEFT: 45px
}
.collapsed .bar {
	PADDING-LEFT: 0px
}
.nogutter .bar {
	PADDING-LEFT: 0px
}
.dp-highlighter OL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px =
0px 1px 45px; COLOR: #2b91af; PADDING-TOP: 0px
}
.nogutter OL {
	MARGIN-LEFT: 0px; LIST-STYLE-TYPE: none
}
.dp-highlighter OL LI {
	PADDING-LEFT: 10px; BORDER-LEFT: #6ce26c 3px solid; LINE-HEIGHT: 14px; =
BACKGROUND-COLOR: #fff
}
.dp-highlighter .columns DIV {
	PADDING-LEFT: 10px; BORDER-LEFT: #6ce26c 3px solid; LINE-HEIGHT: 14px; =
BACKGROUND-COLOR: #fff
}
.nogutter OL LI {
	BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-RIGHT-WIDTH: 0px
}
.nogutter .columns DIV {
	BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: =
0px; BORDER-RIGHT-WIDTH: 0px
}
.dp-highlighter .columns {
	OVERFLOW: hidden; WIDTH: 100%; COLOR: gray
}
.dp-highlighter .columns DIV {
	PADDING-BOTTOM: 5px
}
.dp-highlighter OL LI.alt {
	BACKGROUND-COLOR: #f8f8f8
}
.dp-highlighter OL LI SPAN {
	COLOR: black
}
.collapsed OL {
	MARGIN: 0px
}
.collapsed OL LI {
	DISPLAY: none
}
.printing {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
.printing .tools {
	DISPLAY: none! important
}
.printing LI {
	DISPLAY: list-item! important
}
.dp-highlighter .tools {
	PADDING-RIGHT: 8px; PADDING-LEFT: 10px; PADDING-BOTTOM: 3px; FONT: 9px =
Verdana, Geneva, Arial, Helvetica, sans-serif; COLOR: silver; =
PADDING-TOP: 3px; BORDER-BOTTOM: #2b91af 1px solid
}
.collapsed .tools {
	BORDER-BOTTOM-WIDTH: 0px
}
.dp-highlighter .tools A {
	FONT-SIZE: 9px; COLOR: gray; MARGIN-RIGHT: 10px; TEXT-DECORATION: none
}
.dp-highlighter .tools A:hover {
	COLOR: red; TEXT-DECORATION: underline
}
.dp-about {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px; BACKGROUND-COLOR: #fff
}
.dp-about TABLE {
	FONT-SIZE: 11px; WIDTH: 100%; FONT-FAMILY: Tahoma, Verdana, Arial, =
sans-serif! important; HEIGHT: 100%
}
.dp-about TD {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 10px; =
VERTICAL-ALIGN: top; PADDING-TOP: 10px
}
.dp-about .copy {
	BORDER-BOTTOM: #aca899 1px solid; HEIGHT: 95%
}
.dp-about .title {
	FONT-WEIGHT: bold; COLOR: red
}
.dp-about .para {
	MARGIN: 0px 0px 4px
}
.dp-about .footer {
	BORDER-TOP: #fff 1px solid; BACKGROUND-COLOR: #eceadb; TEXT-ALIGN: =
right
}
.dp-about .close {
	FONT-SIZE: 11px; WIDTH: 60px; FONT-FAMILY: Tahoma, Verdana, Arial, =
sans-serif! important; HEIGHT: 22px; BACKGROUND-COLOR: #eceadb
}
.dp-c {
=09
}
.dp-c .comment {
	COLOR: green
}
.dp-c .string {
	COLOR: blue
}
.dp-c .preprocessor {
	COLOR: gray
}
.dp-c .keyword {
	COLOR: blue
}
.dp-c .vars {
	COLOR: #d00
}
.dp-vb {
=09
}
.dp-vb .comment {
	COLOR: green
}
.dp-vb .string {
	COLOR: blue
}
.dp-vb .preprocessor {
	COLOR: gray
}
.dp-vb .keyword {
	COLOR: blue
}
.dp-sql {
=09
}
.dp-sql .comment {
	COLOR: green
}
.dp-sql .string {
	COLOR: red
}
.dp-sql .keyword {
	COLOR: blue
}
.dp-sql .func {
	COLOR: #ff1493
}
.dp-sql .op {
	COLOR: #808080
}
.dp-xml {
=09
}
.dp-xml .cdata {
	COLOR: #ff1493
}
.dp-xml .comments {
	COLOR: green
}
.dp-xml .tag {
	FONT-WEIGHT: bold; COLOR: blue
}
.dp-xml .tag-name {
	FONT-WEIGHT: bold; COLOR: black
}
.dp-xml .attribute {
	COLOR: red
}
.dp-xml .attribute-value {
	COLOR: blue
}
.dp-delphi {
=09
}
.dp-delphi .comment {
	COLOR: #008200; FONT-STYLE: italic
}
.dp-delphi .string {
	COLOR: blue
}
.dp-delphi .number {
	COLOR: blue
}
.dp-delphi .directive {
	COLOR: #008284
}
.dp-delphi .keyword {
	FONT-WEIGHT: bold; COLOR: navy
}
.dp-delphi .vars {
	COLOR: #000
}
.dp-py {
=09
}
.dp-py .comment {
	COLOR: green
}
.dp-py .string {
	COLOR: red
}
.dp-py .docstring {
	COLOR: green
}
.dp-py .keyword {
	FONT-WEIGHT: bold; COLOR: blue
}
.dp-py .builtins {
	COLOR: #ff1493
}
.dp-py .magicmethods {
	COLOR: #808080
}
.dp-py .exceptions {
	COLOR: brown
}
.dp-py .types {
	COLOR: brown; FONT-STYLE: italic
}
.dp-py .commonlibs {
	COLOR: #8a2be2; FONT-STYLE: italic
}
.dp-rb {
=09
}
.dp-rb .comment {
	COLOR: #c00
}
.dp-rb .string {
	COLOR: #f0c
}
.dp-rb .symbol {
	COLOR: #02b902
}
.dp-rb .keyword {
	COLOR: #069
}
.dp-rb .variable {
	COLOR: #6cf
}
.dp-css {
=09
}
.dp-css .comment {
	COLOR: green
}
.dp-css .string {
	COLOR: red
}
.dp-css .keyword {
	COLOR: blue
}
.dp-css .colors {
	COLOR: darkred
}
.dp-css .vars {
	COLOR: #d00
}
.dp-j {
=09
}
.dp-j .comment {
	COLOR: rgb(63,127,95)
}
.dp-j .string {
	COLOR: rgb(42,0,255)
}
.dp-j .keyword {
	FONT-WEIGHT: bold; COLOR: rgb(127,0,85)
}
.dp-j .annotation {
	COLOR: #646464
}
.dp-j .number {
	COLOR: #c00000
}
.dp-cpp {
=09
}
.dp-cpp .comment {
	COLOR: #e00
}
.dp-cpp .string {
	COLOR: red
}
.dp-cpp .preprocessor {
	FONT-WEIGHT: bold; COLOR: #cd00cd
}
.dp-cpp .keyword {
	FONT-WEIGHT: bold; COLOR: #5697d9
}
.dp-cpp .datatypes {
	FONT-WEIGHT: bold; COLOR: #2e8b57
}
.dp-g {
=09
}
.dp-g .comment {
	COLOR: rgb(63,127,95)
}
.dp-g .string {
	COLOR: rgb(42,0,255)
}
.dp-g .keyword {
	FONT-WEIGHT: bold; COLOR: rgb(127,0,85)
}
.dp-g .type {
	FONT-WEIGHT: bold; COLOR: rgb(0,127,0)
}
.dp-g .modifier {
	FONT-WEIGHT: bold; COLOR: rgb(100,0,100)
}
.dp-g .constant {
	FONT-WEIGHT: bold; COLOR: rgb(255,0,0)
}
.dp-g .method {
	FONT-WEIGHT: bold; COLOR: rgb(255,96,0)
}
.dp-g .number {
	COLOR: #c00000
}

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/scripts/shCore.js

var =
dp=3D{sh:{Toolbar:{},Utils:{},RegexLib:{},Brushes:{},Strings:{},Version:"=
1.4.1"}};dp.sh.Strings=3D{AboutDialog:"<html><head><title>About...</title=
></head><body class=3D\"dp-about\"><table cellspacing=3D\"0\"><tr><td =
class=3D\"copy\"><p class=3D\"title\">dp.SyntaxHighlighter</div><div =
class=3D\"para\">Version: {V}</p><p><a =
href=3D\"http://www.dreamprojections.com/syntaxhighlighter/?ref=3Dabout\"=
 =
target=3D\"_blank\">http://www.dreamprojections.com/SyntaxHighlighter</a>=
</p>&copy;2004-2005 Alex Gorbatchev. All right =
reserved.</td></tr><tr><td class=3D\"footer\"><input type=3D\"button\" =
class=3D\"close\" value=3D\"OK\" =
onClick=3D\"window.close()\"/></td></tr></table></body></html>"};dp.Synta=
xHighlighter=3Ddp.sh;dp.sh.Toolbar.Commands=3D{ExpandSource:{label:"+ =
expand source",check:function(_1){return =
_1.collapse;},func:function(_2,_3){_2.parentNode.removeChild(_2);_3.div.c=
lassName=3D_3.div.className.replace("collapsed","");}},ViewSource:{label:=
"view plain",func:function(_4,_5){var =
_6=3D_5.originalCode.replace(/</g,"&lt;");var =
_7=3Dwindow.open("","_blank","width=3D750, height=3D400, location=3D0, =
resizable=3D1, menubar=3D0, =
scrollbars=3D1");_7.document.write("<textarea =
style=3D\"width:99%;height:99%\">"+_6+"</textarea>");_7.document.close();=
}},CopyToClipboard:{label:"copy to clipboard",check:function(){return =
window.clipboardData!=3Dnull;},func:function(_8,_9){window.clipboardData.=
setData("text",_9.originalCode);alert("The code is in your clipboard =
now");}},PrintSource:{label:"print",func:function(_a,_b){var =
_c=3Ddocument.createElement("IFRAME");var =
_d=3Dnull;_c.style.cssText=3D"position:absolute;width:0px;height:0px;left=
:-500px;top:-500px;";document.body.appendChild(_c);_d=3D_c.contentWindow.=
document;dp.sh.Utils.CopyStyles(_d,window.document);_d.write("<div =
class=3D\""+_b.div.className.replace("collapsed","")+" =
printing\">"+_b.div.innerHTML+"</div>");_d.close();_c.contentWindow.focus=
();_c.contentWindow.print();alert("Printing...");document.body.removeChil=
d(_c);}},About:{label:"?",func:function(_e){var =
_f=3Dwindow.open("","_blank","dialog,width=3D300,height=3D150,scrollbars=3D=
0");var =
doc=3D_f.document;dp.sh.Utils.CopyStyles(doc,window.document);doc.write(d=
p.sh.Strings.AboutDialog.replace("{V}",dp.sh.Version));doc.close();_f.foc=
us();}}};dp.sh.Toolbar.Create=3Dfunction(_11){var =
div=3Ddocument.createElement("DIV");div.className=3D"tools";for(var _13 =
in dp.sh.Toolbar.Commands){var =
cmd=3Ddp.sh.Toolbar.Commands[_13];if(cmd.check!=3Dnull&&!cmd.check(_11)){=
continue;}div.innerHTML+=3D"<a href=3D\"#\" =
onclick=3D\"dp.sh.Toolbar.Command('"+_13+"',this);return =
false;\">"+cmd.label+"</a>";}return =
div;};dp.sh.Toolbar.Command=3Dfunction(_15,_16){var =
n=3D_16;while(n!=3Dnull&&n.className.indexOf("dp-highlighter")=3D=3D-1){n=
=3Dn.parentNode;}if(n!=3Dnull){dp.sh.Toolbar.Commands[_15].func(_16,n.hig=
hlighter);}};dp.sh.Utils.CopyStyles=3Dfunction(_18,_19){var =
_1a=3D_19.getElementsByTagName("link");for(var =
i=3D0;i<_1a.length;i++){if(_1a[i].rel.toLowerCase()=3D=3D"stylesheet"){_1=
8.write("<link type=3D\"text/css\" rel=3D\"stylesheet\" =
href=3D\""+_1a[i].href+"\"></link>");}}};dp.sh.RegexLib=3D{MultiLineCComm=
ents:new RegExp("/\\*[\\s\\S]*?\\*/","gm"),SingleLineCComments:new =
RegExp("//.*$","gm"),SingleLinePerlComments:new =
RegExp("#.*$","gm"),DoubleQuotedString:new =
RegExp("\"(?:\\.|(\\\\\\\")|[^\\\"\"])*\"","g"),SingleQuotedString:new =
RegExp("'(?:\\.|(\\\\\\')|[^\\''])*'","g")};dp.sh.Match=3Dfunction(_1c,_1=
d,css){this.value=3D_1c;this.index=3D_1d;this.length=3D_1c.length;this.cs=
s=3Dcss;};dp.sh.Highlighter=3Dfunction(){this.noGutter=3Dfalse;this.addCo=
ntrols=3Dtrue;this.collapse=3Dfalse;this.tabsToSpaces=3Dtrue;this.wrapCol=
umn=3D80;this.showColumns=3Dtrue;};dp.sh.Highlighter.SortCallback=3Dfunct=
ion(m1,m2){if(m1.index<m2.index){return =
-1;}else{if(m1.index>m2.index){return =
1;}else{if(m1.length<m2.length){return =
-1;}else{if(m1.length>m2.length){return 1;}}}}return =
0;};dp.sh.Highlighter.prototype.CreateElement=3Dfunction(_21){var =
_22=3Ddocument.createElement(_21);_22.highlighter=3Dthis;return =
_22;};dp.sh.Highlighter.prototype.GetMatches=3Dfunction(_23,css){var =
_25=3D0;var =
_26=3Dnull;while((_26=3D_23.exec(this.code))!=3Dnull){this.matches[this.m=
atches.length]=3Dnew =
dp.sh.Match(_26[0],_26.index,css);}};dp.sh.Highlighter.prototype.AddBit=3D=
function(str,css){if(str=3D=3Dnull||str.length=3D=3D0){return;}var =
_29=3Dthis.CreateElement("SPAN");str=3Dstr.replace(/&/g,"&amp;");str=3Dst=
r.replace(/ =
/g,"&nbsp;");str=3Dstr.replace(/</g,"&lt;");str=3Dstr.replace(/\n/gm,"&nb=
sp;<br>");if(css!=3Dnull){var _2a=3Dnew =
RegExp("<br>","gi");if(_2a.test(str)){var =
_2b=3Dstr.split("&nbsp;<br>");str=3D"";for(var =
i=3D0;i<_2b.length;i++){_29=3Dthis.CreateElement("SPAN");_29.className=3D=
css;_29.innerHTML=3D_2b[i];this.div.appendChild(_29);if(i+1<_2b.length){t=
his.div.appendChild(this.CreateElement("BR"));}}}else{_29.className=3Dcss=
;_29.innerHTML=3Dstr;this.div.appendChild(_29);}}else{_29.innerHTML=3Dstr=
;this.div.appendChild(_29);}};dp.sh.Highlighter.prototype.IsInside=3Dfunc=
tion(_2d){if(_2d=3D=3Dnull||_2d.length=3D=3D0){return false;}for(var =
i=3D0;i<this.matches.length;i++){var =
c=3Dthis.matches[i];if(c=3D=3Dnull){continue;}if((_2d.index>c.index)&&(_2=
d.index<c.index+c.length)){return true;}}return =
false;};dp.sh.Highlighter.prototype.ProcessRegexList=3Dfunction(){for(var=
 =
i=3D0;i<this.regexList.length;i++){this.GetMatches(this.regexList[i].rege=
x,this.regexList[i].css);}};dp.sh.Highlighter.prototype.ProcessSmartTabs=3D=
function(_31){var _32=3D_31.split("\n");var _33=3D"";var _34=3D4;var =
tab=3D"\t";function InsertSpaces(_36,pos,_38){var =
_39=3D_36.substr(0,pos);var _3a=3D_36.substr(pos+1,_36.length);var =
_3b=3D"";for(var i=3D0;i<_38;i++){_3b+=3D" ";}return =
_39+_3b+_3a;}function =
ProcessLine(_3d,_3e){if(_3d.indexOf(tab)=3D=3D-1){return _3d;}var =
pos=3D0;while((pos=3D_3d.indexOf(tab))!=3D-1){var =
_40=3D_3e-pos%_3e;_3d=3DInsertSpaces(_3d,pos,_40);}return _3d;}for(var =
i=3D0;i<_32.length;i++){_33+=3DProcessLine(_32[i],_34)+"\n";}return =
_33;};dp.sh.Highlighter.prototype.SwitchToList=3Dfunction(){var =
_42=3Dthis.div.innerHTML.replace(/<(br)\/?>/gi,"\n");var =
_43=3D_42.split("\n");if(this.addControls=3D=3Dtrue){this.bar.appendChild=
(dp.sh.Toolbar.Create(this));}if(this.showColumns){var =
div=3Dthis.CreateElement("div");var _45=3Dthis.CreateElement("div");var =
_46=3D10;var =
i=3D1;while(i<=3D150){if(i%_46=3D=3D0){div.innerHTML+=3Di;i+=3D(i+"").len=
gth;}else{div.innerHTML+=3D"&middot;";i++;}}_45.className=3D"columns";_45=
.appendChild(div);this.bar.appendChild(_45);}for(var =
i=3D0,lineIndex=3Dthis.firstLine;i<_43.length-1;i++,lineIndex++){var =
li=3Dthis.CreateElement("LI");var =
_4a=3Dthis.CreateElement("SPAN");li.className=3D(i%2=3D=3D0)?"alt":"";_4a=
.innerHTML=3D_43[i]+"&nbsp;";li.appendChild(_4a);this.ol.appendChild(li);=
}this.div.innerHTML=3D"";};dp.sh.Highlighter.prototype.Highlight=3Dfuncti=
on(_4b){function Trim(str){return =
str.replace(/^\s*(.*?)[\s\n]*$/g,"$1");}function Chop(str){return =
str.replace(/\n*$/,"").replace(/^\n*/,"");}function Unindent(str){var =
_4f=3Dstr.split("\n");var _50=3Dnew Array();var _51=3Dnew =
RegExp("^\\s*","g");var min=3D1000;for(var =
i=3D0;i<_4f.length&&min>0;i++){if(Trim(_4f[i]).length=3D=3D0){continue;}v=
ar =
_54=3D_51.exec(_4f[i]);if(_54!=3Dnull&&_54.length>0){min=3DMath.min(_54[0=
].length,min);}}if(min>0){for(var =
i=3D0;i<_4f.length;i++){_4f[i]=3D_4f[i].substr(min);}}return =
_4f.join("\n");}function Copy(_56,_57,_58){return =
_56.substr(_57,_58-_57);}var =
pos=3D0;this.originalCode=3D_4b;this.code=3DChop(Unindent(_4b));this.div=3D=
this.CreateElement("DIV");this.bar=3Dthis.CreateElement("DIV");this.ol=3D=
this.CreateElement("OL");this.matches=3Dnew =
Array();this.div.className=3D"dp-highlighter";this.div.highlighter=3Dthis=
;this.bar.className=3D"bar";this.ol.start=3Dthis.firstLine;if(this.CssCla=
ss!=3Dnull){this.ol.className=3Dthis.CssClass;}if(this.collapse){this.div=
.className+=3D" collapsed";}if(this.noGutter){this.div.className+=3D" =
nogutter";}if(this.tabsToSpaces=3D=3Dtrue){this.code=3Dthis.ProcessSmartT=
abs(this.code);}this.ProcessRegexList();if(this.matches.length=3D=3D0){th=
is.AddBit(this.code,null);this.SwitchToList();this.div.appendChild(this.o=
l);return;}this.matches=3Dthis.matches.sort(dp.sh.Highlighter.SortCallbac=
k);for(var =
i=3D0;i<this.matches.length;i++){if(this.IsInside(this.matches[i])){this.=
matches[i]=3Dnull;}}for(var i=3D0;i<this.matches.length;i++){var =
_5c=3Dthis.matches[i];if(_5c=3D=3Dnull||_5c.length=3D=3D0){continue;}this=
.AddBit(Copy(this.code,pos,_5c.index),null);this.AddBit(_5c.value,_5c.css=
);pos=3D_5c.index+_5c.length;}this.AddBit(this.code.substr(pos),null);thi=
s.SwitchToList();this.div.appendChild(this.bar);this.div.appendChild(this=
.ol);};dp.sh.Highlighter.prototype.GetKeywords=3Dfunction(str){return =
"\\b"+str.replace(/ =
/g,"\\b|\\b")+"\\b";};dp.sh.HighlightAll=3Dfunction(_5e,_5f,_60,_61,_62,_=
63){function FindValue(){var a=3Darguments;for(var =
i=3D0;i<a.length;i++){if(a[i]=3D=3Dnull){continue;}if(typeof =
(a[i])=3D=3D"string"&&a[i]!=3D""){return a[i]+"";}if(typeof =
(a[i])=3D=3D"object"&&a[i].value!=3D""){return a[i].value+"";}}return =
null;}function IsOptionSet(_66,_67){for(var =
i=3D0;i<_67.length;i++){if(_67[i]=3D=3D_66){return true;}}return =
false;}function GetOptionValue(_69,_6a,_6b){var _6c=3Dnew =
RegExp("^"+_69+"\\[(\\w+)\\]$","gi");var _6d=3Dnull;for(var =
i=3D0;i<_6a.length;i++){if((_6d=3D_6c.exec(_6a[i]))!=3Dnull){return =
_6d[1];}}return _6b;}var _6f=3Ddocument.getElementsByName(_5e);var =
_70=3Dnull;var _71=3Dnew Object();var =
_72=3D"value";if(_6f=3D=3Dnull){return;}for(var _73 in =
dp.sh.Brushes){var =
_74=3Ddp.sh.Brushes[_73].Aliases;if(_74=3D=3Dnull){continue;}for(var =
i=3D0;i<_74.length;i++){_71[_74[i]]=3D_73;}}for(var =
i=3D0;i<_6f.length;i++){var _77=3D_6f[i];var =
_78=3DFindValue(_77.attributes["class"],_77.className,_77.attributes["lan=
guage"],_77.language);var =
_79=3D"";if(_78=3D=3Dnull){continue;}_78=3D_78.split(":");_79=3D_78[0].to=
LowerCase();if(_71[_79]=3D=3Dnull){continue;}_70=3Dnew =
dp.sh.Brushes[_71[_79]]();_77.style.display=3D"none";_70.noGutter=3D(_5f=3D=
=3Dnull)?IsOptionSet("nogutter",_78):!_5f;_70.addControls=3D(_60=3D=3Dnul=
l)?!IsOptionSet("nocontrols",_78):_60;_70.collapse=3D(_61=3D=3Dnull)?IsOp=
tionSet("collapse",_78):_61;_70.showColumns=3D(_63=3D=3Dnull)?IsOptionSet=
("showcolumns",_78):_63;_70.firstLine=3D(_62=3D=3Dnull)?parseInt(GetOptio=
nValue("firstline",_78,1)):_62;_70.Highlight(_77[_72]);_77.parentNode.ins=
ertBefore(_70.div,_77);}};
------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/scripts/shBrushGroovy.js

dp.sh.Brushes.Groovy =3D function()=0A=
{=0A=
	var keywords =3D	'as assert break case catch class continue def default =
do else extends finally ' +=0A=
                        'if in implements import instanceof interface =
new package property return switch ' +=0A=
                        'throw throws try while';=0A=
        var types    =3D  'void boolean byte char short int long float =
double';=0A=
        var modifiers =3D 'public protected private static';=0A=
        var constants =3D 'null';=0A=
        var methods   =3D 'allProperties count get size '+=0A=
                        'collect each eachProperty eachPropertyName =
eachWithIndex find findAll ' +=0A=
                        'findIndexOf grep inject max min reverseEach =
sort ' +=0A=
                        'asImmutable asSynchronized flatten intersect =
join pop reverse subMap toList ' +=0A=
                        'padRight padLeft contains eachMatch toCharacter =
toLong toUrl tokenize ' +=0A=
                        'eachFile eachFileRecurse eachB yte eachLine =
readBytes readLine getText ' +=0A=
                        'splitEachLine withReader append encodeBase64 =
decodeBase64 filterLine ' +=0A=
                        'transformChar transformLine withOutputStream =
withPrintWriter withStream ' +=0A=
                        'withStreams withWriter withWriterAppend write =
writeLine '+=0A=
                        'dump inspect invokeMethod print println step =
times upto use waitForOrKill '+=0A=
                        'getText';=0A=
=0A=
	this.regexList =3D [=0A=
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },	// =
one line comments=0A=
		{ regex: dp.sh.RegexLib.MultiLineCComments,				css: 'comment' },	// =
multiline comments=0A=
		{ regex: dp.sh.RegexLib.DoubleQuotedString,				css: 'string' },	// =
strings=0A=
		{ regex: dp.sh.RegexLib.SingleQuotedString,				css: 'string' },	// =
strings=0A=
		{ regex: new RegExp('""".*"""','g'),		css: 'string' },	// GStrings=0A=
		{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	=
css: 'number' },	// numbers=0A=
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),			css: =
'keyword' },	// goovy keyword=0A=
		{ regex: new RegExp(this.GetKeywords(types), 'gm'),			css: 'type' },		=
// goovy/java type=0A=
		{ regex: new RegExp(this.GetKeywords(modifiers), 'gm'),			css: =
'modifier' },	// java modifier=0A=
		{ regex: new RegExp(this.GetKeywords(constants), 'gm'),			css: =
'constant' },	// constants=0A=
		{ regex: new RegExp(this.GetKeywords(methods), 'gm'),			css: 'method' =
}		// methods=0A=
		];=0A=
=0A=
	this.CssClass =3D 'dp-g';=0A=
}=0A=
=0A=
dp.sh.Brushes.Groovy.prototype	=3D new dp.sh.Highlighter();=0A=
dp.sh.Brushes.Groovy.Aliases	=3D ['groovy'];=0A=

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/scripts/shBrushJava.js

dp.sh.Brushes.Java =3D function()=0A=
{=0A=
	var keywords =3D	'abstract assert boolean break byte case catch char =
class const ' +=0A=
			'continue default do double else enum extends ' +=0A=
			'false final finally float for goto if implements import ' +=0A=
			'instanceof int interface long native new null ' +=0A=
			'package private protected public return ' +=0A=
			'short static strictfp super switch synchronized this throw throws =
true ' +=0A=
			'transient try void volatile while';=0A=
=0A=
	this.regexList =3D [=0A=
		{ regex: dp.sh.RegexLib.SingleLineCComments,							css: 'comment' },		=
// one line comments=0A=
		{ regex: dp.sh.RegexLib.MultiLineCComments,								css: 'comment' },		=
// multiline comments=0A=
		{ regex: dp.sh.RegexLib.DoubleQuotedString,								css: 'string' },		=
// strings=0A=
		{ regex: dp.sh.RegexLib.SingleQuotedString,								css: 'string' },		=
// strings=0A=
		{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	=
css: 'number' },		// numbers=0A=
		{ regex: new RegExp('(?!\\@interface\\b)\\@[\\$\\w]+\\b', 'g'),			css: =
'annotation' },	// annotation @anno=0A=
		{ regex: new RegExp('\\@interface\\b', 'g'),							css: 'keyword' },		=
// @interface keyword=0A=
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),					css: =
'keyword' }		// java keyword=0A=
		];=0A=
=0A=
	this.CssClass =3D 'dp-j';=0A=
}=0A=
=0A=
dp.sh.Brushes.Java.prototype	=3D new dp.sh.Highlighter();=0A=
dp.sh.Brushes.Java.Aliases	=3D ['java'];=0A=

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/scripts/shBrushJScript.js

dp.sh.Brushes.JScript =3D function()=0A=
{=0A=
	var keywords =3D	'abstract boolean break byte case catch char class =
const continue debugger ' +=0A=
					'default delete do double else enum export extends false final =
finally float ' +=0A=
					'for function goto if implements import in instanceof int interface =
long native ' +=0A=
					'new null package private protected public return short static =
super switch ' +=0A=
					'synchronized this throw throws transient true try typeof var void =
volatile while with';=0A=
=0A=
	this.regexList =3D [=0A=
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments=0A=
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments=0A=
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
double quoted strings=0A=
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
single quoted strings=0A=
		{ regex: new RegExp('^\\s*#.*', 'gm'),						css: 'preprocessor' },		// =
preprocessor tags like #region and #endregion=0A=
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}			// keywords=0A=
		];=0A=
=0A=
	this.CssClass =3D 'dp-c';=0A=
}=0A=
=0A=
dp.sh.Brushes.JScript.prototype	=3D new dp.sh.Highlighter();=0A=
dp.sh.Brushes.JScript.Aliases	=3D ['js', 'jscript', 'javascript'];=0A=

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/scripts/shBrushRuby.js

/* Ruby 1.8.4 syntax contributed by Erik Peterson */=0A=
dp.sh.Brushes.Ruby =3D function()=0A=
{=0A=
  var keywords =3D	'alias and BEGIN begin break case class def =
define_method defined do each else elsif ' +=0A=
					'END end ensure false for if in module new next nil not or raise =
redo rescue retry return ' +=0A=
					'self super then throw true undef unless until when while yield';=0A=
=0A=
  var builtins =3D	'Array Bignum Binding Class Continuation Dir =
Exception FalseClass File::Stat File Fixnum Fload ' +=0A=
					'Hash Integer IO MatchData Method Module NilClass Numeric Object =
Proc Range Regexp String Struct::TMS Symbol ' +=0A=
					'ThreadGroup Thread Time TrueClass'=0A=
=0A=
	this.regexList =3D [=0A=
		{ regex: dp.sh.RegexLib.SingleLinePerlComments,			css: 'comment' },	// =
one line comments=0A=
		{ regex: dp.sh.RegexLib.DoubleQuotedString,				css: 'string' },	// =
double quoted strings=0A=
		{ regex: dp.sh.RegexLib.SingleQuotedString,				css: 'string' },	// =
single quoted strings=0A=
		{ regex: new RegExp(':[a-z][A-Za-z0-9_]*', 'g'),		css: 'symbol' },	// =
symbols=0A=
		{ regex: new RegExp('[\\$|@|@@]\\w+', 'g'),				css: 'variable' },	// =
$global, @instance, and @@class variables=0A=
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),	css: 'keyword' =
},	// keywords=0A=
		{ regex: new RegExp(this.GetKeywords(builtins), 'gm'),	css: 'builtin' =
}	// builtins=0A=
		];=0A=
=0A=
	this.CssClass =3D 'dp-rb';=0A=
}=0A=
=0A=
dp.sh.Brushes.Ruby.prototype	=3D new dp.sh.Highlighter();=0A=
dp.sh.Brushes.Ruby.Aliases	=3D ['ruby', 'rails'];=0A=

------=_NextPart_000_00C7_01C97A2D.3CD57970
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://json-lib.sourceforge.net/scripts/shBrushXml.js

dp.sh.Brushes.Xml =3D function()=0A=
{=0A=
	this.CssClass =3D 'dp-xml';=0A=
}=0A=
=0A=
dp.sh.Brushes.Xml.prototype	=3D new dp.sh.Highlighter();=0A=
dp.sh.Brushes.Xml.Aliases	=3D ['xml', 'xhtml', 'xslt', 'html', 'xhtml'];=0A=
=0A=
dp.sh.Brushes.Xml.prototype.ProcessRegexList =3D function()=0A=
{=0A=
	function push(array, value)=0A=
	{=0A=
		array[array.length] =3D value;=0A=
	}=0A=
	=0A=
	/* If only there was a way to get index of a group within a match, the =
whole XML=0A=
	   could be matched with the expression looking something like that:=0A=
	=0A=
	   (<!\[CDATA\[\s*.*\s*\]\]>)=0A=
	   | (<!--\s*.*\s*?-->)=0A=
	   | (<)*(\w+)*\s*(\w+)\s*=3D\s*(".*?"|'.*?'|\w+)(/*>)*=0A=
	   | (</?)(.*?)(/?>)=0A=
	*/=0A=
	var index	=3D 0;=0A=
	var match	=3D null;=0A=
	var regex	=3D null;=0A=
=0A=
	// Match CDATA in the following format <![ ... [ ... ]]>=0A=
	// <\!\[[\w\s]*?\[(.|\s)*?\]\]>=0A=
	this.GetMatches(new RegExp('<\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\]>', =
'gm'), 'cdata');=0A=
	=0A=
	// Match comments=0A=
	// <!--\s*.*\s*?-->=0A=
	this.GetMatches(new RegExp('<!--\\s*.*\\s*?-->', 'gm'), 'comments');=0A=
=0A=
	// Match attributes and their values=0A=
	// (:|\w+)\s*=3D\s*(".*?"|\'.*?\'|\w+)*=0A=
	regex =3D new RegExp('([:\\w-\.]+)\\s*=3D\\s*(".*?"|\'.*?\'|\\w+)*', =
'gm'); // Thanks to Tomi Blinnikka of Yahoo! for fixing namespaces in =
attributes=0A=
	while((match =3D regex.exec(this.code)) !=3D null)=0A=
	{=0A=
		push(this.matches, new dp.sh.Match(match[1], match.index, =
'attribute'));=0A=
	=0A=
		// if xml is invalid and attribute has no property value, ignore it	=0A=
		if(match[2] !=3D undefined)=0A=
		{=0A=
			push(this.matches, new dp.sh.Match(match[2], match.index + =
match[0].indexOf(match[2]), 'attribute-value'));=0A=
		}=0A=
	}=0A=
=0A=
	// Match opening and closing tag brackets=0A=
	// </*\?*(?!\!)|/*\?*>=0A=
	this.GetMatches(new RegExp('</*\\?*(?!\\!)|/*\\?*>', 'gm'), 'tag');=0A=
=0A=
	// Match tag names=0A=
	// </*\?*\s*(\w+)=0A=
	regex =3D new RegExp('</*\\?*\\s*([:\\w-\.]+)', 'gm');=0A=
	while((match =3D regex.exec(this.code)) !=3D null)=0A=
	{=0A=
		push(this.matches, new dp.sh.Match(match[1], match.index + =
match[0].indexOf(match[1]), 'tag-name'));=0A=
	}=0A=
}=0A=

------=_NextPart_000_00C7_01C97A2D.3CD57970--
